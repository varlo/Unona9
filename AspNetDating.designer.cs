#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspNetDating.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AspNetDating8")]
	public partial class AspNetDatingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAbuseReport(AbuseReport instance);
    partial void UpdateAbuseReport(AbuseReport instance);
    partial void DeleteAbuseReport(AbuseReport instance);
    partial void InsertVote(Vote instance);
    partial void UpdateVote(Vote instance);
    partial void DeleteVote(Vote instance);
    partial void InsertAdComment(AdComment instance);
    partial void UpdateAdComment(AdComment instance);
    partial void DeleteAdComment(AdComment instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAdPhoto(AdPhoto instance);
    partial void UpdateAdPhoto(AdPhoto instance);
    partial void DeleteAdPhoto(AdPhoto instance);
    partial void InsertAd(Ad instance);
    partial void UpdateAd(Ad instance);
    partial void DeleteAd(Ad instance);
    partial void InsertAdsCategory(AdsCategory instance);
    partial void UpdateAdsCategory(AdsCategory instance);
    partial void DeleteAdsCategory(AdsCategory instance);
    partial void InsertAffiliateBanner(AffiliateBanner instance);
    partial void UpdateAffiliateBanner(AffiliateBanner instance);
    partial void DeleteAffiliateBanner(AffiliateBanner instance);
    partial void InsertAffiliateCommission(AffiliateCommission instance);
    partial void UpdateAffiliateCommission(AffiliateCommission instance);
    partial void DeleteAffiliateCommission(AffiliateCommission instance);
    partial void InsertAffiliate(Affiliate instance);
    partial void UpdateAffiliate(Affiliate instance);
    partial void DeleteAffiliate(Affiliate instance);
    partial void InsertAffiliatesHistory(AffiliatesHistory instance);
    partial void UpdateAffiliatesHistory(AffiliatesHistory instance);
    partial void DeleteAffiliatesHistory(AffiliatesHistory instance);
    partial void Insertarchive_Message(archive_Message instance);
    partial void Updatearchive_Message(archive_Message instance);
    partial void Deletearchive_Message(archive_Message instance);
    partial void Insertarchive_Photo(archive_Photo instance);
    partial void Updatearchive_Photo(archive_Photo instance);
    partial void Deletearchive_Photo(archive_Photo instance);
    partial void Insertarchive_ProfileAnswer(archive_ProfileAnswer instance);
    partial void Updatearchive_ProfileAnswer(archive_ProfileAnswer instance);
    partial void Deletearchive_ProfileAnswer(archive_ProfileAnswer instance);
    partial void InsertAudioAccess(AudioAccess instance);
    partial void UpdateAudioAccess(AudioAccess instance);
    partial void DeleteAudioAccess(AudioAccess instance);
    partial void InsertAudioUpload(AudioUpload instance);
    partial void UpdateAudioUpload(AudioUpload instance);
    partial void DeleteAudioUpload(AudioUpload instance);
    partial void InsertBannerCode(BannerCode instance);
    partial void UpdateBannerCode(BannerCode instance);
    partial void DeleteBannerCode(BannerCode instance);
    partial void InsertBillingPlan(BillingPlan instance);
    partial void UpdateBillingPlan(BillingPlan instance);
    partial void DeleteBillingPlan(BillingPlan instance);
    partial void InsertBlockedUser(BlockedUser instance);
    partial void UpdateBlockedUser(BlockedUser instance);
    partial void DeleteBlockedUser(BlockedUser instance);
    partial void InsertBlogPostComment(BlogPostComment instance);
    partial void UpdateBlogPostComment(BlogPostComment instance);
    partial void DeleteBlogPostComment(BlogPostComment instance);
    partial void InsertBlogPost(BlogPost instance);
    partial void UpdateBlogPost(BlogPost instance);
    partial void DeleteBlogPost(BlogPost instance);
    partial void InsertBlog(Blog instance);
    partial void UpdateBlog(Blog instance);
    partial void DeleteBlog(Blog instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertChatMessage(ChatMessage instance);
    partial void UpdateChatMessage(ChatMessage instance);
    partial void DeleteChatMessage(ChatMessage instance);
    partial void InsertChatUser(ChatUser instance);
    partial void UpdateChatUser(ChatUser instance);
    partial void DeleteChatUser(ChatUser instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertCommunityPhotoApproval(CommunityPhotoApproval instance);
    partial void UpdateCommunityPhotoApproval(CommunityPhotoApproval instance);
    partial void DeleteCommunityPhotoApproval(CommunityPhotoApproval instance);
    partial void InsertCommunityProfileApproval(CommunityProfileApproval instance);
    partial void UpdateCommunityProfileApproval(CommunityProfileApproval instance);
    partial void DeleteCommunityProfileApproval(CommunityProfileApproval instance);
    partial void InsertContentPage(ContentPage instance);
    partial void UpdateContentPage(ContentPage instance);
    partial void DeleteContentPage(ContentPage instance);
    partial void InsertContentView(ContentView instance);
    partial void UpdateContentView(ContentView instance);
    partial void DeleteContentView(ContentView instance);
    partial void InsertCreditsHistory(CreditsHistory instance);
    partial void UpdateCreditsHistory(CreditsHistory instance);
    partial void DeleteCreditsHistory(CreditsHistory instance);
    partial void InsertCreditsPackage(CreditsPackage instance);
    partial void UpdateCreditsPackage(CreditsPackage instance);
    partial void DeleteCreditsPackage(CreditsPackage instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertEcard(Ecard instance);
    partial void UpdateEcard(Ecard instance);
    partial void DeleteEcard(Ecard instance);
    partial void InsertEcardType(EcardType instance);
    partial void UpdateEcardType(EcardType instance);
    partial void DeleteEcardType(EcardType instance);
    partial void InsertEmailQueue(EmailQueue instance);
    partial void UpdateEmailQueue(EmailQueue instance);
    partial void DeleteEmailQueue(EmailQueue instance);
    partial void InsertEmailTemplate(EmailTemplate instance);
    partial void UpdateEmailTemplate(EmailTemplate instance);
    partial void DeleteEmailTemplate(EmailTemplate instance);
    partial void InsertEstablishedCommunication(EstablishedCommunication instance);
    partial void UpdateEstablishedCommunication(EstablishedCommunication instance);
    partial void DeleteEstablishedCommunication(EstablishedCommunication instance);
    partial void InsertEventComment(EventComment instance);
    partial void UpdateEventComment(EventComment instance);
    partial void DeleteEventComment(EventComment instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertFavourite(Favourite instance);
    partial void UpdateFavourite(Favourite instance);
    partial void DeleteFavourite(Favourite instance);
    partial void InsertFriend(Friend instance);
    partial void UpdateFriend(Friend instance);
    partial void DeleteFriend(Friend instance);
    partial void InsertGroupBan(GroupBan instance);
    partial void UpdateGroupBan(GroupBan instance);
    partial void DeleteGroupBan(GroupBan instance);
    partial void InsertGroupEvent(GroupEvent instance);
    partial void UpdateGroupEvent(GroupEvent instance);
    partial void DeleteGroupEvent(GroupEvent instance);
    partial void InsertGroupEventsAttender(GroupEventsAttender instance);
    partial void UpdateGroupEventsAttender(GroupEventsAttender instance);
    partial void DeleteGroupEventsAttender(GroupEventsAttender instance);
    partial void InsertGroupEventsComment(GroupEventsComment instance);
    partial void UpdateGroupEventsComment(GroupEventsComment instance);
    partial void DeleteGroupEventsComment(GroupEventsComment instance);
    partial void InsertGroupMember(GroupMember instance);
    partial void UpdateGroupMember(GroupMember instance);
    partial void DeleteGroupMember(GroupMember instance);
    partial void InsertGroupPhoto(GroupPhoto instance);
    partial void UpdateGroupPhoto(GroupPhoto instance);
    partial void DeleteGroupPhoto(GroupPhoto instance);
    partial void InsertGroupPollsAnswer(GroupPollsAnswer instance);
    partial void UpdateGroupPollsAnswer(GroupPollsAnswer instance);
    partial void DeleteGroupPollsAnswer(GroupPollsAnswer instance);
    partial void InsertGroupPollsChoice(GroupPollsChoice instance);
    partial void UpdateGroupPollsChoice(GroupPollsChoice instance);
    partial void DeleteGroupPollsChoice(GroupPollsChoice instance);
    partial void InsertGroupPost(GroupPost instance);
    partial void UpdateGroupPost(GroupPost instance);
    partial void DeleteGroupPost(GroupPost instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupsCategory(GroupsCategory instance);
    partial void UpdateGroupsCategory(GroupsCategory instance);
    partial void DeleteGroupsCategory(GroupsCategory instance);
    partial void InsertGroupTopic(GroupTopic instance);
    partial void UpdateGroupTopic(GroupTopic instance);
    partial void DeleteGroupTopic(GroupTopic instance);
    partial void InsertGroupTopicSubscription(GroupTopicSubscription instance);
    partial void UpdateGroupTopicSubscription(GroupTopicSubscription instance);
    partial void DeleteGroupTopicSubscription(GroupTopicSubscription instance);
    partial void InsertHourlyStat(HourlyStat instance);
    partial void UpdateHourlyStat(HourlyStat instance);
    partial void DeleteHourlyStat(HourlyStat instance);
    partial void InsertInterest(Interest instance);
    partial void UpdateInterest(Interest instance);
    partial void DeleteInterest(Interest instance);
    partial void InsertIPLog(IPLog instance);
    partial void UpdateIPLog(IPLog instance);
    partial void DeleteIPLog(IPLog instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMessagesHistoryCache(MessagesHistoryCache instance);
    partial void UpdateMessagesHistoryCache(MessagesHistoryCache instance);
    partial void DeleteMessagesHistoryCache(MessagesHistoryCache instance);
    partial void InsertMessagesSandbox(MessagesSandbox instance);
    partial void UpdateMessagesSandbox(MessagesSandbox instance);
    partial void DeleteMessagesSandbox(MessagesSandbox instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertPaymentHistory(PaymentHistory instance);
    partial void UpdatePaymentHistory(PaymentHistory instance);
    partial void DeletePaymentHistory(PaymentHistory instance);
    partial void InsertPendingGuid(PendingGuid instance);
    partial void UpdatePendingGuid(PendingGuid instance);
    partial void DeletePendingGuid(PendingGuid instance);
    partial void InsertPhotoAccess(PhotoAccess instance);
    partial void UpdatePhotoAccess(PhotoAccess instance);
    partial void DeletePhotoAccess(PhotoAccess instance);
    partial void InsertPhotoAlbum(PhotoAlbum instance);
    partial void UpdatePhotoAlbum(PhotoAlbum instance);
    partial void DeletePhotoAlbum(PhotoAlbum instance);
    partial void InsertPhotoComment(PhotoComment instance);
    partial void UpdatePhotoComment(PhotoComment instance);
    partial void DeletePhotoComment(PhotoComment instance);
    partial void InsertPhotoContestEntry(PhotoContestEntry instance);
    partial void UpdatePhotoContestEntry(PhotoContestEntry instance);
    partial void DeletePhotoContestEntry(PhotoContestEntry instance);
    partial void InsertPhotoContestRank(PhotoContestRank instance);
    partial void UpdatePhotoContestRank(PhotoContestRank instance);
    partial void DeletePhotoContestRank(PhotoContestRank instance);
    partial void InsertPhotoContest(PhotoContest instance);
    partial void UpdatePhotoContest(PhotoContest instance);
    partial void DeletePhotoContest(PhotoContest instance);
    partial void InsertPhotoContestVote(PhotoContestVote instance);
    partial void UpdatePhotoContestVote(PhotoContestVote instance);
    partial void DeletePhotoContestVote(PhotoContestVote instance);
    partial void InsertPhotoNote(PhotoNote instance);
    partial void UpdatePhotoNote(PhotoNote instance);
    partial void DeletePhotoNote(PhotoNote instance);
    partial void InsertPhotoRating(PhotoRating instance);
    partial void UpdatePhotoRating(PhotoRating instance);
    partial void DeletePhotoRating(PhotoRating instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertPollAnswer(PollAnswer instance);
    partial void UpdatePollAnswer(PollAnswer instance);
    partial void DeletePollAnswer(PollAnswer instance);
    partial void InsertPollChoice(PollChoice instance);
    partial void UpdatePollChoice(PollChoice instance);
    partial void DeletePollChoice(PollChoice instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertProfileAnswer(ProfileAnswer instance);
    partial void UpdateProfileAnswer(ProfileAnswer instance);
    partial void DeleteProfileAnswer(ProfileAnswer instance);
    partial void InsertProfileChoice(ProfileChoice instance);
    partial void UpdateProfileChoice(ProfileChoice instance);
    partial void DeleteProfileChoice(ProfileChoice instance);
    partial void InsertProfileQuestion(ProfileQuestion instance);
    partial void UpdateProfileQuestion(ProfileQuestion instance);
    partial void DeleteProfileQuestion(ProfileQuestion instance);
    partial void InsertProfileTopic(ProfileTopic instance);
    partial void UpdateProfileTopic(ProfileTopic instance);
    partial void DeleteProfileTopic(ProfileTopic instance);
    partial void InsertProfileView(ProfileView instance);
    partial void UpdateProfileView(ProfileView instance);
    partial void DeleteProfileView(ProfileView instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertRelationship(Relationship instance);
    partial void UpdateRelationship(Relationship instance);
    partial void DeleteRelationship(Relationship instance);
    partial void InsertSavedSearch(SavedSearch instance);
    partial void UpdateSavedSearch(SavedSearch instance);
    partial void DeleteSavedSearch(SavedSearch instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertSubscription(Subscription instance);
    partial void UpdateSubscription(Subscription instance);
    partial void DeleteSubscription(Subscription instance);
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertTranslation(Translation instance);
    partial void UpdateTranslation(Translation instance);
    partial void DeleteTranslation(Translation instance);
    partial void InsertUnlockedSection(UnlockedSection instance);
    partial void UpdateUnlockedSection(UnlockedSection instance);
    partial void DeleteUnlockedSection(UnlockedSection instance);
    partial void InsertUserLevel(UserLevel instance);
    partial void UpdateUserLevel(UserLevel instance);
    partial void DeleteUserLevel(UserLevel instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserScoresLog(UserScoresLog instance);
    partial void UpdateUserScoresLog(UserScoresLog instance);
    partial void DeleteUserScoresLog(UserScoresLog instance);
    partial void InsertVerifiedUser(VerifiedUser instance);
    partial void UpdateVerifiedUser(VerifiedUser instance);
    partial void DeleteVerifiedUser(VerifiedUser instance);
    partial void InsertVideoAccess(VideoAccess instance);
    partial void UpdateVideoAccess(VideoAccess instance);
    partial void DeleteVideoAccess(VideoAccess instance);
    partial void InsertVideoEmbed(VideoEmbed instance);
    partial void UpdateVideoEmbed(VideoEmbed instance);
    partial void DeleteVideoEmbed(VideoEmbed instance);
    partial void InsertVideoUpload(VideoUpload instance);
    partial void UpdateVideoUpload(VideoUpload instance);
    partial void DeleteVideoUpload(VideoUpload instance);
    partial void InsertTwitterCredential(TwitterCredential instance);
    partial void UpdateTwitterCredential(TwitterCredential instance);
    partial void DeleteTwitterCredential(TwitterCredential instance);
    partial void InsertFacebookCredential(FacebookCredential instance);
    partial void UpdateFacebookCredential(FacebookCredential instance);
    partial void DeleteFacebookCredential(FacebookCredential instance);
    #endregion
		
		public AspNetDatingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["aspnetdating"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetDatingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetDatingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetDatingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetDatingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AbuseReport> AbuseReports
		{
			get
			{
				return this.GetTable<AbuseReport>();
			}
		}
		
		public System.Data.Linq.Table<Vote> Votes
		{
			get
			{
				return this.GetTable<Vote>();
			}
		}
		
		public System.Data.Linq.Table<AdComment> AdComments
		{
			get
			{
				return this.GetTable<AdComment>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AdPhoto> AdPhotos
		{
			get
			{
				return this.GetTable<AdPhoto>();
			}
		}
		
		public System.Data.Linq.Table<Ad> Ads
		{
			get
			{
				return this.GetTable<Ad>();
			}
		}
		
		public System.Data.Linq.Table<AdsCategory> AdsCategories
		{
			get
			{
				return this.GetTable<AdsCategory>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateBanner> AffiliateBanners
		{
			get
			{
				return this.GetTable<AffiliateBanner>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateCommission> AffiliateCommissions
		{
			get
			{
				return this.GetTable<AffiliateCommission>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate> Affiliates
		{
			get
			{
				return this.GetTable<Affiliate>();
			}
		}
		
		public System.Data.Linq.Table<AffiliatesHistory> AffiliatesHistories
		{
			get
			{
				return this.GetTable<AffiliatesHistory>();
			}
		}
		
		public System.Data.Linq.Table<archive_Message> archive_Messages
		{
			get
			{
				return this.GetTable<archive_Message>();
			}
		}
		
		public System.Data.Linq.Table<archive_Photo> archive_Photos
		{
			get
			{
				return this.GetTable<archive_Photo>();
			}
		}
		
		public System.Data.Linq.Table<archive_ProfileAnswer> archive_ProfileAnswers
		{
			get
			{
				return this.GetTable<archive_ProfileAnswer>();
			}
		}
		
		public System.Data.Linq.Table<AudioAccess> AudioAccesses
		{
			get
			{
				return this.GetTable<AudioAccess>();
			}
		}
		
		public System.Data.Linq.Table<AudioUpload> AudioUploads
		{
			get
			{
				return this.GetTable<AudioUpload>();
			}
		}
		
		public System.Data.Linq.Table<BannerCode> BannerCodes
		{
			get
			{
				return this.GetTable<BannerCode>();
			}
		}
		
		public System.Data.Linq.Table<BillingPlan> BillingPlans
		{
			get
			{
				return this.GetTable<BillingPlan>();
			}
		}
		
		public System.Data.Linq.Table<BlockedUser> BlockedUsers
		{
			get
			{
				return this.GetTable<BlockedUser>();
			}
		}
		
		public System.Data.Linq.Table<BlogPostComment> BlogPostComments
		{
			get
			{
				return this.GetTable<BlogPostComment>();
			}
		}
		
		public System.Data.Linq.Table<BlogPost> BlogPosts
		{
			get
			{
				return this.GetTable<BlogPost>();
			}
		}
		
		public System.Data.Linq.Table<Blog> Blogs
		{
			get
			{
				return this.GetTable<Blog>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<ChatBan> ChatBans
		{
			get
			{
				return this.GetTable<ChatBan>();
			}
		}
		
		public System.Data.Linq.Table<ChatMessage> ChatMessages
		{
			get
			{
				return this.GetTable<ChatMessage>();
			}
		}
		
		public System.Data.Linq.Table<ChatUser> ChatUsers
		{
			get
			{
				return this.GetTable<ChatUser>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<CommunityPhotoApproval> CommunityPhotoApprovals
		{
			get
			{
				return this.GetTable<CommunityPhotoApproval>();
			}
		}
		
		public System.Data.Linq.Table<CommunityProfileApproval> CommunityProfileApprovals
		{
			get
			{
				return this.GetTable<CommunityProfileApproval>();
			}
		}
		
		public System.Data.Linq.Table<ContentPage> ContentPages
		{
			get
			{
				return this.GetTable<ContentPage>();
			}
		}
		
		public System.Data.Linq.Table<ContentView> ContentViews
		{
			get
			{
				return this.GetTable<ContentView>();
			}
		}
		
		public System.Data.Linq.Table<CreditsHistory> CreditsHistories
		{
			get
			{
				return this.GetTable<CreditsHistory>();
			}
		}
		
		public System.Data.Linq.Table<CreditsPackage> CreditsPackages
		{
			get
			{
				return this.GetTable<CreditsPackage>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<Ecard> Ecards
		{
			get
			{
				return this.GetTable<Ecard>();
			}
		}
		
		public System.Data.Linq.Table<EcardType> EcardTypes
		{
			get
			{
				return this.GetTable<EcardType>();
			}
		}
		
		public System.Data.Linq.Table<EmailQueue> EmailQueues
		{
			get
			{
				return this.GetTable<EmailQueue>();
			}
		}
		
		public System.Data.Linq.Table<EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<EstablishedCommunication> EstablishedCommunications
		{
			get
			{
				return this.GetTable<EstablishedCommunication>();
			}
		}
		
		public System.Data.Linq.Table<EventComment> EventComments
		{
			get
			{
				return this.GetTable<EventComment>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Favourite> Favourites
		{
			get
			{
				return this.GetTable<Favourite>();
			}
		}
		
		public System.Data.Linq.Table<Friend> Friends
		{
			get
			{
				return this.GetTable<Friend>();
			}
		}
		
		public System.Data.Linq.Table<GroupBan> GroupBans
		{
			get
			{
				return this.GetTable<GroupBan>();
			}
		}
		
		public System.Data.Linq.Table<GroupEvent> GroupEvents
		{
			get
			{
				return this.GetTable<GroupEvent>();
			}
		}
		
		public System.Data.Linq.Table<GroupEventsAttender> GroupEventsAttenders
		{
			get
			{
				return this.GetTable<GroupEventsAttender>();
			}
		}
		
		public System.Data.Linq.Table<GroupEventsComment> GroupEventsComments
		{
			get
			{
				return this.GetTable<GroupEventsComment>();
			}
		}
		
		public System.Data.Linq.Table<GroupMember> GroupMembers
		{
			get
			{
				return this.GetTable<GroupMember>();
			}
		}
		
		public System.Data.Linq.Table<GroupPhoto> GroupPhotos
		{
			get
			{
				return this.GetTable<GroupPhoto>();
			}
		}
		
		public System.Data.Linq.Table<GroupPollsAnswer> GroupPollsAnswers
		{
			get
			{
				return this.GetTable<GroupPollsAnswer>();
			}
		}
		
		public System.Data.Linq.Table<GroupPollsChoice> GroupPollsChoices
		{
			get
			{
				return this.GetTable<GroupPollsChoice>();
			}
		}
		
		public System.Data.Linq.Table<GroupPost> GroupPosts
		{
			get
			{
				return this.GetTable<GroupPost>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupsCategory> GroupsCategories
		{
			get
			{
				return this.GetTable<GroupsCategory>();
			}
		}
		
		public System.Data.Linq.Table<GroupTopic> GroupTopics
		{
			get
			{
				return this.GetTable<GroupTopic>();
			}
		}
		
		public System.Data.Linq.Table<GroupTopicSubscription> GroupTopicSubscriptions
		{
			get
			{
				return this.GetTable<GroupTopicSubscription>();
			}
		}
		
		public System.Data.Linq.Table<HourlyStat> HourlyStats
		{
			get
			{
				return this.GetTable<HourlyStat>();
			}
		}
		
		public System.Data.Linq.Table<Interest> Interests
		{
			get
			{
				return this.GetTable<Interest>();
			}
		}
		
		public System.Data.Linq.Table<IPLog> IPLogs
		{
			get
			{
				return this.GetTable<IPLog>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<MessagesHistoryCache> MessagesHistoryCaches
		{
			get
			{
				return this.GetTable<MessagesHistoryCache>();
			}
		}
		
		public System.Data.Linq.Table<MessagesSandbox> MessagesSandboxes
		{
			get
			{
				return this.GetTable<MessagesSandbox>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<PaymentHistory> PaymentHistories
		{
			get
			{
				return this.GetTable<PaymentHistory>();
			}
		}
		
		public System.Data.Linq.Table<PendingGuid> PendingGuids
		{
			get
			{
				return this.GetTable<PendingGuid>();
			}
		}
		
		public System.Data.Linq.Table<PhotoAccess> PhotoAccesses
		{
			get
			{
				return this.GetTable<PhotoAccess>();
			}
		}
		
		public System.Data.Linq.Table<PhotoAlbum> PhotoAlbums
		{
			get
			{
				return this.GetTable<PhotoAlbum>();
			}
		}
		
		public System.Data.Linq.Table<PhotoComment> PhotoComments
		{
			get
			{
				return this.GetTable<PhotoComment>();
			}
		}
		
		public System.Data.Linq.Table<PhotoContestEntry> PhotoContestEntries
		{
			get
			{
				return this.GetTable<PhotoContestEntry>();
			}
		}
		
		public System.Data.Linq.Table<PhotoContestRank> PhotoContestRanks
		{
			get
			{
				return this.GetTable<PhotoContestRank>();
			}
		}
		
		public System.Data.Linq.Table<PhotoContest> PhotoContests
		{
			get
			{
				return this.GetTable<PhotoContest>();
			}
		}
		
		public System.Data.Linq.Table<PhotoContestVote> PhotoContestVotes
		{
			get
			{
				return this.GetTable<PhotoContestVote>();
			}
		}
		
		public System.Data.Linq.Table<PhotoNote> PhotoNotes
		{
			get
			{
				return this.GetTable<PhotoNote>();
			}
		}
		
		public System.Data.Linq.Table<PhotoRating> PhotoRatings
		{
			get
			{
				return this.GetTable<PhotoRating>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<PollAnswer> PollAnswers
		{
			get
			{
				return this.GetTable<PollAnswer>();
			}
		}
		
		public System.Data.Linq.Table<PollChoice> PollChoices
		{
			get
			{
				return this.GetTable<PollChoice>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<ProfileAnswer> ProfileAnswers
		{
			get
			{
				return this.GetTable<ProfileAnswer>();
			}
		}
		
		public System.Data.Linq.Table<ProfileChoice> ProfileChoices
		{
			get
			{
				return this.GetTable<ProfileChoice>();
			}
		}
		
		public System.Data.Linq.Table<ProfileQuestion> ProfileQuestions
		{
			get
			{
				return this.GetTable<ProfileQuestion>();
			}
		}
		
		public System.Data.Linq.Table<ProfileTopic> ProfileTopics
		{
			get
			{
				return this.GetTable<ProfileTopic>();
			}
		}
		
		public System.Data.Linq.Table<ProfileView> ProfileViews
		{
			get
			{
				return this.GetTable<ProfileView>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<Relationship> Relationships
		{
			get
			{
				return this.GetTable<Relationship>();
			}
		}
		
		public System.Data.Linq.Table<SavedSearch> SavedSearches
		{
			get
			{
				return this.GetTable<SavedSearch>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Subscription> Subscriptions
		{
			get
			{
				return this.GetTable<Subscription>();
			}
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<Translation> Translations
		{
			get
			{
				return this.GetTable<Translation>();
			}
		}
		
		public System.Data.Linq.Table<UnlockedSection> UnlockedSections
		{
			get
			{
				return this.GetTable<UnlockedSection>();
			}
		}
		
		public System.Data.Linq.Table<UserLevel> UserLevels
		{
			get
			{
				return this.GetTable<UserLevel>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserScoresLog> UserScoresLogs
		{
			get
			{
				return this.GetTable<UserScoresLog>();
			}
		}
		
		public System.Data.Linq.Table<VerifiedUser> VerifiedUsers
		{
			get
			{
				return this.GetTable<VerifiedUser>();
			}
		}
		
		public System.Data.Linq.Table<VideoAccess> VideoAccesses
		{
			get
			{
				return this.GetTable<VideoAccess>();
			}
		}
		
		public System.Data.Linq.Table<VideoEmbed> VideoEmbeds
		{
			get
			{
				return this.GetTable<VideoEmbed>();
			}
		}
		
		public System.Data.Linq.Table<VideoProfile> VideoProfiles
		{
			get
			{
				return this.GetTable<VideoProfile>();
			}
		}
		
		public System.Data.Linq.Table<VideoUpload> VideoUploads
		{
			get
			{
				return this.GetTable<VideoUpload>();
			}
		}
		
		public System.Data.Linq.Table<TwitterCredential> TwitterCredentials
		{
			get
			{
				return this.GetTable<TwitterCredential>();
			}
		}
		
		public System.Data.Linq.Table<FacebookCredential> FacebookCredentials
		{
			get
			{
				return this.GetTable<FacebookCredential>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute()]
		public int EventsCleanup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute()]
		public ISingleResult<SaveEventResult> SaveEvent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromUsername", DbType="VarChar(20)")] string fromUsername, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromGroup", DbType="Int")] System.Nullable<int> fromGroup, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DetailsXML", DbType="NVarChar(4000)")] string detailsXML, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, type, fromUsername, fromGroup, detailsXML, date);
			return ((ISingleResult<SaveEventResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AbuseReports")]
	public partial class AbuseReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ar_id;
		
		private string _ar_reportedby;
		
		private int _ar_type;
		
		private string _ar_report;
		
		private string _ar_reporteduser;
		
		private System.Nullable<int> _ar_targetid;
		
		private bool _ar_reviewed;
		
		private System.DateTime _ar_datereported;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onar_idChanging(int value);
    partial void Onar_idChanged();
    partial void Onar_reportedbyChanging(string value);
    partial void Onar_reportedbyChanged();
    partial void Onar_typeChanging(int value);
    partial void Onar_typeChanged();
    partial void Onar_reportChanging(string value);
    partial void Onar_reportChanged();
    partial void Onar_reporteduserChanging(string value);
    partial void Onar_reporteduserChanged();
    partial void Onar_targetidChanging(System.Nullable<int> value);
    partial void Onar_targetidChanged();
    partial void Onar_reviewedChanging(bool value);
    partial void Onar_reviewedChanged();
    partial void Onar_datereportedChanging(System.DateTime value);
    partial void Onar_datereportedChanged();
    #endregion
		
		public AbuseReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ar_id
		{
			get
			{
				return this._ar_id;
			}
			set
			{
				if ((this._ar_id != value))
				{
					this.Onar_idChanging(value);
					this.SendPropertyChanging();
					this._ar_id = value;
					this.SendPropertyChanged("ar_id");
					this.Onar_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_reportedby", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ar_reportedby
		{
			get
			{
				return this._ar_reportedby;
			}
			set
			{
				if ((this._ar_reportedby != value))
				{
					this.Onar_reportedbyChanging(value);
					this.SendPropertyChanging();
					this._ar_reportedby = value;
					this.SendPropertyChanged("ar_reportedby");
					this.Onar_reportedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ar_type
		{
			get
			{
				return this._ar_type;
			}
			set
			{
				if ((this._ar_type != value))
				{
					this.Onar_typeChanging(value);
					this.SendPropertyChanging();
					this._ar_type = value;
					this.SendPropertyChanged("ar_type");
					this.Onar_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_report", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ar_report
		{
			get
			{
				return this._ar_report;
			}
			set
			{
				if ((this._ar_report != value))
				{
					this.Onar_reportChanging(value);
					this.SendPropertyChanging();
					this._ar_report = value;
					this.SendPropertyChanged("ar_report");
					this.Onar_reportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_reporteduser", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ar_reporteduser
		{
			get
			{
				return this._ar_reporteduser;
			}
			set
			{
				if ((this._ar_reporteduser != value))
				{
					this.Onar_reporteduserChanging(value);
					this.SendPropertyChanging();
					this._ar_reporteduser = value;
					this.SendPropertyChanged("ar_reporteduser");
					this.Onar_reporteduserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_targetid", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ar_targetid
		{
			get
			{
				return this._ar_targetid;
			}
			set
			{
				if ((this._ar_targetid != value))
				{
					this.Onar_targetidChanging(value);
					this.SendPropertyChanging();
					this._ar_targetid = value;
					this.SendPropertyChanged("ar_targetid");
					this.Onar_targetidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_reviewed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ar_reviewed
		{
			get
			{
				return this._ar_reviewed;
			}
			set
			{
				if ((this._ar_reviewed != value))
				{
					this.Onar_reviewedChanging(value);
					this.SendPropertyChanging();
					this._ar_reviewed = value;
					this.SendPropertyChanged("ar_reviewed");
					this.Onar_reviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ar_datereported", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ar_datereported
		{
			get
			{
				return this._ar_datereported;
			}
			set
			{
				if ((this._ar_datereported != value))
				{
					this.Onar_datereportedChanging(value);
					this.SendPropertyChanging();
					this._ar_datereported = value;
					this.SendPropertyChanged("ar_datereported");
					this.Onar_datereportedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Votes")]
	public partial class Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _v_fromusername;
		
		private string _v_tousername;
		
		private int _v_score;
		
		private System.DateTime _v_timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onv_fromusernameChanging(string value);
    partial void Onv_fromusernameChanged();
    partial void Onv_tousernameChanging(string value);
    partial void Onv_tousernameChanged();
    partial void Onv_scoreChanging(int value);
    partial void Onv_scoreChanged();
    partial void Onv_timestampChanging(System.DateTime value);
    partial void Onv_timestampChanged();
    #endregion
		
		public Vote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_v_fromusername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string v_fromusername
		{
			get
			{
				return this._v_fromusername;
			}
			set
			{
				if ((this._v_fromusername != value))
				{
					this.Onv_fromusernameChanging(value);
					this.SendPropertyChanging();
					this._v_fromusername = value;
					this.SendPropertyChanged("v_fromusername");
					this.Onv_fromusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_v_tousername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string v_tousername
		{
			get
			{
				return this._v_tousername;
			}
			set
			{
				if ((this._v_tousername != value))
				{
					this.Onv_tousernameChanging(value);
					this.SendPropertyChanging();
					this._v_tousername = value;
					this.SendPropertyChanged("v_tousername");
					this.Onv_tousernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_v_score", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int v_score
		{
			get
			{
				return this._v_score;
			}
			set
			{
				if ((this._v_score != value))
				{
					this.Onv_scoreChanging(value);
					this.SendPropertyChanging();
					this._v_score = value;
					this.SendPropertyChanged("v_score");
					this.Onv_scoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_v_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime v_timestamp
		{
			get
			{
				return this._v_timestamp;
			}
			set
			{
				if ((this._v_timestamp != value))
				{
					this.Onv_timestampChanging(value);
					this.SendPropertyChanging();
					this._v_timestamp = value;
					this.SendPropertyChanged("v_timestamp");
					this.Onv_timestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AdComments")]
	public partial class AdComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ac_id;
		
		private int _a_id;
		
		private string _u_username;
		
		private string _ac_comment;
		
		private System.DateTime _ac_date;
		
		private EntityRef<Ad> _Ad;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onac_idChanging(int value);
    partial void Onac_idChanged();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onac_commentChanging(string value);
    partial void Onac_commentChanged();
    partial void Onac_dateChanging(System.DateTime value);
    partial void Onac_dateChanged();
    #endregion
		
		public AdComment()
		{
			this._Ad = default(EntityRef<Ad>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ac_id
		{
			get
			{
				return this._ac_id;
			}
			set
			{
				if ((this._ac_id != value))
				{
					this.Onac_idChanging(value);
					this.SendPropertyChanging();
					this._ac_id = value;
					this.SendPropertyChanged("ac_id");
					this.Onac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					if (this._Ad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ac_comment
		{
			get
			{
				return this._ac_comment;
			}
			set
			{
				if ((this._ac_comment != value))
				{
					this.Onac_commentChanging(value);
					this.SendPropertyChanging();
					this._ac_comment = value;
					this.SendPropertyChanged("ac_comment");
					this.Onac_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ac_date
		{
			get
			{
				return this._ac_date;
			}
			set
			{
				if ((this._ac_date != value))
				{
					this.Onac_dateChanging(value);
					this.SendPropertyChanging();
					this._ac_date = value;
					this.SendPropertyChanged("ac_date");
					this.Onac_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdComment", Storage="_Ad", ThisKey="a_id", OtherKey="a_id", IsForeignKey=true)]
		public Ad Ad
		{
			get
			{
				return this._Ad.Entity;
			}
			set
			{
				Ad previousValue = this._Ad.Entity;
				if (((previousValue != value) 
							|| (this._Ad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ad.Entity = null;
						previousValue.AdComments.Remove(this);
					}
					this._Ad.Entity = value;
					if ((value != null))
					{
						value.AdComments.Add(this);
						this._a_id = value.a_id;
					}
					else
					{
						this._a_id = default(int);
					}
					this.SendPropertyChanged("Ad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AdComment", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AdComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AdComments.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Admins")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _a_username;
		
		private string _a_password;
		
		private System.DateTime _a_lastlogin;
		
		private string _a_privileges;
		
		private string _a_lastsessionid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ona_usernameChanging(string value);
    partial void Ona_usernameChanged();
    partial void Ona_passwordChanging(string value);
    partial void Ona_passwordChanged();
    partial void Ona_lastloginChanging(System.DateTime value);
    partial void Ona_lastloginChanged();
    partial void Ona_privilegesChanging(string value);
    partial void Ona_privilegesChanged();
    partial void Ona_lastsessionidChanging(string value);
    partial void Ona_lastsessionidChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string a_username
		{
			get
			{
				return this._a_username;
			}
			set
			{
				if ((this._a_username != value))
				{
					this.Ona_usernameChanging(value);
					this.SendPropertyChanging();
					this._a_username = value;
					this.SendPropertyChanged("a_username");
					this.Ona_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_password", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_password
		{
			get
			{
				return this._a_password;
			}
			set
			{
				if ((this._a_password != value))
				{
					this.Ona_passwordChanging(value);
					this.SendPropertyChanging();
					this._a_password = value;
					this.SendPropertyChanged("a_password");
					this.Ona_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_lastlogin", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime a_lastlogin
		{
			get
			{
				return this._a_lastlogin;
			}
			set
			{
				if ((this._a_lastlogin != value))
				{
					this.Ona_lastloginChanging(value);
					this.SendPropertyChanging();
					this._a_lastlogin = value;
					this.SendPropertyChanged("a_lastlogin");
					this.Ona_lastloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_privileges", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_privileges
		{
			get
			{
				return this._a_privileges;
			}
			set
			{
				if ((this._a_privileges != value))
				{
					this.Ona_privilegesChanging(value);
					this.SendPropertyChanging();
					this._a_privileges = value;
					this.SendPropertyChanged("a_privileges");
					this.Ona_privilegesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_lastsessionid", DbType="VarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_lastsessionid
		{
			get
			{
				return this._a_lastsessionid;
			}
			set
			{
				if ((this._a_lastsessionid != value))
				{
					this.Ona_lastsessionidChanging(value);
					this.SendPropertyChanging();
					this._a_lastsessionid = value;
					this.SendPropertyChanged("a_lastsessionid");
					this.Ona_lastsessionidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AdPhotos")]
	public partial class AdPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ap_id;
		
		private int _a_id;
		
		private string _ap_description;
		
		private System.Data.Linq.Binary _ap_image;
		
		private EntityRef<Ad> _Ad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onap_idChanging(int value);
    partial void Onap_idChanged();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onap_descriptionChanging(string value);
    partial void Onap_descriptionChanged();
    partial void Onap_imageChanging(System.Data.Linq.Binary value);
    partial void Onap_imageChanged();
    #endregion
		
		public AdPhoto()
		{
			this._Ad = default(EntityRef<Ad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ap_id
		{
			get
			{
				return this._ap_id;
			}
			set
			{
				if ((this._ap_id != value))
				{
					this.Onap_idChanging(value);
					this.SendPropertyChanging();
					this._ap_id = value;
					this.SendPropertyChanged("ap_id");
					this.Onap_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					if (this._Ad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ap_description
		{
			get
			{
				return this._ap_description;
			}
			set
			{
				if ((this._ap_description != value))
				{
					this.Onap_descriptionChanging(value);
					this.SendPropertyChanging();
					this._ap_description = value;
					this.SendPropertyChanged("ap_description");
					this.Onap_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_image", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ap_image
		{
			get
			{
				return this._ap_image;
			}
			set
			{
				if ((this._ap_image != value))
				{
					this.Onap_imageChanging(value);
					this.SendPropertyChanging();
					this._ap_image = value;
					this.SendPropertyChanged("ap_image");
					this.Onap_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdPhoto", Storage="_Ad", ThisKey="a_id", OtherKey="a_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Ad Ad
		{
			get
			{
				return this._Ad.Entity;
			}
			set
			{
				Ad previousValue = this._Ad.Entity;
				if (((previousValue != value) 
							|| (this._Ad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ad.Entity = null;
						previousValue.AdPhotos.Remove(this);
					}
					this._Ad.Entity = value;
					if ((value != null))
					{
						value.AdPhotos.Add(this);
						this._a_id = value.a_id;
					}
					else
					{
						this._a_id = default(int);
					}
					this.SendPropertyChanged("Ad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ads")]
	public partial class Ad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _a_id;
		
		private int _ac_id;
		
		private string _a_postedby;
		
		private System.DateTime _a_date;
		
		private System.DateTime _a_expirationdate;
		
		private string _a_location;
		
		private string _a_subject;
		
		private string _a_description;
		
		private bool _a_approved;
		
		private EntitySet<AdComment> _AdComments;
		
		private EntitySet<AdPhoto> _AdPhotos;
		
		private EntityRef<AdsCategory> _AdsCategory;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onac_idChanging(int value);
    partial void Onac_idChanged();
    partial void Ona_postedbyChanging(string value);
    partial void Ona_postedbyChanged();
    partial void Ona_dateChanging(System.DateTime value);
    partial void Ona_dateChanged();
    partial void Ona_expirationdateChanging(System.DateTime value);
    partial void Ona_expirationdateChanged();
    partial void Ona_locationChanging(string value);
    partial void Ona_locationChanged();
    partial void Ona_subjectChanging(string value);
    partial void Ona_subjectChanged();
    partial void Ona_descriptionChanging(string value);
    partial void Ona_descriptionChanged();
    partial void Ona_approvedChanging(bool value);
    partial void Ona_approvedChanged();
    #endregion
		
		public Ad()
		{
			this._AdComments = new EntitySet<AdComment>(new Action<AdComment>(this.attach_AdComments), new Action<AdComment>(this.detach_AdComments));
			this._AdPhotos = new EntitySet<AdPhoto>(new Action<AdPhoto>(this.attach_AdPhotos), new Action<AdPhoto>(this.detach_AdPhotos));
			this._AdsCategory = default(EntityRef<AdsCategory>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ac_id
		{
			get
			{
				return this._ac_id;
			}
			set
			{
				if ((this._ac_id != value))
				{
					if (this._AdsCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onac_idChanging(value);
					this.SendPropertyChanging();
					this._ac_id = value;
					this.SendPropertyChanged("ac_id");
					this.Onac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_postedby", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_postedby
		{
			get
			{
				return this._a_postedby;
			}
			set
			{
				if ((this._a_postedby != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ona_postedbyChanging(value);
					this.SendPropertyChanging();
					this._a_postedby = value;
					this.SendPropertyChanged("a_postedby");
					this.Ona_postedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime a_date
		{
			get
			{
				return this._a_date;
			}
			set
			{
				if ((this._a_date != value))
				{
					this.Ona_dateChanging(value);
					this.SendPropertyChanging();
					this._a_date = value;
					this.SendPropertyChanged("a_date");
					this.Ona_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_expirationdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime a_expirationdate
		{
			get
			{
				return this._a_expirationdate;
			}
			set
			{
				if ((this._a_expirationdate != value))
				{
					this.Ona_expirationdateChanging(value);
					this.SendPropertyChanging();
					this._a_expirationdate = value;
					this.SendPropertyChanged("a_expirationdate");
					this.Ona_expirationdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_location", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_location
		{
			get
			{
				return this._a_location;
			}
			set
			{
				if ((this._a_location != value))
				{
					this.Ona_locationChanging(value);
					this.SendPropertyChanging();
					this._a_location = value;
					this.SendPropertyChanged("a_location");
					this.Ona_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_subject", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_subject
		{
			get
			{
				return this._a_subject;
			}
			set
			{
				if ((this._a_subject != value))
				{
					this.Ona_subjectChanging(value);
					this.SendPropertyChanging();
					this._a_subject = value;
					this.SendPropertyChanged("a_subject");
					this.Ona_subjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_description
		{
			get
			{
				return this._a_description;
			}
			set
			{
				if ((this._a_description != value))
				{
					this.Ona_descriptionChanging(value);
					this.SendPropertyChanging();
					this._a_description = value;
					this.SendPropertyChanged("a_description");
					this.Ona_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool a_approved
		{
			get
			{
				return this._a_approved;
			}
			set
			{
				if ((this._a_approved != value))
				{
					this.Ona_approvedChanging(value);
					this.SendPropertyChanging();
					this._a_approved = value;
					this.SendPropertyChanged("a_approved");
					this.Ona_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdComment", Storage="_AdComments", ThisKey="a_id", OtherKey="a_id")]
		public EntitySet<AdComment> AdComments
		{
			get
			{
				return this._AdComments;
			}
			set
			{
				this._AdComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdPhoto", Storage="_AdPhotos", ThisKey="a_id", OtherKey="a_id")]
		public EntitySet<AdPhoto> AdPhotos
		{
			get
			{
				return this._AdPhotos;
			}
			set
			{
				this._AdPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdsCategory_Ad", Storage="_AdsCategory", ThisKey="ac_id", OtherKey="ac_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AdsCategory AdsCategory
		{
			get
			{
				return this._AdsCategory.Entity;
			}
			set
			{
				AdsCategory previousValue = this._AdsCategory.Entity;
				if (((previousValue != value) 
							|| (this._AdsCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdsCategory.Entity = null;
						previousValue.Ads.Remove(this);
					}
					this._AdsCategory.Entity = value;
					if ((value != null))
					{
						value.Ads.Add(this);
						this._ac_id = value.ac_id;
					}
					else
					{
						this._ac_id = default(int);
					}
					this.SendPropertyChanged("AdsCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ad", Storage="_User", ThisKey="a_postedby", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ads.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ads.Add(this);
						this._a_postedby = value.u_username;
					}
					else
					{
						this._a_postedby = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdComments(AdComment entity)
		{
			this.SendPropertyChanging();
			entity.Ad = this;
		}
		
		private void detach_AdComments(AdComment entity)
		{
			this.SendPropertyChanging();
			entity.Ad = null;
		}
		
		private void attach_AdPhotos(AdPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Ad = this;
		}
		
		private void detach_AdPhotos(AdPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Ad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AdsCategories")]
	public partial class AdsCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ac_id;
		
		private System.Nullable<int> _ac_parentid;
		
		private string _ac_title;
		
		private EntitySet<Ad> _Ads;
		
		private EntitySet<AdsCategory> _AdsCategories;
		
		private EntityRef<AdsCategory> _AdsCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onac_idChanging(int value);
    partial void Onac_idChanged();
    partial void Onac_parentidChanging(System.Nullable<int> value);
    partial void Onac_parentidChanged();
    partial void Onac_titleChanging(string value);
    partial void Onac_titleChanged();
    #endregion
		
		public AdsCategory()
		{
			this._Ads = new EntitySet<Ad>(new Action<Ad>(this.attach_Ads), new Action<Ad>(this.detach_Ads));
			this._AdsCategories = new EntitySet<AdsCategory>(new Action<AdsCategory>(this.attach_AdsCategories), new Action<AdsCategory>(this.detach_AdsCategories));
			this._AdsCategory1 = default(EntityRef<AdsCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ac_id
		{
			get
			{
				return this._ac_id;
			}
			set
			{
				if ((this._ac_id != value))
				{
					this.Onac_idChanging(value);
					this.SendPropertyChanging();
					this._ac_id = value;
					this.SendPropertyChanged("ac_id");
					this.Onac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_parentid", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ac_parentid
		{
			get
			{
				return this._ac_parentid;
			}
			set
			{
				if ((this._ac_parentid != value))
				{
					if (this._AdsCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onac_parentidChanging(value);
					this.SendPropertyChanging();
					this._ac_parentid = value;
					this.SendPropertyChanged("ac_parentid");
					this.Onac_parentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ac_title
		{
			get
			{
				return this._ac_title;
			}
			set
			{
				if ((this._ac_title != value))
				{
					this.Onac_titleChanging(value);
					this.SendPropertyChanging();
					this._ac_title = value;
					this.SendPropertyChanged("ac_title");
					this.Onac_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdsCategory_Ad", Storage="_Ads", ThisKey="ac_id", OtherKey="ac_id")]
		public EntitySet<Ad> Ads
		{
			get
			{
				return this._Ads;
			}
			set
			{
				this._Ads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdsCategory_AdsCategory", Storage="_AdsCategories", ThisKey="ac_id", OtherKey="ac_parentid")]
		public EntitySet<AdsCategory> AdsCategories
		{
			get
			{
				return this._AdsCategories;
			}
			set
			{
				this._AdsCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdsCategory_AdsCategory", Storage="_AdsCategory1", ThisKey="ac_parentid", OtherKey="ac_id", IsForeignKey=true)]
		public AdsCategory AdsCategory1
		{
			get
			{
				return this._AdsCategory1.Entity;
			}
			set
			{
				AdsCategory previousValue = this._AdsCategory1.Entity;
				if (((previousValue != value) 
							|| (this._AdsCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdsCategory1.Entity = null;
						previousValue.AdsCategories.Remove(this);
					}
					this._AdsCategory1.Entity = value;
					if ((value != null))
					{
						value.AdsCategories.Add(this);
						this._ac_parentid = value.ac_id;
					}
					else
					{
						this._ac_parentid = default(Nullable<int>);
					}
					this.SendPropertyChanged("AdsCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdsCategory = this;
		}
		
		private void detach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdsCategory = null;
		}
		
		private void attach_AdsCategories(AdsCategory entity)
		{
			this.SendPropertyChanging();
			entity.AdsCategory1 = this;
		}
		
		private void detach_AdsCategories(AdsCategory entity)
		{
			this.SendPropertyChanging();
			entity.AdsCategory1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AffiliateBanners")]
	public partial class AffiliateBanner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ab_id;
		
		private string _ab_name;
		
		private System.Data.Linq.Binary _ab_image;
		
		private bool _ab_deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onab_idChanging(int value);
    partial void Onab_idChanged();
    partial void Onab_nameChanging(string value);
    partial void Onab_nameChanged();
    partial void Onab_imageChanging(System.Data.Linq.Binary value);
    partial void Onab_imageChanged();
    partial void Onab_deletedChanging(bool value);
    partial void Onab_deletedChanged();
    #endregion
		
		public AffiliateBanner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ab_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ab_id
		{
			get
			{
				return this._ab_id;
			}
			set
			{
				if ((this._ab_id != value))
				{
					this.Onab_idChanging(value);
					this.SendPropertyChanging();
					this._ab_id = value;
					this.SendPropertyChanged("ab_id");
					this.Onab_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ab_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ab_name
		{
			get
			{
				return this._ab_name;
			}
			set
			{
				if ((this._ab_name != value))
				{
					this.Onab_nameChanging(value);
					this.SendPropertyChanging();
					this._ab_name = value;
					this.SendPropertyChanged("ab_name");
					this.Onab_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ab_image", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ab_image
		{
			get
			{
				return this._ab_image;
			}
			set
			{
				if ((this._ab_image != value))
				{
					this.Onab_imageChanging(value);
					this.SendPropertyChanging();
					this._ab_image = value;
					this.SendPropertyChanged("ab_image");
					this.Onab_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ab_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ab_deleted
		{
			get
			{
				return this._ab_deleted;
			}
			set
			{
				if ((this._ab_deleted != value))
				{
					this.Onab_deletedChanging(value);
					this.SendPropertyChanging();
					this._ab_deleted = value;
					this.SendPropertyChanged("ab_deleted");
					this.Onab_deletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AffiliateCommissions")]
	public partial class AffiliateCommission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ac_id;
		
		private int _a_id;
		
		private string _u_username;
		
		private System.Nullable<int> _ph_id;
		
		private System.DateTime _ac_timestamp;
		
		private string _ac_notes;
		
		private decimal _ac_amount;
		
		private EntityRef<Affiliate> _Affiliate;
		
		private EntityRef<PaymentHistory> _PaymentHistory;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onac_idChanging(int value);
    partial void Onac_idChanged();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onph_idChanging(System.Nullable<int> value);
    partial void Onph_idChanged();
    partial void Onac_timestampChanging(System.DateTime value);
    partial void Onac_timestampChanged();
    partial void Onac_notesChanging(string value);
    partial void Onac_notesChanged();
    partial void Onac_amountChanging(decimal value);
    partial void Onac_amountChanged();
    #endregion
		
		public AffiliateCommission()
		{
			this._Affiliate = default(EntityRef<Affiliate>);
			this._PaymentHistory = default(EntityRef<PaymentHistory>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ac_id
		{
			get
			{
				return this._ac_id;
			}
			set
			{
				if ((this._ac_id != value))
				{
					this.Onac_idChanging(value);
					this.SendPropertyChanging();
					this._ac_id = value;
					this.SendPropertyChanged("ac_id");
					this.Onac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ph_id
		{
			get
			{
				return this._ph_id;
			}
			set
			{
				if ((this._ph_id != value))
				{
					if (this._PaymentHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onph_idChanging(value);
					this.SendPropertyChanging();
					this._ph_id = value;
					this.SendPropertyChanged("ph_id");
					this.Onph_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ac_timestamp
		{
			get
			{
				return this._ac_timestamp;
			}
			set
			{
				if ((this._ac_timestamp != value))
				{
					this.Onac_timestampChanging(value);
					this.SendPropertyChanging();
					this._ac_timestamp = value;
					this.SendPropertyChanged("ac_timestamp");
					this.Onac_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_notes", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ac_notes
		{
			get
			{
				return this._ac_notes;
			}
			set
			{
				if ((this._ac_notes != value))
				{
					this.Onac_notesChanging(value);
					this.SendPropertyChanging();
					this._ac_notes = value;
					this.SendPropertyChanged("ac_notes");
					this.Onac_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_amount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ac_amount
		{
			get
			{
				return this._ac_amount;
			}
			set
			{
				if ((this._ac_amount != value))
				{
					this.Onac_amountChanging(value);
					this.SendPropertyChanging();
					this._ac_amount = value;
					this.SendPropertyChanged("ac_amount");
					this.Onac_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_AffiliateCommission", Storage="_Affiliate", ThisKey="a_id", OtherKey="a_id", IsForeignKey=true)]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.AffiliateCommissions.Remove(this);
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.AffiliateCommissions.Add(this);
						this._a_id = value.a_id;
					}
					else
					{
						this._a_id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentHistory_AffiliateCommission", Storage="_PaymentHistory", ThisKey="ph_id", OtherKey="ph_id", IsForeignKey=true)]
		public PaymentHistory PaymentHistory
		{
			get
			{
				return this._PaymentHistory.Entity;
			}
			set
			{
				PaymentHistory previousValue = this._PaymentHistory.Entity;
				if (((previousValue != value) 
							|| (this._PaymentHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentHistory.Entity = null;
						previousValue.AffiliateCommissions.Remove(this);
					}
					this._PaymentHistory.Entity = value;
					if ((value != null))
					{
						value.AffiliateCommissions.Add(this);
						this._ph_id = value.ph_id;
					}
					else
					{
						this._ph_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AffiliateCommission", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AffiliateCommissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AffiliateCommissions.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Affiliates")]
	public partial class Affiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _a_id;
		
		private string _a_username;
		
		private string _a_password;
		
		private string _a_name;
		
		private string _a_email;
		
		private string _a_siteurl;
		
		private string _a_payment_details;
		
		private bool _a_deleted;
		
		private bool _a_active;
		
		private System.Nullable<int> _a_percentage;
		
		private System.Nullable<decimal> _a_fixed_amount;
		
		private bool _a_recurrent;
		
		private decimal _a_balance;
		
		private bool _a_request_payment;
		
		private EntitySet<AffiliateCommission> _AffiliateCommissions;
		
		private EntitySet<AffiliatesHistory> _AffiliatesHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Ona_usernameChanging(string value);
    partial void Ona_usernameChanged();
    partial void Ona_passwordChanging(string value);
    partial void Ona_passwordChanged();
    partial void Ona_nameChanging(string value);
    partial void Ona_nameChanged();
    partial void Ona_emailChanging(string value);
    partial void Ona_emailChanged();
    partial void Ona_siteurlChanging(string value);
    partial void Ona_siteurlChanged();
    partial void Ona_payment_detailsChanging(string value);
    partial void Ona_payment_detailsChanged();
    partial void Ona_deletedChanging(bool value);
    partial void Ona_deletedChanged();
    partial void Ona_activeChanging(bool value);
    partial void Ona_activeChanged();
    partial void Ona_percentageChanging(System.Nullable<int> value);
    partial void Ona_percentageChanged();
    partial void Ona_fixed_amountChanging(System.Nullable<decimal> value);
    partial void Ona_fixed_amountChanged();
    partial void Ona_recurrentChanging(bool value);
    partial void Ona_recurrentChanged();
    partial void Ona_balanceChanging(decimal value);
    partial void Ona_balanceChanged();
    partial void Ona_request_paymentChanging(bool value);
    partial void Ona_request_paymentChanged();
    #endregion
		
		public Affiliate()
		{
			this._AffiliateCommissions = new EntitySet<AffiliateCommission>(new Action<AffiliateCommission>(this.attach_AffiliateCommissions), new Action<AffiliateCommission>(this.detach_AffiliateCommissions));
			this._AffiliatesHistories = new EntitySet<AffiliatesHistory>(new Action<AffiliatesHistory>(this.attach_AffiliatesHistories), new Action<AffiliatesHistory>(this.detach_AffiliatesHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_username
		{
			get
			{
				return this._a_username;
			}
			set
			{
				if ((this._a_username != value))
				{
					this.Ona_usernameChanging(value);
					this.SendPropertyChanging();
					this._a_username = value;
					this.SendPropertyChanged("a_username");
					this.Ona_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_password", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_password
		{
			get
			{
				return this._a_password;
			}
			set
			{
				if ((this._a_password != value))
				{
					this.Ona_passwordChanging(value);
					this.SendPropertyChanging();
					this._a_password = value;
					this.SendPropertyChanged("a_password");
					this.Ona_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_name
		{
			get
			{
				return this._a_name;
			}
			set
			{
				if ((this._a_name != value))
				{
					this.Ona_nameChanging(value);
					this.SendPropertyChanging();
					this._a_name = value;
					this.SendPropertyChanged("a_name");
					this.Ona_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_email", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_email
		{
			get
			{
				return this._a_email;
			}
			set
			{
				if ((this._a_email != value))
				{
					this.Ona_emailChanging(value);
					this.SendPropertyChanging();
					this._a_email = value;
					this.SendPropertyChanged("a_email");
					this.Ona_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_siteurl", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_siteurl
		{
			get
			{
				return this._a_siteurl;
			}
			set
			{
				if ((this._a_siteurl != value))
				{
					this.Ona_siteurlChanging(value);
					this.SendPropertyChanging();
					this._a_siteurl = value;
					this.SendPropertyChanged("a_siteurl");
					this.Ona_siteurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_payment_details", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string a_payment_details
		{
			get
			{
				return this._a_payment_details;
			}
			set
			{
				if ((this._a_payment_details != value))
				{
					this.Ona_payment_detailsChanging(value);
					this.SendPropertyChanging();
					this._a_payment_details = value;
					this.SendPropertyChanged("a_payment_details");
					this.Ona_payment_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool a_deleted
		{
			get
			{
				return this._a_deleted;
			}
			set
			{
				if ((this._a_deleted != value))
				{
					this.Ona_deletedChanging(value);
					this.SendPropertyChanging();
					this._a_deleted = value;
					this.SendPropertyChanged("a_deleted");
					this.Ona_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool a_active
		{
			get
			{
				return this._a_active;
			}
			set
			{
				if ((this._a_active != value))
				{
					this.Ona_activeChanging(value);
					this.SendPropertyChanging();
					this._a_active = value;
					this.SendPropertyChanged("a_active");
					this.Ona_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_percentage", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> a_percentage
		{
			get
			{
				return this._a_percentage;
			}
			set
			{
				if ((this._a_percentage != value))
				{
					this.Ona_percentageChanging(value);
					this.SendPropertyChanging();
					this._a_percentage = value;
					this.SendPropertyChanged("a_percentage");
					this.Ona_percentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_fixed_amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> a_fixed_amount
		{
			get
			{
				return this._a_fixed_amount;
			}
			set
			{
				if ((this._a_fixed_amount != value))
				{
					this.Ona_fixed_amountChanging(value);
					this.SendPropertyChanging();
					this._a_fixed_amount = value;
					this.SendPropertyChanged("a_fixed_amount");
					this.Ona_fixed_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_recurrent", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool a_recurrent
		{
			get
			{
				return this._a_recurrent;
			}
			set
			{
				if ((this._a_recurrent != value))
				{
					this.Ona_recurrentChanging(value);
					this.SendPropertyChanging();
					this._a_recurrent = value;
					this.SendPropertyChanged("a_recurrent");
					this.Ona_recurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_balance", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal a_balance
		{
			get
			{
				return this._a_balance;
			}
			set
			{
				if ((this._a_balance != value))
				{
					this.Ona_balanceChanging(value);
					this.SendPropertyChanging();
					this._a_balance = value;
					this.SendPropertyChanged("a_balance");
					this.Ona_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_request_payment", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool a_request_payment
		{
			get
			{
				return this._a_request_payment;
			}
			set
			{
				if ((this._a_request_payment != value))
				{
					this.Ona_request_paymentChanging(value);
					this.SendPropertyChanging();
					this._a_request_payment = value;
					this.SendPropertyChanged("a_request_payment");
					this.Ona_request_paymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_AffiliateCommission", Storage="_AffiliateCommissions", ThisKey="a_id", OtherKey="a_id")]
		public EntitySet<AffiliateCommission> AffiliateCommissions
		{
			get
			{
				return this._AffiliateCommissions;
			}
			set
			{
				this._AffiliateCommissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_AffiliatesHistory", Storage="_AffiliatesHistories", ThisKey="a_id", OtherKey="a_id")]
		public EntitySet<AffiliatesHistory> AffiliatesHistories
		{
			get
			{
				return this._AffiliatesHistories;
			}
			set
			{
				this._AffiliatesHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate = this;
		}
		
		private void detach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate = null;
		}
		
		private void attach_AffiliatesHistories(AffiliatesHistory entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate = this;
		}
		
		private void detach_AffiliatesHistories(AffiliatesHistory entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class AffiliatesHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ah_id;
		
		private int _a_id;
		
		private decimal _ah_amount;
		
		private System.DateTime _ah_date_paid;
		
		private string _ah_notes;
		
		private string _ah_private_notes;
		
		private EntityRef<Affiliate> _Affiliate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onah_idChanging(int value);
    partial void Onah_idChanged();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onah_amountChanging(decimal value);
    partial void Onah_amountChanged();
    partial void Onah_date_paidChanging(System.DateTime value);
    partial void Onah_date_paidChanged();
    partial void Onah_notesChanging(string value);
    partial void Onah_notesChanged();
    partial void Onah_private_notesChanging(string value);
    partial void Onah_private_notesChanged();
    #endregion
		
		public AffiliatesHistory()
		{
			this._Affiliate = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ah_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ah_id
		{
			get
			{
				return this._ah_id;
			}
			set
			{
				if ((this._ah_id != value))
				{
					this.Onah_idChanging(value);
					this.SendPropertyChanging();
					this._ah_id = value;
					this.SendPropertyChanged("ah_id");
					this.Onah_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ah_amount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ah_amount
		{
			get
			{
				return this._ah_amount;
			}
			set
			{
				if ((this._ah_amount != value))
				{
					this.Onah_amountChanging(value);
					this.SendPropertyChanging();
					this._ah_amount = value;
					this.SendPropertyChanged("ah_amount");
					this.Onah_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ah_date_paid", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ah_date_paid
		{
			get
			{
				return this._ah_date_paid;
			}
			set
			{
				if ((this._ah_date_paid != value))
				{
					this.Onah_date_paidChanging(value);
					this.SendPropertyChanging();
					this._ah_date_paid = value;
					this.SendPropertyChanged("ah_date_paid");
					this.Onah_date_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ah_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ah_notes
		{
			get
			{
				return this._ah_notes;
			}
			set
			{
				if ((this._ah_notes != value))
				{
					this.Onah_notesChanging(value);
					this.SendPropertyChanging();
					this._ah_notes = value;
					this.SendPropertyChanged("ah_notes");
					this.Onah_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ah_private_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ah_private_notes
		{
			get
			{
				return this._ah_private_notes;
			}
			set
			{
				if ((this._ah_private_notes != value))
				{
					this.Onah_private_notesChanging(value);
					this.SendPropertyChanging();
					this._ah_private_notes = value;
					this.SendPropertyChanged("ah_private_notes");
					this.Onah_private_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_AffiliatesHistory", Storage="_Affiliate", ThisKey="a_id", OtherKey="a_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.AffiliatesHistories.Remove(this);
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.AffiliatesHistories.Add(this);
						this._a_id = value.a_id;
					}
					else
					{
						this._a_id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="archive_Messages")]
	public partial class archive_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _m_id;
		
		private string _m_from_username;
		
		private int _m_from_folder;
		
		private string _m_to_username;
		
		private int _m_to_folder;
		
		private string _m_body;
		
		private System.DateTime _m_timestamp;
		
		private int _m_replied_to;
		
		private bool _m_is_read;
		
		private bool _m_pending_approval;
		
		private bool _m_new;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onm_idChanging(int value);
    partial void Onm_idChanged();
    partial void Onm_from_usernameChanging(string value);
    partial void Onm_from_usernameChanged();
    partial void Onm_from_folderChanging(int value);
    partial void Onm_from_folderChanged();
    partial void Onm_to_usernameChanging(string value);
    partial void Onm_to_usernameChanged();
    partial void Onm_to_folderChanging(int value);
    partial void Onm_to_folderChanged();
    partial void Onm_bodyChanging(string value);
    partial void Onm_bodyChanged();
    partial void Onm_timestampChanging(System.DateTime value);
    partial void Onm_timestampChanged();
    partial void Onm_replied_toChanging(int value);
    partial void Onm_replied_toChanged();
    partial void Onm_is_readChanging(bool value);
    partial void Onm_is_readChanged();
    partial void Onm_pending_approvalChanging(bool value);
    partial void Onm_pending_approvalChanged();
    partial void Onm_newChanging(bool value);
    partial void Onm_newChanged();
    #endregion
		
		public archive_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int m_id
		{
			get
			{
				return this._m_id;
			}
			set
			{
				if ((this._m_id != value))
				{
					this.Onm_idChanging(value);
					this.SendPropertyChanging();
					this._m_id = value;
					this.SendPropertyChanged("m_id");
					this.Onm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_from_username
		{
			get
			{
				return this._m_from_username;
			}
			set
			{
				if ((this._m_from_username != value))
				{
					this.Onm_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._m_from_username = value;
					this.SendPropertyChanged("m_from_username");
					this.Onm_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_from_folder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_from_folder
		{
			get
			{
				return this._m_from_folder;
			}
			set
			{
				if ((this._m_from_folder != value))
				{
					this.Onm_from_folderChanging(value);
					this.SendPropertyChanging();
					this._m_from_folder = value;
					this.SendPropertyChanged("m_from_folder");
					this.Onm_from_folderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_to_username
		{
			get
			{
				return this._m_to_username;
			}
			set
			{
				if ((this._m_to_username != value))
				{
					this.Onm_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._m_to_username = value;
					this.SendPropertyChanged("m_to_username");
					this.Onm_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_to_folder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_to_folder
		{
			get
			{
				return this._m_to_folder;
			}
			set
			{
				if ((this._m_to_folder != value))
				{
					this.Onm_to_folderChanging(value);
					this.SendPropertyChanging();
					this._m_to_folder = value;
					this.SendPropertyChanged("m_to_folder");
					this.Onm_to_folderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_body", DbType="NVarChar(3500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_body
		{
			get
			{
				return this._m_body;
			}
			set
			{
				if ((this._m_body != value))
				{
					this.Onm_bodyChanging(value);
					this.SendPropertyChanging();
					this._m_body = value;
					this.SendPropertyChanged("m_body");
					this.Onm_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime m_timestamp
		{
			get
			{
				return this._m_timestamp;
			}
			set
			{
				if ((this._m_timestamp != value))
				{
					this.Onm_timestampChanging(value);
					this.SendPropertyChanging();
					this._m_timestamp = value;
					this.SendPropertyChanged("m_timestamp");
					this.Onm_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_replied_to", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_replied_to
		{
			get
			{
				return this._m_replied_to;
			}
			set
			{
				if ((this._m_replied_to != value))
				{
					this.Onm_replied_toChanging(value);
					this.SendPropertyChanging();
					this._m_replied_to = value;
					this.SendPropertyChanged("m_replied_to");
					this.Onm_replied_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_is_read", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_is_read
		{
			get
			{
				return this._m_is_read;
			}
			set
			{
				if ((this._m_is_read != value))
				{
					this.Onm_is_readChanging(value);
					this.SendPropertyChanging();
					this._m_is_read = value;
					this.SendPropertyChanged("m_is_read");
					this.Onm_is_readChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_pending_approval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_pending_approval
		{
			get
			{
				return this._m_pending_approval;
			}
			set
			{
				if ((this._m_pending_approval != value))
				{
					this.Onm_pending_approvalChanging(value);
					this.SendPropertyChanging();
					this._m_pending_approval = value;
					this.SendPropertyChanged("m_pending_approval");
					this.Onm_pending_approvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_new", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_new
		{
			get
			{
				return this._m_new;
			}
			set
			{
				if ((this._m_new != value))
				{
					this.Onm_newChanging(value);
					this.SendPropertyChanging();
					this._m_new = value;
					this.SendPropertyChanged("m_new");
					this.Onm_newChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="archive_Photos")]
	public partial class archive_Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _u_username;
		
		private System.Data.Linq.Binary _p_image;
		
		private string _p_name;
		
		private string _p_description;
		
		private bool _p_approved;
		
		private bool _p_primary;
		
		private bool _p_explicit;
		
		private bool _p_private;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onp_imageChanging(System.Data.Linq.Binary value);
    partial void Onp_imageChanged();
    partial void Onp_nameChanging(string value);
    partial void Onp_nameChanged();
    partial void Onp_descriptionChanging(string value);
    partial void Onp_descriptionChanged();
    partial void Onp_approvedChanging(bool value);
    partial void Onp_approvedChanged();
    partial void Onp_primaryChanging(bool value);
    partial void Onp_primaryChanged();
    partial void Onp_explicitChanging(bool value);
    partial void Onp_explicitChanged();
    partial void Onp_privateChanging(bool value);
    partial void Onp_privateChanged();
    #endregion
		
		public archive_Photo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary p_image
		{
			get
			{
				return this._p_image;
			}
			set
			{
				if ((this._p_image != value))
				{
					this.Onp_imageChanging(value);
					this.SendPropertyChanging();
					this._p_image = value;
					this.SendPropertyChanged("p_image");
					this.Onp_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_name
		{
			get
			{
				return this._p_name;
			}
			set
			{
				if ((this._p_name != value))
				{
					this.Onp_nameChanging(value);
					this.SendPropertyChanging();
					this._p_name = value;
					this.SendPropertyChanged("p_name");
					this.Onp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_description
		{
			get
			{
				return this._p_description;
			}
			set
			{
				if ((this._p_description != value))
				{
					this.Onp_descriptionChanging(value);
					this.SendPropertyChanging();
					this._p_description = value;
					this.SendPropertyChanged("p_description");
					this.Onp_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_approved
		{
			get
			{
				return this._p_approved;
			}
			set
			{
				if ((this._p_approved != value))
				{
					this.Onp_approvedChanging(value);
					this.SendPropertyChanging();
					this._p_approved = value;
					this.SendPropertyChanged("p_approved");
					this.Onp_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_primary", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_primary
		{
			get
			{
				return this._p_primary;
			}
			set
			{
				if ((this._p_primary != value))
				{
					this.Onp_primaryChanging(value);
					this.SendPropertyChanging();
					this._p_primary = value;
					this.SendPropertyChanged("p_primary");
					this.Onp_primaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_explicit", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_explicit
		{
			get
			{
				return this._p_explicit;
			}
			set
			{
				if ((this._p_explicit != value))
				{
					this.Onp_explicitChanging(value);
					this.SendPropertyChanging();
					this._p_explicit = value;
					this.SendPropertyChanged("p_explicit");
					this.Onp_explicitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_private", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_private
		{
			get
			{
				return this._p_private;
			}
			set
			{
				if ((this._p_private != value))
				{
					this.Onp_privateChanging(value);
					this.SendPropertyChanging();
					this._p_private = value;
					this.SendPropertyChanged("p_private");
					this.Onp_privateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="archive_ProfileAnswers")]
	public partial class archive_ProfileAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private int _pq_id;
		
		private string _pa_value;
		
		private bool _pa_approved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpq_idChanging(int value);
    partial void Onpq_idChanged();
    partial void Onpa_valueChanging(string value);
    partial void Onpa_valueChanged();
    partial void Onpa_approvedChanging(bool value);
    partial void Onpa_approvedChanged();
    #endregion
		
		public archive_ProfileAnswer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pq_id
		{
			get
			{
				return this._pq_id;
			}
			set
			{
				if ((this._pq_id != value))
				{
					this.Onpq_idChanging(value);
					this.SendPropertyChanging();
					this._pq_id = value;
					this.SendPropertyChanged("pq_id");
					this.Onpq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_value", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pa_value
		{
			get
			{
				return this._pa_value;
			}
			set
			{
				if ((this._pa_value != value))
				{
					this.Onpa_valueChanging(value);
					this.SendPropertyChanging();
					this._pa_value = value;
					this.SendPropertyChanged("pa_value");
					this.Onpa_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pa_approved
		{
			get
			{
				return this._pa_approved;
			}
			set
			{
				if ((this._pa_approved != value))
				{
					this.Onpa_approvedChanging(value);
					this.SendPropertyChanging();
					this._pa_approved = value;
					this.SendPropertyChanged("pa_approved");
					this.Onpa_approvedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class AudioAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _aa_audioowner;
		
		private string _aa_audioviewer;
		
		private System.DateTime _aa_dateaccessgranted;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaa_audioownerChanging(string value);
    partial void Onaa_audioownerChanged();
    partial void Onaa_audioviewerChanging(string value);
    partial void Onaa_audioviewerChanged();
    partial void Onaa_dateaccessgrantedChanging(System.DateTime value);
    partial void Onaa_dateaccessgrantedChanged();
    #endregion
		
		public AudioAccess()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aa_audioowner", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string aa_audioowner
		{
			get
			{
				return this._aa_audioowner;
			}
			set
			{
				if ((this._aa_audioowner != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaa_audioownerChanging(value);
					this.SendPropertyChanging();
					this._aa_audioowner = value;
					this.SendPropertyChanged("aa_audioowner");
					this.Onaa_audioownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aa_audioviewer", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string aa_audioviewer
		{
			get
			{
				return this._aa_audioviewer;
			}
			set
			{
				if ((this._aa_audioviewer != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaa_audioviewerChanging(value);
					this.SendPropertyChanging();
					this._aa_audioviewer = value;
					this.SendPropertyChanged("aa_audioviewer");
					this.Onaa_audioviewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aa_dateaccessgranted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime aa_dateaccessgranted
		{
			get
			{
				return this._aa_dateaccessgranted;
			}
			set
			{
				if ((this._aa_dateaccessgranted != value))
				{
					this.Onaa_dateaccessgrantedChanging(value);
					this.SendPropertyChanging();
					this._aa_dateaccessgranted = value;
					this.SendPropertyChanged("aa_dateaccessgranted");
					this.Onaa_dateaccessgrantedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioAccess", Storage="_User", ThisKey="aa_audioowner", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AudioAccesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AudioAccesses.Add(this);
						this._aa_audioowner = value.u_username;
					}
					else
					{
						this._aa_audioowner = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioAccess1", Storage="_User1", ThisKey="aa_audioviewer", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.AudioAccesses1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.AudioAccesses1.Add(this);
						this._aa_audioviewer = value.u_username;
					}
					else
					{
						this._aa_audioviewer = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AudioUploads")]
	public partial class AudioUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _au_id;
		
		private string _u_username;
		
		private string _au_title;
		
		private bool _au_approved;
		
		private bool _au_private;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onau_idChanging(int value);
    partial void Onau_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onau_titleChanging(string value);
    partial void Onau_titleChanged();
    partial void Onau_approvedChanging(bool value);
    partial void Onau_approvedChanged();
    partial void Onau_privateChanging(bool value);
    partial void Onau_privateChanged();
    #endregion
		
		public AudioUpload()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int au_id
		{
			get
			{
				return this._au_id;
			}
			set
			{
				if ((this._au_id != value))
				{
					this.Onau_idChanging(value);
					this.SendPropertyChanging();
					this._au_id = value;
					this.SendPropertyChanged("au_id");
					this.Onau_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string au_title
		{
			get
			{
				return this._au_title;
			}
			set
			{
				if ((this._au_title != value))
				{
					this.Onau_titleChanging(value);
					this.SendPropertyChanging();
					this._au_title = value;
					this.SendPropertyChanged("au_title");
					this.Onau_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool au_approved
		{
			get
			{
				return this._au_approved;
			}
			set
			{
				if ((this._au_approved != value))
				{
					this.Onau_approvedChanging(value);
					this.SendPropertyChanging();
					this._au_approved = value;
					this.SendPropertyChanged("au_approved");
					this.Onau_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_private", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool au_private
		{
			get
			{
				return this._au_private;
			}
			set
			{
				if ((this._au_private != value))
				{
					this.Onau_privateChanging(value);
					this.SendPropertyChanging();
					this._au_private = value;
					this.SendPropertyChanged("au_private");
					this.Onau_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioUpload", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AudioUploads.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AudioUploads.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BannerCodes")]
	public partial class BannerCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bc_id;
		
		private int _bc_position;
		
		private int _bc_priority;
		
		private string _bc_target;
		
		private string _bc_code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbc_idChanging(int value);
    partial void Onbc_idChanged();
    partial void Onbc_positionChanging(int value);
    partial void Onbc_positionChanged();
    partial void Onbc_priorityChanging(int value);
    partial void Onbc_priorityChanged();
    partial void Onbc_targetChanging(string value);
    partial void Onbc_targetChanged();
    partial void Onbc_codeChanging(string value);
    partial void Onbc_codeChanged();
    #endregion
		
		public BannerCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int bc_id
		{
			get
			{
				return this._bc_id;
			}
			set
			{
				if ((this._bc_id != value))
				{
					this.Onbc_idChanging(value);
					this.SendPropertyChanging();
					this._bc_id = value;
					this.SendPropertyChanged("bc_id");
					this.Onbc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bc_position", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bc_position
		{
			get
			{
				return this._bc_position;
			}
			set
			{
				if ((this._bc_position != value))
				{
					this.Onbc_positionChanging(value);
					this.SendPropertyChanging();
					this._bc_position = value;
					this.SendPropertyChanged("bc_position");
					this.Onbc_positionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bc_priority", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bc_priority
		{
			get
			{
				return this._bc_priority;
			}
			set
			{
				if ((this._bc_priority != value))
				{
					this.Onbc_priorityChanging(value);
					this.SendPropertyChanging();
					this._bc_priority = value;
					this.SendPropertyChanged("bc_priority");
					this.Onbc_priorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bc_target", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string bc_target
		{
			get
			{
				return this._bc_target;
			}
			set
			{
				if ((this._bc_target != value))
				{
					this.Onbc_targetChanging(value);
					this.SendPropertyChanging();
					this._bc_target = value;
					this.SendPropertyChanged("bc_target");
					this.Onbc_targetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bc_code", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string bc_code
		{
			get
			{
				return this._bc_code;
			}
			set
			{
				if ((this._bc_code != value))
				{
					this.Onbc_codeChanging(value);
					this.SendPropertyChanging();
					this._bc_code = value;
					this.SendPropertyChanged("bc_code");
					this.Onbc_codeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BillingPlans")]
	public partial class BillingPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _p_title;
		
		private decimal _p_amount;
		
		private int _p_billing_cycle;
		
		private byte _p_billing_cycle_unit;
		
		private bool _p_deleted;
		
		private string _p_options;
		
		private EntitySet<Subscription> _Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onp_titleChanging(string value);
    partial void Onp_titleChanged();
    partial void Onp_amountChanging(decimal value);
    partial void Onp_amountChanged();
    partial void Onp_billing_cycleChanging(int value);
    partial void Onp_billing_cycleChanged();
    partial void Onp_billing_cycle_unitChanging(byte value);
    partial void Onp_billing_cycle_unitChanged();
    partial void Onp_deletedChanging(bool value);
    partial void Onp_deletedChanged();
    partial void Onp_optionsChanging(string value);
    partial void Onp_optionsChanged();
    #endregion
		
		public BillingPlan()
		{
			this._Subscriptions = new EntitySet<Subscription>(new Action<Subscription>(this.attach_Subscriptions), new Action<Subscription>(this.detach_Subscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_title
		{
			get
			{
				return this._p_title;
			}
			set
			{
				if ((this._p_title != value))
				{
					this.Onp_titleChanging(value);
					this.SendPropertyChanging();
					this._p_title = value;
					this.SendPropertyChanged("p_title");
					this.Onp_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_amount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal p_amount
		{
			get
			{
				return this._p_amount;
			}
			set
			{
				if ((this._p_amount != value))
				{
					this.Onp_amountChanging(value);
					this.SendPropertyChanging();
					this._p_amount = value;
					this.SendPropertyChanged("p_amount");
					this.Onp_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_billing_cycle", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_billing_cycle
		{
			get
			{
				return this._p_billing_cycle;
			}
			set
			{
				if ((this._p_billing_cycle != value))
				{
					this.Onp_billing_cycleChanging(value);
					this.SendPropertyChanging();
					this._p_billing_cycle = value;
					this.SendPropertyChanged("p_billing_cycle");
					this.Onp_billing_cycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_billing_cycle_unit", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte p_billing_cycle_unit
		{
			get
			{
				return this._p_billing_cycle_unit;
			}
			set
			{
				if ((this._p_billing_cycle_unit != value))
				{
					this.Onp_billing_cycle_unitChanging(value);
					this.SendPropertyChanging();
					this._p_billing_cycle_unit = value;
					this.SendPropertyChanged("p_billing_cycle_unit");
					this.Onp_billing_cycle_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_deleted
		{
			get
			{
				return this._p_deleted;
			}
			set
			{
				if ((this._p_deleted != value))
				{
					this.Onp_deletedChanging(value);
					this.SendPropertyChanging();
					this._p_deleted = value;
					this.SendPropertyChanged("p_deleted");
					this.Onp_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_options", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string p_options
		{
			get
			{
				return this._p_options;
			}
			set
			{
				if ((this._p_options != value))
				{
					this.Onp_optionsChanging(value);
					this.SendPropertyChanging();
					this._p_options = value;
					this.SendPropertyChanged("p_options");
					this.Onp_optionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingPlan_Subscription", Storage="_Subscriptions", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<Subscription> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				this._Subscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.BillingPlan = this;
		}
		
		private void detach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.BillingPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BlockedUsers")]
	public partial class BlockedUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _bu_userblocker;
		
		private string _bu_blockeduser;
		
		private System.DateTime _bu_blockdate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbu_userblockerChanging(string value);
    partial void Onbu_userblockerChanged();
    partial void Onbu_blockeduserChanging(string value);
    partial void Onbu_blockeduserChanged();
    partial void Onbu_blockdateChanging(System.DateTime value);
    partial void Onbu_blockdateChanged();
    #endregion
		
		public BlockedUser()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bu_userblocker", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string bu_userblocker
		{
			get
			{
				return this._bu_userblocker;
			}
			set
			{
				if ((this._bu_userblocker != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbu_userblockerChanging(value);
					this.SendPropertyChanging();
					this._bu_userblocker = value;
					this.SendPropertyChanged("bu_userblocker");
					this.Onbu_userblockerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bu_blockeduser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string bu_blockeduser
		{
			get
			{
				return this._bu_blockeduser;
			}
			set
			{
				if ((this._bu_blockeduser != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbu_blockeduserChanging(value);
					this.SendPropertyChanging();
					this._bu_blockeduser = value;
					this.SendPropertyChanged("bu_blockeduser");
					this.Onbu_blockeduserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bu_blockdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime bu_blockdate
		{
			get
			{
				return this._bu_blockdate;
			}
			set
			{
				if ((this._bu_blockdate != value))
				{
					this.Onbu_blockdateChanging(value);
					this.SendPropertyChanging();
					this._bu_blockdate = value;
					this.SendPropertyChanged("bu_blockdate");
					this.Onbu_blockdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlockedUser", Storage="_User", ThisKey="bu_userblocker", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BlockedUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BlockedUsers.Add(this);
						this._bu_userblocker = value.u_username;
					}
					else
					{
						this._bu_userblocker = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlockedUser1", Storage="_User1", ThisKey="bu_blockeduser", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.BlockedUsers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.BlockedUsers1.Add(this);
						this._bu_blockeduser = value.u_username;
					}
					else
					{
						this._bu_blockeduser = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BlogPostComments")]
	public partial class BlogPostComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bpc_id;
		
		private int _bp_id;
		
		private string _u_username;
		
		private string _bpc_text;
		
		private System.DateTime _bpc_dateposted;
		
		private bool _bpc_approved;
		
		private EntityRef<BlogPost> _BlogPost;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbpc_idChanging(int value);
    partial void Onbpc_idChanged();
    partial void Onbp_idChanging(int value);
    partial void Onbp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onbpc_textChanging(string value);
    partial void Onbpc_textChanged();
    partial void Onbpc_datepostedChanging(System.DateTime value);
    partial void Onbpc_datepostedChanged();
    partial void Onbpc_approvedChanging(bool value);
    partial void Onbpc_approvedChanged();
    #endregion
		
		public BlogPostComment()
		{
			this._BlogPost = default(EntityRef<BlogPost>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int bpc_id
		{
			get
			{
				return this._bpc_id;
			}
			set
			{
				if ((this._bpc_id != value))
				{
					this.Onbpc_idChanging(value);
					this.SendPropertyChanging();
					this._bpc_id = value;
					this.SendPropertyChanged("bpc_id");
					this.Onbpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bp_id
		{
			get
			{
				return this._bp_id;
			}
			set
			{
				if ((this._bp_id != value))
				{
					if (this._BlogPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbp_idChanging(value);
					this.SendPropertyChanging();
					this._bp_id = value;
					this.SendPropertyChanged("bp_id");
					this.Onbp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpc_text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string bpc_text
		{
			get
			{
				return this._bpc_text;
			}
			set
			{
				if ((this._bpc_text != value))
				{
					this.Onbpc_textChanging(value);
					this.SendPropertyChanging();
					this._bpc_text = value;
					this.SendPropertyChanged("bpc_text");
					this.Onbpc_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpc_dateposted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime bpc_dateposted
		{
			get
			{
				return this._bpc_dateposted;
			}
			set
			{
				if ((this._bpc_dateposted != value))
				{
					this.Onbpc_datepostedChanging(value);
					this.SendPropertyChanging();
					this._bpc_dateposted = value;
					this.SendPropertyChanged("bpc_dateposted");
					this.Onbpc_datepostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpc_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool bpc_approved
		{
			get
			{
				return this._bpc_approved;
			}
			set
			{
				if ((this._bpc_approved != value))
				{
					this.Onbpc_approvedChanging(value);
					this.SendPropertyChanging();
					this._bpc_approved = value;
					this.SendPropertyChanged("bpc_approved");
					this.Onbpc_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPostComment", Storage="_BlogPost", ThisKey="bp_id", OtherKey="bp_id", IsForeignKey=true)]
		public BlogPost BlogPost
		{
			get
			{
				return this._BlogPost.Entity;
			}
			set
			{
				BlogPost previousValue = this._BlogPost.Entity;
				if (((previousValue != value) 
							|| (this._BlogPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPost.Entity = null;
						previousValue.BlogPostComments.Remove(this);
					}
					this._BlogPost.Entity = value;
					if ((value != null))
					{
						value.BlogPostComments.Add(this);
						this._bp_id = value.bp_id;
					}
					else
					{
						this._bp_id = default(int);
					}
					this.SendPropertyChanged("BlogPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlogPostComment", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BlogPostComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BlogPostComments.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BlogPosts")]
	public partial class BlogPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bp_id;
		
		private int _b_id;
		
		private string _bp_title;
		
		private string _bp_content;
		
		private System.DateTime _bp_dateposted;
		
		private int _bp_reads;
		
		private bool _bp_approved;
		
		private EntitySet<BlogPostComment> _BlogPostComments;
		
		private EntityRef<Blog> _Blog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbp_idChanging(int value);
    partial void Onbp_idChanged();
    partial void Onb_idChanging(int value);
    partial void Onb_idChanged();
    partial void Onbp_titleChanging(string value);
    partial void Onbp_titleChanged();
    partial void Onbp_contentChanging(string value);
    partial void Onbp_contentChanged();
    partial void Onbp_datepostedChanging(System.DateTime value);
    partial void Onbp_datepostedChanged();
    partial void Onbp_readsChanging(int value);
    partial void Onbp_readsChanged();
    partial void Onbp_approvedChanging(bool value);
    partial void Onbp_approvedChanged();
    #endregion
		
		public BlogPost()
		{
			this._BlogPostComments = new EntitySet<BlogPostComment>(new Action<BlogPostComment>(this.attach_BlogPostComments), new Action<BlogPostComment>(this.detach_BlogPostComments));
			this._Blog = default(EntityRef<Blog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int bp_id
		{
			get
			{
				return this._bp_id;
			}
			set
			{
				if ((this._bp_id != value))
				{
					this.Onbp_idChanging(value);
					this.SendPropertyChanging();
					this._bp_id = value;
					this.SendPropertyChanged("bp_id");
					this.Onbp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int b_id
		{
			get
			{
				return this._b_id;
			}
			set
			{
				if ((this._b_id != value))
				{
					if (this._Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onb_idChanging(value);
					this.SendPropertyChanging();
					this._b_id = value;
					this.SendPropertyChanged("b_id");
					this.Onb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string bp_title
		{
			get
			{
				return this._bp_title;
			}
			set
			{
				if ((this._bp_title != value))
				{
					this.Onbp_titleChanging(value);
					this.SendPropertyChanging();
					this._bp_title = value;
					this.SendPropertyChanged("bp_title");
					this.Onbp_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string bp_content
		{
			get
			{
				return this._bp_content;
			}
			set
			{
				if ((this._bp_content != value))
				{
					this.Onbp_contentChanging(value);
					this.SendPropertyChanging();
					this._bp_content = value;
					this.SendPropertyChanged("bp_content");
					this.Onbp_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_dateposted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime bp_dateposted
		{
			get
			{
				return this._bp_dateposted;
			}
			set
			{
				if ((this._bp_dateposted != value))
				{
					this.Onbp_datepostedChanging(value);
					this.SendPropertyChanging();
					this._bp_dateposted = value;
					this.SendPropertyChanged("bp_dateposted");
					this.Onbp_datepostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_reads", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bp_reads
		{
			get
			{
				return this._bp_reads;
			}
			set
			{
				if ((this._bp_reads != value))
				{
					this.Onbp_readsChanging(value);
					this.SendPropertyChanging();
					this._bp_reads = value;
					this.SendPropertyChanged("bp_reads");
					this.Onbp_readsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool bp_approved
		{
			get
			{
				return this._bp_approved;
			}
			set
			{
				if ((this._bp_approved != value))
				{
					this.Onbp_approvedChanging(value);
					this.SendPropertyChanging();
					this._bp_approved = value;
					this.SendPropertyChanged("bp_approved");
					this.Onbp_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPostComment", Storage="_BlogPostComments", ThisKey="bp_id", OtherKey="bp_id")]
		public EntitySet<BlogPostComment> BlogPostComments
		{
			get
			{
				return this._BlogPostComments;
			}
			set
			{
				this._BlogPostComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_BlogPost", Storage="_Blog", ThisKey="b_id", OtherKey="b_id", IsForeignKey=true)]
		public Blog Blog
		{
			get
			{
				return this._Blog.Entity;
			}
			set
			{
				Blog previousValue = this._Blog.Entity;
				if (((previousValue != value) 
							|| (this._Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog.Entity = null;
						previousValue.BlogPosts.Remove(this);
					}
					this._Blog.Entity = value;
					if ((value != null))
					{
						value.BlogPosts.Add(this);
						this._b_id = value.b_id;
					}
					else
					{
						this._b_id = default(int);
					}
					this.SendPropertyChanged("Blog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPostComments(BlogPostComment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = this;
		}
		
		private void detach_BlogPostComments(BlogPostComment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Blogs")]
	public partial class Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _b_id;
		
		private string _u_username;
		
		private string _b_name;
		
		private string _b_description;
		
		private System.DateTime _b_datecreated;
		
		private string _b_settings;
		
		private EntitySet<BlogPost> _BlogPosts;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onb_idChanging(int value);
    partial void Onb_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onb_nameChanging(string value);
    partial void Onb_nameChanged();
    partial void Onb_descriptionChanging(string value);
    partial void Onb_descriptionChanged();
    partial void Onb_datecreatedChanging(System.DateTime value);
    partial void Onb_datecreatedChanged();
    partial void Onb_settingsChanging(string value);
    partial void Onb_settingsChanged();
    #endregion
		
		public Blog()
		{
			this._BlogPosts = new EntitySet<BlogPost>(new Action<BlogPost>(this.attach_BlogPosts), new Action<BlogPost>(this.detach_BlogPosts));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int b_id
		{
			get
			{
				return this._b_id;
			}
			set
			{
				if ((this._b_id != value))
				{
					this.Onb_idChanging(value);
					this.SendPropertyChanging();
					this._b_id = value;
					this.SendPropertyChanged("b_id");
					this.Onb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string b_name
		{
			get
			{
				return this._b_name;
			}
			set
			{
				if ((this._b_name != value))
				{
					this.Onb_nameChanging(value);
					this.SendPropertyChanging();
					this._b_name = value;
					this.SendPropertyChanged("b_name");
					this.Onb_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string b_description
		{
			get
			{
				return this._b_description;
			}
			set
			{
				if ((this._b_description != value))
				{
					this.Onb_descriptionChanging(value);
					this.SendPropertyChanging();
					this._b_description = value;
					this.SendPropertyChanged("b_description");
					this.Onb_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_datecreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime b_datecreated
		{
			get
			{
				return this._b_datecreated;
			}
			set
			{
				if ((this._b_datecreated != value))
				{
					this.Onb_datecreatedChanging(value);
					this.SendPropertyChanging();
					this._b_datecreated = value;
					this.SendPropertyChanged("b_datecreated");
					this.Onb_datecreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_settings", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string b_settings
		{
			get
			{
				return this._b_settings;
			}
			set
			{
				if ((this._b_settings != value))
				{
					this.Onb_settingsChanging(value);
					this.SendPropertyChanging();
					this._b_settings = value;
					this.SendPropertyChanged("b_settings");
					this.Onb_settingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_BlogPost", Storage="_BlogPosts", ThisKey="b_id", OtherKey="b_id")]
		public EntitySet<BlogPost> BlogPosts
		{
			get
			{
				return this._BlogPosts;
			}
			set
			{
				this._BlogPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Blogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Blogs.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPosts(BlogPost entity)
		{
			this.SendPropertyChanging();
			entity.Blog = this;
		}
		
		private void detach_BlogPosts(BlogPost entity)
		{
			this.SendPropertyChanging();
			entity.Blog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _c_id;
		
		private string _c_name;
		
		private int _c_order;
		
		private bool _c_userscancreategroups;
		
		private EntitySet<GroupsCategory> _GroupsCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onc_idChanging(int value);
    partial void Onc_idChanged();
    partial void Onc_nameChanging(string value);
    partial void Onc_nameChanged();
    partial void Onc_orderChanging(int value);
    partial void Onc_orderChanged();
    partial void Onc_userscancreategroupsChanging(bool value);
    partial void Onc_userscancreategroupsChanged();
    #endregion
		
		public Category()
		{
			this._GroupsCategories = new EntitySet<GroupsCategory>(new Action<GroupsCategory>(this.attach_GroupsCategories), new Action<GroupsCategory>(this.detach_GroupsCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int c_id
		{
			get
			{
				return this._c_id;
			}
			set
			{
				if ((this._c_id != value))
				{
					this.Onc_idChanging(value);
					this.SendPropertyChanging();
					this._c_id = value;
					this.SendPropertyChanged("c_id");
					this.Onc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string c_name
		{
			get
			{
				return this._c_name;
			}
			set
			{
				if ((this._c_name != value))
				{
					this.Onc_nameChanging(value);
					this.SendPropertyChanging();
					this._c_name = value;
					this.SendPropertyChanged("c_name");
					this.Onc_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_order", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int c_order
		{
			get
			{
				return this._c_order;
			}
			set
			{
				if ((this._c_order != value))
				{
					this.Onc_orderChanging(value);
					this.SendPropertyChanging();
					this._c_order = value;
					this.SendPropertyChanged("c_order");
					this.Onc_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_userscancreategroups", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool c_userscancreategroups
		{
			get
			{
				return this._c_userscancreategroups;
			}
			set
			{
				if ((this._c_userscancreategroups != value))
				{
					this.Onc_userscancreategroupsChanging(value);
					this.SendPropertyChanging();
					this._c_userscancreategroups = value;
					this.SendPropertyChanged("c_userscancreategroups");
					this.Onc_userscancreategroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_GroupsCategory", Storage="_GroupsCategories", ThisKey="c_id", OtherKey="c_id")]
		public EntitySet<GroupsCategory> GroupsCategories
		{
			get
			{
				return this._GroupsCategories;
			}
			set
			{
				this._GroupsCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupsCategories(GroupsCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_GroupsCategories(GroupsCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ChatBans")]
	public partial class ChatBan
	{
		
		private int _cb_id;
		
		private System.Nullable<int> _cr_id;
		
		private System.Nullable<int> _cu_id;
		
		private string _cb_ip;
		
		private System.DateTime _cb_date;
		
		private System.Nullable<System.DateTime> _cb_dateexpires;
		
		public ChatBan()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cb_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cb_id
		{
			get
			{
				return this._cb_id;
			}
			set
			{
				if ((this._cb_id != value))
				{
					this._cb_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cr_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cr_id
		{
			get
			{
				return this._cr_id;
			}
			set
			{
				if ((this._cr_id != value))
				{
					this._cr_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cu_id
		{
			get
			{
				return this._cu_id;
			}
			set
			{
				if ((this._cu_id != value))
				{
					this._cu_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cb_ip", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string cb_ip
		{
			get
			{
				return this._cb_ip;
			}
			set
			{
				if ((this._cb_ip != value))
				{
					this._cb_ip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cb_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cb_date
		{
			get
			{
				return this._cb_date;
			}
			set
			{
				if ((this._cb_date != value))
				{
					this._cb_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cb_dateexpires", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> cb_dateexpires
		{
			get
			{
				return this._cb_dateexpires;
			}
			set
			{
				if ((this._cb_dateexpires != value))
				{
					this._cb_dateexpires = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ChatMessages")]
	public partial class ChatMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cm_id;
		
		private System.DateTime _cm_time;
		
		private System.Nullable<int> _cr_id;
		
		private System.Nullable<int> _cu_id_sender;
		
		private string _cm_senderdisplayname;
		
		private System.Nullable<int> _cu_id_target;
		
		private string _cm_text;
		
		private string _cm_texthtml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncm_idChanging(int value);
    partial void Oncm_idChanged();
    partial void Oncm_timeChanging(System.DateTime value);
    partial void Oncm_timeChanged();
    partial void Oncr_idChanging(System.Nullable<int> value);
    partial void Oncr_idChanged();
    partial void Oncu_id_senderChanging(System.Nullable<int> value);
    partial void Oncu_id_senderChanged();
    partial void Oncm_senderdisplaynameChanging(string value);
    partial void Oncm_senderdisplaynameChanged();
    partial void Oncu_id_targetChanging(System.Nullable<int> value);
    partial void Oncu_id_targetChanged();
    partial void Oncm_textChanging(string value);
    partial void Oncm_textChanged();
    partial void Oncm_texthtmlChanging(string value);
    partial void Oncm_texthtmlChanged();
    #endregion
		
		public ChatMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cm_id
		{
			get
			{
				return this._cm_id;
			}
			set
			{
				if ((this._cm_id != value))
				{
					this.Oncm_idChanging(value);
					this.SendPropertyChanging();
					this._cm_id = value;
					this.SendPropertyChanged("cm_id");
					this.Oncm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cm_time
		{
			get
			{
				return this._cm_time;
			}
			set
			{
				if ((this._cm_time != value))
				{
					this.Oncm_timeChanging(value);
					this.SendPropertyChanging();
					this._cm_time = value;
					this.SendPropertyChanged("cm_time");
					this.Oncm_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cr_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cr_id
		{
			get
			{
				return this._cr_id;
			}
			set
			{
				if ((this._cr_id != value))
				{
					this.Oncr_idChanging(value);
					this.SendPropertyChanging();
					this._cr_id = value;
					this.SendPropertyChanged("cr_id");
					this.Oncr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_id_sender", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cu_id_sender
		{
			get
			{
				return this._cu_id_sender;
			}
			set
			{
				if ((this._cu_id_sender != value))
				{
					this.Oncu_id_senderChanging(value);
					this.SendPropertyChanging();
					this._cu_id_sender = value;
					this.SendPropertyChanged("cu_id_sender");
					this.Oncu_id_senderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_senderdisplayname", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cm_senderdisplayname
		{
			get
			{
				return this._cm_senderdisplayname;
			}
			set
			{
				if ((this._cm_senderdisplayname != value))
				{
					this.Oncm_senderdisplaynameChanging(value);
					this.SendPropertyChanging();
					this._cm_senderdisplayname = value;
					this.SendPropertyChanged("cm_senderdisplayname");
					this.Oncm_senderdisplaynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_id_target", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cu_id_target
		{
			get
			{
				return this._cu_id_target;
			}
			set
			{
				if ((this._cu_id_target != value))
				{
					this.Oncu_id_targetChanging(value);
					this.SendPropertyChanging();
					this._cu_id_target = value;
					this.SendPropertyChanged("cu_id_target");
					this.Oncu_id_targetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_text", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cm_text
		{
			get
			{
				return this._cm_text;
			}
			set
			{
				if ((this._cm_text != value))
				{
					this.Oncm_textChanging(value);
					this.SendPropertyChanging();
					this._cm_text = value;
					this.SendPropertyChanged("cm_text");
					this.Oncm_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_texthtml", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cm_texthtml
		{
			get
			{
				return this._cm_texthtml;
			}
			set
			{
				if ((this._cm_texthtml != value))
				{
					this.Oncm_texthtmlChanging(value);
					this.SendPropertyChanging();
					this._cm_texthtml = value;
					this.SendPropertyChanged("cm_texthtml");
					this.Oncm_texthtmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ChatUsers")]
	public partial class ChatUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cu_id;
		
		private string _cu_username;
		
		private string _cu_displayname;
		
		private System.DateTime _cu_begintime;
		
		private System.DateTime _cu_activetime;
		
		private string _cu_ip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncu_idChanging(int value);
    partial void Oncu_idChanged();
    partial void Oncu_usernameChanging(string value);
    partial void Oncu_usernameChanged();
    partial void Oncu_displaynameChanging(string value);
    partial void Oncu_displaynameChanged();
    partial void Oncu_begintimeChanging(System.DateTime value);
    partial void Oncu_begintimeChanged();
    partial void Oncu_activetimeChanging(System.DateTime value);
    partial void Oncu_activetimeChanged();
    partial void Oncu_ipChanging(string value);
    partial void Oncu_ipChanged();
    #endregion
		
		public ChatUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cu_id
		{
			get
			{
				return this._cu_id;
			}
			set
			{
				if ((this._cu_id != value))
				{
					this.Oncu_idChanging(value);
					this.SendPropertyChanging();
					this._cu_id = value;
					this.SendPropertyChanged("cu_id");
					this.Oncu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_username", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cu_username
		{
			get
			{
				return this._cu_username;
			}
			set
			{
				if ((this._cu_username != value))
				{
					this.Oncu_usernameChanging(value);
					this.SendPropertyChanging();
					this._cu_username = value;
					this.SendPropertyChanged("cu_username");
					this.Oncu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_displayname", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string cu_displayname
		{
			get
			{
				return this._cu_displayname;
			}
			set
			{
				if ((this._cu_displayname != value))
				{
					this.Oncu_displaynameChanging(value);
					this.SendPropertyChanging();
					this._cu_displayname = value;
					this.SendPropertyChanged("cu_displayname");
					this.Oncu_displaynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_begintime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cu_begintime
		{
			get
			{
				return this._cu_begintime;
			}
			set
			{
				if ((this._cu_begintime != value))
				{
					this.Oncu_begintimeChanging(value);
					this.SendPropertyChanging();
					this._cu_begintime = value;
					this.SendPropertyChanged("cu_begintime");
					this.Oncu_begintimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_activetime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cu_activetime
		{
			get
			{
				return this._cu_activetime;
			}
			set
			{
				if ((this._cu_activetime != value))
				{
					this.Oncu_activetimeChanging(value);
					this.SendPropertyChanging();
					this._cu_activetime = value;
					this.SendPropertyChanged("cu_activetime");
					this.Oncu_activetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cu_ip", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string cu_ip
		{
			get
			{
				return this._cu_ip;
			}
			set
			{
				if ((this._cu_ip != value))
				{
					this.Oncu_ipChanging(value);
					this.SendPropertyChanging();
					this._cu_ip = value;
					this.SendPropertyChanged("cu_ip");
					this.Oncu_ipChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _c_id;
		
		private string _c_from_username;
		
		private string _c_to_username;
		
		private string _c_comment_text;
		
		private System.DateTime _c_date_posted;
		
		private bool _c_approved;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onc_idChanging(int value);
    partial void Onc_idChanged();
    partial void Onc_from_usernameChanging(string value);
    partial void Onc_from_usernameChanged();
    partial void Onc_to_usernameChanging(string value);
    partial void Onc_to_usernameChanged();
    partial void Onc_comment_textChanging(string value);
    partial void Onc_comment_textChanged();
    partial void Onc_date_postedChanging(System.DateTime value);
    partial void Onc_date_postedChanged();
    partial void Onc_approvedChanging(bool value);
    partial void Onc_approvedChanged();
    #endregion
		
		public Comment()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int c_id
		{
			get
			{
				return this._c_id;
			}
			set
			{
				if ((this._c_id != value))
				{
					this.Onc_idChanging(value);
					this.SendPropertyChanging();
					this._c_id = value;
					this.SendPropertyChanged("c_id");
					this.Onc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string c_from_username
		{
			get
			{
				return this._c_from_username;
			}
			set
			{
				if ((this._c_from_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onc_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._c_from_username = value;
					this.SendPropertyChanged("c_from_username");
					this.Onc_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string c_to_username
		{
			get
			{
				return this._c_to_username;
			}
			set
			{
				if ((this._c_to_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onc_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._c_to_username = value;
					this.SendPropertyChanged("c_to_username");
					this.Onc_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_comment_text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string c_comment_text
		{
			get
			{
				return this._c_comment_text;
			}
			set
			{
				if ((this._c_comment_text != value))
				{
					this.Onc_comment_textChanging(value);
					this.SendPropertyChanging();
					this._c_comment_text = value;
					this.SendPropertyChanged("c_comment_text");
					this.Onc_comment_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_date_posted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime c_date_posted
		{
			get
			{
				return this._c_date_posted;
			}
			set
			{
				if ((this._c_date_posted != value))
				{
					this.Onc_date_postedChanging(value);
					this.SendPropertyChanging();
					this._c_date_posted = value;
					this.SendPropertyChanged("c_date_posted");
					this.Onc_date_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool c_approved
		{
			get
			{
				return this._c_approved;
			}
			set
			{
				if ((this._c_approved != value))
				{
					this.Onc_approvedChanging(value);
					this.SendPropertyChanging();
					this._c_approved = value;
					this.SendPropertyChanged("c_approved");
					this.Onc_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="c_from_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._c_from_username = value.u_username;
					}
					else
					{
						this._c_from_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment1", Storage="_User1", ThisKey="c_to_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Comments1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Comments1.Add(this);
						this._c_to_username = value.u_username;
					}
					else
					{
						this._c_to_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CommunityPhotoApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cpa_id;
		
		private string _u_username;
		
		private int _p_id;
		
		private bool _cpa_approved;
		
		private System.DateTime _cpa_timestamp;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncpa_idChanging(int value);
    partial void Oncpa_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Oncpa_approvedChanging(bool value);
    partial void Oncpa_approvedChanged();
    partial void Oncpa_timestampChanging(System.DateTime value);
    partial void Oncpa_timestampChanged();
    #endregion
		
		public CommunityPhotoApproval()
		{
			this._Photo = default(EntityRef<Photo>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cpa_id
		{
			get
			{
				return this._cpa_id;
			}
			set
			{
				if ((this._cpa_id != value))
				{
					this.Oncpa_idChanging(value);
					this.SendPropertyChanging();
					this._cpa_id = value;
					this.SendPropertyChanged("cpa_id");
					this.Oncpa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool cpa_approved
		{
			get
			{
				return this._cpa_approved;
			}
			set
			{
				if ((this._cpa_approved != value))
				{
					this.Oncpa_approvedChanging(value);
					this.SendPropertyChanging();
					this._cpa_approved = value;
					this.SendPropertyChanged("cpa_approved");
					this.Oncpa_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cpa_timestamp
		{
			get
			{
				return this._cpa_timestamp;
			}
			set
			{
				if ((this._cpa_timestamp != value))
				{
					this.Oncpa_timestampChanging(value);
					this.SendPropertyChanging();
					this._cpa_timestamp = value;
					this.SendPropertyChanged("cpa_timestamp");
					this.Oncpa_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_CommunityPhotoApproval", Storage="_Photo", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.CommunityPhotoApprovals.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.CommunityPhotoApprovals.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityPhotoApproval", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommunityPhotoApprovals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommunityPhotoApprovals.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CommunityProfileApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cpa_id;
		
		private string _u_username;
		
		private string _cpa_approvedby;
		
		private bool _cpa_approved;
		
		private System.DateTime _cpa_timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncpa_idChanging(int value);
    partial void Oncpa_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Oncpa_approvedbyChanging(string value);
    partial void Oncpa_approvedbyChanged();
    partial void Oncpa_approvedChanging(bool value);
    partial void Oncpa_approvedChanged();
    partial void Oncpa_timestampChanging(System.DateTime value);
    partial void Oncpa_timestampChanged();
    #endregion
		
		public CommunityProfileApproval()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cpa_id
		{
			get
			{
				return this._cpa_id;
			}
			set
			{
				if ((this._cpa_id != value))
				{
					this.Oncpa_idChanging(value);
					this.SendPropertyChanging();
					this._cpa_id = value;
					this.SendPropertyChanged("cpa_id");
					this.Oncpa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_approvedby", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cpa_approvedby
		{
			get
			{
				return this._cpa_approvedby;
			}
			set
			{
				if ((this._cpa_approvedby != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncpa_approvedbyChanging(value);
					this.SendPropertyChanging();
					this._cpa_approvedby = value;
					this.SendPropertyChanged("cpa_approvedby");
					this.Oncpa_approvedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool cpa_approved
		{
			get
			{
				return this._cpa_approved;
			}
			set
			{
				if ((this._cpa_approved != value))
				{
					this.Oncpa_approvedChanging(value);
					this.SendPropertyChanging();
					this._cpa_approved = value;
					this.SendPropertyChanged("cpa_approved");
					this.Oncpa_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpa_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime cpa_timestamp
		{
			get
			{
				return this._cpa_timestamp;
			}
			set
			{
				if ((this._cpa_timestamp != value))
				{
					this.Oncpa_timestampChanging(value);
					this.SendPropertyChanging();
					this._cpa_timestamp = value;
					this.SendPropertyChanged("cpa_timestamp");
					this.Oncpa_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityProfileApproval", Storage="_User", ThisKey="cpa_approvedby", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommunityProfileApprovals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommunityProfileApprovals.Add(this);
						this._cpa_approvedby = value.u_username;
					}
					else
					{
						this._cpa_approvedby = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityProfileApproval1", Storage="_User1", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CommunityProfileApprovals1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CommunityProfileApprovals1.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ContentPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cp_id;
		
		private string _cp_title;
		
		private string _cp_content;
		
		private System.Nullable<int> _cp_header_position;
		
		private System.Nullable<int> _cp_footer_position;
		
		private int _l_id;
		
		private int _cp_visiblefor;
		
		private string _cp_url;
		
		private string _cp_metadescription;
		
		private string _cp_metakeyword;
		
		private string _cp_urlrewrite;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncp_idChanging(int value);
    partial void Oncp_idChanged();
    partial void Oncp_titleChanging(string value);
    partial void Oncp_titleChanged();
    partial void Oncp_contentChanging(string value);
    partial void Oncp_contentChanged();
    partial void Oncp_header_positionChanging(System.Nullable<int> value);
    partial void Oncp_header_positionChanged();
    partial void Oncp_footer_positionChanging(System.Nullable<int> value);
    partial void Oncp_footer_positionChanged();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    partial void Oncp_visibleforChanging(int value);
    partial void Oncp_visibleforChanged();
    partial void Oncp_urlChanging(string value);
    partial void Oncp_urlChanged();
    partial void Oncp_metadescriptionChanging(string value);
    partial void Oncp_metadescriptionChanged();
    partial void Oncp_metakeywordChanging(string value);
    partial void Oncp_metakeywordChanged();
    partial void Oncp_urlrewriteChanging(string value);
    partial void Oncp_urlrewriteChanged();
    #endregion
		
		public ContentPage()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cp_id
		{
			get
			{
				return this._cp_id;
			}
			set
			{
				if ((this._cp_id != value))
				{
					this.Oncp_idChanging(value);
					this.SendPropertyChanging();
					this._cp_id = value;
					this.SendPropertyChanged("cp_id");
					this.Oncp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cp_title
		{
			get
			{
				return this._cp_title;
			}
			set
			{
				if ((this._cp_title != value))
				{
					this.Oncp_titleChanging(value);
					this.SendPropertyChanging();
					this._cp_title = value;
					this.SendPropertyChanged("cp_title");
					this.Oncp_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cp_content
		{
			get
			{
				return this._cp_content;
			}
			set
			{
				if ((this._cp_content != value))
				{
					this.Oncp_contentChanging(value);
					this.SendPropertyChanging();
					this._cp_content = value;
					this.SendPropertyChanged("cp_content");
					this.Oncp_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_header_position", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cp_header_position
		{
			get
			{
				return this._cp_header_position;
			}
			set
			{
				if ((this._cp_header_position != value))
				{
					this.Oncp_header_positionChanging(value);
					this.SendPropertyChanging();
					this._cp_header_position = value;
					this.SendPropertyChanged("cp_header_position");
					this.Oncp_header_positionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_footer_position", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> cp_footer_position
		{
			get
			{
				return this._cp_footer_position;
			}
			set
			{
				if ((this._cp_footer_position != value))
				{
					this.Oncp_footer_positionChanging(value);
					this.SendPropertyChanging();
					this._cp_footer_position = value;
					this.SendPropertyChanged("cp_footer_position");
					this.Oncp_footer_positionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_visiblefor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int cp_visiblefor
		{
			get
			{
				return this._cp_visiblefor;
			}
			set
			{
				if ((this._cp_visiblefor != value))
				{
					this.Oncp_visibleforChanging(value);
					this.SendPropertyChanging();
					this._cp_visiblefor = value;
					this.SendPropertyChanged("cp_visiblefor");
					this.Oncp_visibleforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_url", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string cp_url
		{
			get
			{
				return this._cp_url;
			}
			set
			{
				if ((this._cp_url != value))
				{
					this.Oncp_urlChanging(value);
					this.SendPropertyChanging();
					this._cp_url = value;
					this.SendPropertyChanged("cp_url");
					this.Oncp_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_metadescription", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cp_metadescription
		{
			get
			{
				return this._cp_metadescription;
			}
			set
			{
				if ((this._cp_metadescription != value))
				{
					this.Oncp_metadescriptionChanging(value);
					this.SendPropertyChanging();
					this._cp_metadescription = value;
					this.SendPropertyChanged("cp_metadescription");
					this.Oncp_metadescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_metakeyword", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cp_metakeyword
		{
			get
			{
				return this._cp_metakeyword;
			}
			set
			{
				if ((this._cp_metakeyword != value))
				{
					this.Oncp_metakeywordChanging(value);
					this.SendPropertyChanging();
					this._cp_metakeyword = value;
					this.SendPropertyChanged("cp_metakeyword");
					this.Oncp_metakeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_urlrewrite", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string cp_urlrewrite
		{
			get
			{
				return this._cp_urlrewrite;
			}
			set
			{
				if ((this._cp_urlrewrite != value))
				{
					this.Oncp_urlrewriteChanging(value);
					this.SendPropertyChanging();
					this._cp_urlrewrite = value;
					this.SendPropertyChanged("cp_urlrewrite");
					this.Oncp_urlrewriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ContentPage", Storage="_Language", ThisKey="l_id", OtherKey="l_id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.ContentPages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.ContentPages.Add(this);
						this._l_id = value.l_id;
					}
					else
					{
						this._l_id = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ContentViews")]
	public partial class ContentView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cv_key;
		
		private int _l_id;
		
		private string _cv_content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncv_keyChanging(string value);
    partial void Oncv_keyChanged();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    partial void Oncv_contentChanging(string value);
    partial void Oncv_contentChanged();
    #endregion
		
		public ContentView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cv_key", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string cv_key
		{
			get
			{
				return this._cv_key;
			}
			set
			{
				if ((this._cv_key != value))
				{
					this.Oncv_keyChanging(value);
					this.SendPropertyChanging();
					this._cv_key = value;
					this.SendPropertyChanged("cv_key");
					this.Oncv_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cv_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cv_content
		{
			get
			{
				return this._cv_content;
			}
			set
			{
				if ((this._cv_content != value))
				{
					this.Oncv_contentChanging(value);
					this.SendPropertyChanging();
					this._cv_content = value;
					this.SendPropertyChanged("cv_content");
					this.Oncv_contentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CreditsHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ch_id;
		
		private string _u_username;
		
		private System.DateTime _ch_date;
		
		private int _ch_service;
		
		private int _ch_amount;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onch_idChanging(int value);
    partial void Onch_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onch_dateChanging(System.DateTime value);
    partial void Onch_dateChanged();
    partial void Onch_serviceChanging(int value);
    partial void Onch_serviceChanged();
    partial void Onch_amountChanging(int value);
    partial void Onch_amountChanged();
    #endregion
		
		public CreditsHistory()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ch_id
		{
			get
			{
				return this._ch_id;
			}
			set
			{
				if ((this._ch_id != value))
				{
					this.Onch_idChanging(value);
					this.SendPropertyChanging();
					this._ch_id = value;
					this.SendPropertyChanged("ch_id");
					this.Onch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ch_date
		{
			get
			{
				return this._ch_date;
			}
			set
			{
				if ((this._ch_date != value))
				{
					this.Onch_dateChanging(value);
					this.SendPropertyChanging();
					this._ch_date = value;
					this.SendPropertyChanged("ch_date");
					this.Onch_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch_service", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ch_service
		{
			get
			{
				return this._ch_service;
			}
			set
			{
				if ((this._ch_service != value))
				{
					this.Onch_serviceChanging(value);
					this.SendPropertyChanging();
					this._ch_service = value;
					this.SendPropertyChanged("ch_service");
					this.Onch_serviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch_amount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ch_amount
		{
			get
			{
				return this._ch_amount;
			}
			set
			{
				if ((this._ch_amount != value))
				{
					this.Onch_amountChanging(value);
					this.SendPropertyChanging();
					this._ch_amount = value;
					this.SendPropertyChanged("ch_amount");
					this.Onch_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CreditsHistory", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CreditsHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CreditsHistories.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CreditsPackages")]
	public partial class CreditsPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cp_id;
		
		private string _cp_name;
		
		private int _cp_quantity;
		
		private decimal _cp_price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncp_idChanging(int value);
    partial void Oncp_idChanged();
    partial void Oncp_nameChanging(string value);
    partial void Oncp_nameChanged();
    partial void Oncp_quantityChanging(int value);
    partial void Oncp_quantityChanged();
    partial void Oncp_priceChanging(decimal value);
    partial void Oncp_priceChanged();
    #endregion
		
		public CreditsPackage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int cp_id
		{
			get
			{
				return this._cp_id;
			}
			set
			{
				if ((this._cp_id != value))
				{
					this.Oncp_idChanging(value);
					this.SendPropertyChanging();
					this._cp_id = value;
					this.SendPropertyChanged("cp_id");
					this.Oncp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cp_name
		{
			get
			{
				return this._cp_name;
			}
			set
			{
				if ((this._cp_name != value))
				{
					this.Oncp_nameChanging(value);
					this.SendPropertyChanging();
					this._cp_name = value;
					this.SendPropertyChanged("cp_name");
					this.Oncp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_quantity", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int cp_quantity
		{
			get
			{
				return this._cp_quantity;
			}
			set
			{
				if ((this._cp_quantity != value))
				{
					this.Oncp_quantityChanging(value);
					this.SendPropertyChanging();
					this._cp_quantity = value;
					this.SendPropertyChanged("cp_quantity");
					this.Oncp_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp_price", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal cp_price
		{
			get
			{
				return this._cp_price;
			}
			set
			{
				if ((this._cp_price != value))
				{
					this.Oncp_priceChanging(value);
					this.SendPropertyChanging();
					this._cp_price = value;
					this.SendPropertyChanged("cp_price");
					this.Oncp_priceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Discounts")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _d_id;
		
		private decimal _d_amount;
		
		private int _d_type;
		
		private int _d_field;
		
		private string _d_match;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ond_idChanging(int value);
    partial void Ond_idChanged();
    partial void Ond_amountChanging(decimal value);
    partial void Ond_amountChanged();
    partial void Ond_typeChanging(int value);
    partial void Ond_typeChanged();
    partial void Ond_fieldChanging(int value);
    partial void Ond_fieldChanged();
    partial void Ond_matchChanging(string value);
    partial void Ond_matchChanged();
    #endregion
		
		public Discount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int d_id
		{
			get
			{
				return this._d_id;
			}
			set
			{
				if ((this._d_id != value))
				{
					this.Ond_idChanging(value);
					this.SendPropertyChanging();
					this._d_id = value;
					this.SendPropertyChanged("d_id");
					this.Ond_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_amount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal d_amount
		{
			get
			{
				return this._d_amount;
			}
			set
			{
				if ((this._d_amount != value))
				{
					this.Ond_amountChanging(value);
					this.SendPropertyChanging();
					this._d_amount = value;
					this.SendPropertyChanged("d_amount");
					this.Ond_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int d_type
		{
			get
			{
				return this._d_type;
			}
			set
			{
				if ((this._d_type != value))
				{
					this.Ond_typeChanging(value);
					this.SendPropertyChanging();
					this._d_type = value;
					this.SendPropertyChanged("d_type");
					this.Ond_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_field", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int d_field
		{
			get
			{
				return this._d_field;
			}
			set
			{
				if ((this._d_field != value))
				{
					this.Ond_fieldChanging(value);
					this.SendPropertyChanging();
					this._d_field = value;
					this.SendPropertyChanged("d_field");
					this.Ond_fieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_match", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string d_match
		{
			get
			{
				return this._d_match;
			}
			set
			{
				if ((this._d_match != value))
				{
					this.Ond_matchChanging(value);
					this.SendPropertyChanging();
					this._d_match = value;
					this.SendPropertyChanged("d_match");
					this.Ond_matchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ecards")]
	public partial class Ecard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ec_id;
		
		private int _ect_id;
		
		private string _ec_from_username;
		
		private string _ec_to_username;
		
		private System.DateTime _ec_date;
		
		private string _ec_message;
		
		private bool _ec_deleted_by_fromuser;
		
		private bool _ec_deleted_by_touser;
		
		private bool _ec_is_opened;
		
		private EntityRef<EcardType> _EcardType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onec_idChanging(int value);
    partial void Onec_idChanged();
    partial void Onect_idChanging(int value);
    partial void Onect_idChanged();
    partial void Onec_from_usernameChanging(string value);
    partial void Onec_from_usernameChanged();
    partial void Onec_to_usernameChanging(string value);
    partial void Onec_to_usernameChanged();
    partial void Onec_dateChanging(System.DateTime value);
    partial void Onec_dateChanged();
    partial void Onec_messageChanging(string value);
    partial void Onec_messageChanged();
    partial void Onec_deleted_by_fromuserChanging(bool value);
    partial void Onec_deleted_by_fromuserChanged();
    partial void Onec_deleted_by_touserChanging(bool value);
    partial void Onec_deleted_by_touserChanged();
    partial void Onec_is_openedChanging(bool value);
    partial void Onec_is_openedChanged();
    #endregion
		
		public Ecard()
		{
			this._EcardType = default(EntityRef<EcardType>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ec_id
		{
			get
			{
				return this._ec_id;
			}
			set
			{
				if ((this._ec_id != value))
				{
					this.Onec_idChanging(value);
					this.SendPropertyChanging();
					this._ec_id = value;
					this.SendPropertyChanged("ec_id");
					this.Onec_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ect_id
		{
			get
			{
				return this._ect_id;
			}
			set
			{
				if ((this._ect_id != value))
				{
					if (this._EcardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onect_idChanging(value);
					this.SendPropertyChanging();
					this._ect_id = value;
					this.SendPropertyChanged("ect_id");
					this.Onect_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ec_from_username
		{
			get
			{
				return this._ec_from_username;
			}
			set
			{
				if ((this._ec_from_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onec_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._ec_from_username = value;
					this.SendPropertyChanged("ec_from_username");
					this.Onec_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ec_to_username
		{
			get
			{
				return this._ec_to_username;
			}
			set
			{
				if ((this._ec_to_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onec_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._ec_to_username = value;
					this.SendPropertyChanged("ec_to_username");
					this.Onec_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ec_date
		{
			get
			{
				return this._ec_date;
			}
			set
			{
				if ((this._ec_date != value))
				{
					this.Onec_dateChanging(value);
					this.SendPropertyChanging();
					this._ec_date = value;
					this.SendPropertyChanged("ec_date");
					this.Onec_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_message", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ec_message
		{
			get
			{
				return this._ec_message;
			}
			set
			{
				if ((this._ec_message != value))
				{
					this.Onec_messageChanging(value);
					this.SendPropertyChanging();
					this._ec_message = value;
					this.SendPropertyChanged("ec_message");
					this.Onec_messageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_deleted_by_fromuser", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ec_deleted_by_fromuser
		{
			get
			{
				return this._ec_deleted_by_fromuser;
			}
			set
			{
				if ((this._ec_deleted_by_fromuser != value))
				{
					this.Onec_deleted_by_fromuserChanging(value);
					this.SendPropertyChanging();
					this._ec_deleted_by_fromuser = value;
					this.SendPropertyChanged("ec_deleted_by_fromuser");
					this.Onec_deleted_by_fromuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_deleted_by_touser", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ec_deleted_by_touser
		{
			get
			{
				return this._ec_deleted_by_touser;
			}
			set
			{
				if ((this._ec_deleted_by_touser != value))
				{
					this.Onec_deleted_by_touserChanging(value);
					this.SendPropertyChanging();
					this._ec_deleted_by_touser = value;
					this.SendPropertyChanged("ec_deleted_by_touser");
					this.Onec_deleted_by_touserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_is_opened", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ec_is_opened
		{
			get
			{
				return this._ec_is_opened;
			}
			set
			{
				if ((this._ec_is_opened != value))
				{
					this.Onec_is_openedChanging(value);
					this.SendPropertyChanging();
					this._ec_is_opened = value;
					this.SendPropertyChanged("ec_is_opened");
					this.Onec_is_openedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EcardType_Ecard", Storage="_EcardType", ThisKey="ect_id", OtherKey="ect_id", IsForeignKey=true)]
		public EcardType EcardType
		{
			get
			{
				return this._EcardType.Entity;
			}
			set
			{
				EcardType previousValue = this._EcardType.Entity;
				if (((previousValue != value) 
							|| (this._EcardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EcardType.Entity = null;
						previousValue.Ecards.Remove(this);
					}
					this._EcardType.Entity = value;
					if ((value != null))
					{
						value.Ecards.Add(this);
						this._ect_id = value.ect_id;
					}
					else
					{
						this._ect_id = default(int);
					}
					this.SendPropertyChanged("EcardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ecard", Storage="_User", ThisKey="ec_from_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ecards.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ecards.Add(this);
						this._ec_from_username = value.u_username;
					}
					else
					{
						this._ec_from_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ecard1", Storage="_User1", ThisKey="ec_to_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Ecards1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Ecards1.Add(this);
						this._ec_to_username = value.u_username;
					}
					else
					{
						this._ec_to_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EcardTypes")]
	public partial class EcardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ect_id;
		
		private string _ect_name;
		
		private System.Data.Linq.Binary _ect_content;
		
		private int _ect_type;
		
		private bool _ect_active;
		
		private EntitySet<Ecard> _Ecards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onect_idChanging(int value);
    partial void Onect_idChanged();
    partial void Onect_nameChanging(string value);
    partial void Onect_nameChanged();
    partial void Onect_contentChanging(System.Data.Linq.Binary value);
    partial void Onect_contentChanged();
    partial void Onect_typeChanging(int value);
    partial void Onect_typeChanged();
    partial void Onect_activeChanging(bool value);
    partial void Onect_activeChanged();
    #endregion
		
		public EcardType()
		{
			this._Ecards = new EntitySet<Ecard>(new Action<Ecard>(this.attach_Ecards), new Action<Ecard>(this.detach_Ecards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ect_id
		{
			get
			{
				return this._ect_id;
			}
			set
			{
				if ((this._ect_id != value))
				{
					this.Onect_idChanging(value);
					this.SendPropertyChanging();
					this._ect_id = value;
					this.SendPropertyChanged("ect_id");
					this.Onect_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ect_name
		{
			get
			{
				return this._ect_name;
			}
			set
			{
				if ((this._ect_name != value))
				{
					this.Onect_nameChanging(value);
					this.SendPropertyChanging();
					this._ect_name = value;
					this.SendPropertyChanged("ect_name");
					this.Onect_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_content", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ect_content
		{
			get
			{
				return this._ect_content;
			}
			set
			{
				if ((this._ect_content != value))
				{
					this.Onect_contentChanging(value);
					this.SendPropertyChanging();
					this._ect_content = value;
					this.SendPropertyChanged("ect_content");
					this.Onect_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ect_type
		{
			get
			{
				return this._ect_type;
			}
			set
			{
				if ((this._ect_type != value))
				{
					this.Onect_typeChanging(value);
					this.SendPropertyChanging();
					this._ect_type = value;
					this.SendPropertyChanged("ect_type");
					this.Onect_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ect_active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ect_active
		{
			get
			{
				return this._ect_active;
			}
			set
			{
				if ((this._ect_active != value))
				{
					this.Onect_activeChanging(value);
					this.SendPropertyChanging();
					this._ect_active = value;
					this.SendPropertyChanged("ect_active");
					this.Onect_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EcardType_Ecard", Storage="_Ecards", ThisKey="ect_id", OtherKey="ect_id")]
		public EntitySet<Ecard> Ecards
		{
			get
			{
				return this._Ecards;
			}
			set
			{
				this._Ecards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ecards(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.EcardType = this;
		}
		
		private void detach_Ecards(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.EcardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class EmailQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eq_id;
		
		private string _eq_from;
		
		private string _eq_to;
		
		private string _eq_fromname;
		
		private string _eq_toname;
		
		private string _eq_cc;
		
		private string _eq_bcc;
		
		private string _eq_subject;
		
		private string _eq_body;
		
		private int _eq_tries;
		
		private System.Nullable<System.DateTime> _eq_last_try;
		
		private string _eq_last_error;
		
		private System.Nullable<System.DateTime> _eq_next_try;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oneq_idChanging(int value);
    partial void Oneq_idChanged();
    partial void Oneq_fromChanging(string value);
    partial void Oneq_fromChanged();
    partial void Oneq_toChanging(string value);
    partial void Oneq_toChanged();
    partial void Oneq_fromnameChanging(string value);
    partial void Oneq_fromnameChanged();
    partial void Oneq_tonameChanging(string value);
    partial void Oneq_tonameChanged();
    partial void Oneq_ccChanging(string value);
    partial void Oneq_ccChanged();
    partial void Oneq_bccChanging(string value);
    partial void Oneq_bccChanged();
    partial void Oneq_subjectChanging(string value);
    partial void Oneq_subjectChanged();
    partial void Oneq_bodyChanging(string value);
    partial void Oneq_bodyChanged();
    partial void Oneq_triesChanging(int value);
    partial void Oneq_triesChanged();
    partial void Oneq_last_tryChanging(System.Nullable<System.DateTime> value);
    partial void Oneq_last_tryChanged();
    partial void Oneq_last_errorChanging(string value);
    partial void Oneq_last_errorChanged();
    partial void Oneq_next_tryChanging(System.Nullable<System.DateTime> value);
    partial void Oneq_next_tryChanged();
    #endregion
		
		public EmailQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int eq_id
		{
			get
			{
				return this._eq_id;
			}
			set
			{
				if ((this._eq_id != value))
				{
					this.Oneq_idChanging(value);
					this.SendPropertyChanging();
					this._eq_id = value;
					this.SendPropertyChanged("eq_id");
					this.Oneq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_from", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string eq_from
		{
			get
			{
				return this._eq_from;
			}
			set
			{
				if ((this._eq_from != value))
				{
					this.Oneq_fromChanging(value);
					this.SendPropertyChanging();
					this._eq_from = value;
					this.SendPropertyChanged("eq_from");
					this.Oneq_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_to", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string eq_to
		{
			get
			{
				return this._eq_to;
			}
			set
			{
				if ((this._eq_to != value))
				{
					this.Oneq_toChanging(value);
					this.SendPropertyChanging();
					this._eq_to = value;
					this.SendPropertyChanged("eq_to");
					this.Oneq_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_fromname", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string eq_fromname
		{
			get
			{
				return this._eq_fromname;
			}
			set
			{
				if ((this._eq_fromname != value))
				{
					this.Oneq_fromnameChanging(value);
					this.SendPropertyChanging();
					this._eq_fromname = value;
					this.SendPropertyChanged("eq_fromname");
					this.Oneq_fromnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_toname", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string eq_toname
		{
			get
			{
				return this._eq_toname;
			}
			set
			{
				if ((this._eq_toname != value))
				{
					this.Oneq_tonameChanging(value);
					this.SendPropertyChanging();
					this._eq_toname = value;
					this.SendPropertyChanged("eq_toname");
					this.Oneq_tonameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_cc", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string eq_cc
		{
			get
			{
				return this._eq_cc;
			}
			set
			{
				if ((this._eq_cc != value))
				{
					this.Oneq_ccChanging(value);
					this.SendPropertyChanging();
					this._eq_cc = value;
					this.SendPropertyChanged("eq_cc");
					this.Oneq_ccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_bcc", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string eq_bcc
		{
			get
			{
				return this._eq_bcc;
			}
			set
			{
				if ((this._eq_bcc != value))
				{
					this.Oneq_bccChanging(value);
					this.SendPropertyChanging();
					this._eq_bcc = value;
					this.SendPropertyChanged("eq_bcc");
					this.Oneq_bccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_subject", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string eq_subject
		{
			get
			{
				return this._eq_subject;
			}
			set
			{
				if ((this._eq_subject != value))
				{
					this.Oneq_subjectChanging(value);
					this.SendPropertyChanging();
					this._eq_subject = value;
					this.SendPropertyChanged("eq_subject");
					this.Oneq_subjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string eq_body
		{
			get
			{
				return this._eq_body;
			}
			set
			{
				if ((this._eq_body != value))
				{
					this.Oneq_bodyChanging(value);
					this.SendPropertyChanging();
					this._eq_body = value;
					this.SendPropertyChanged("eq_body");
					this.Oneq_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_tries", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int eq_tries
		{
			get
			{
				return this._eq_tries;
			}
			set
			{
				if ((this._eq_tries != value))
				{
					this.Oneq_triesChanging(value);
					this.SendPropertyChanging();
					this._eq_tries = value;
					this.SendPropertyChanged("eq_tries");
					this.Oneq_triesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_last_try", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> eq_last_try
		{
			get
			{
				return this._eq_last_try;
			}
			set
			{
				if ((this._eq_last_try != value))
				{
					this.Oneq_last_tryChanging(value);
					this.SendPropertyChanging();
					this._eq_last_try = value;
					this.SendPropertyChanged("eq_last_try");
					this.Oneq_last_tryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_last_error", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string eq_last_error
		{
			get
			{
				return this._eq_last_error;
			}
			set
			{
				if ((this._eq_last_error != value))
				{
					this.Oneq_last_errorChanging(value);
					this.SendPropertyChanging();
					this._eq_last_error = value;
					this.SendPropertyChanged("eq_last_error");
					this.Oneq_last_errorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_next_try", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> eq_next_try
		{
			get
			{
				return this._eq_next_try;
			}
			set
			{
				if ((this._eq_next_try != value))
				{
					this.Oneq_next_tryChanging(value);
					this.SendPropertyChanging();
					this._eq_next_try = value;
					this.SendPropertyChanged("eq_next_try");
					this.Oneq_next_tryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EmailTemplates")]
	public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _et_name;
		
		private string _et_subject;
		
		private string _et_body;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onet_nameChanging(string value);
    partial void Onet_nameChanged();
    partial void Onet_subjectChanging(string value);
    partial void Onet_subjectChanged();
    partial void Onet_bodyChanging(string value);
    partial void Onet_bodyChanged();
    #endregion
		
		public EmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_et_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string et_name
		{
			get
			{
				return this._et_name;
			}
			set
			{
				if ((this._et_name != value))
				{
					this.Onet_nameChanging(value);
					this.SendPropertyChanging();
					this._et_name = value;
					this.SendPropertyChanged("et_name");
					this.Onet_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_et_subject", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string et_subject
		{
			get
			{
				return this._et_subject;
			}
			set
			{
				if ((this._et_subject != value))
				{
					this.Onet_subjectChanging(value);
					this.SendPropertyChanging();
					this._et_subject = value;
					this.SendPropertyChanged("et_subject");
					this.Onet_subjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_et_body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string et_body
		{
			get
			{
				return this._et_body;
			}
			set
			{
				if ((this._et_body != value))
				{
					this.Onet_bodyChanging(value);
					this.SendPropertyChanging();
					this._et_body = value;
					this.SendPropertyChanged("et_body");
					this.Onet_bodyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EstablishedCommunications")]
	public partial class EstablishedCommunication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ec_from_username;
		
		private string _ec_to_username;
		
		private System.DateTime _ec_date;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onec_from_usernameChanging(string value);
    partial void Onec_from_usernameChanged();
    partial void Onec_to_usernameChanging(string value);
    partial void Onec_to_usernameChanged();
    partial void Onec_dateChanging(System.DateTime value);
    partial void Onec_dateChanged();
    #endregion
		
		public EstablishedCommunication()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ec_from_username
		{
			get
			{
				return this._ec_from_username;
			}
			set
			{
				if ((this._ec_from_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onec_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._ec_from_username = value;
					this.SendPropertyChanged("ec_from_username");
					this.Onec_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ec_to_username
		{
			get
			{
				return this._ec_to_username;
			}
			set
			{
				if ((this._ec_to_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onec_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._ec_to_username = value;
					this.SendPropertyChanged("ec_to_username");
					this.Onec_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ec_date
		{
			get
			{
				return this._ec_date;
			}
			set
			{
				if ((this._ec_date != value))
				{
					this.Onec_dateChanging(value);
					this.SendPropertyChanging();
					this._ec_date = value;
					this.SendPropertyChanged("ec_date");
					this.Onec_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstablishedCommunication", Storage="_User", ThisKey="ec_from_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EstablishedCommunications.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EstablishedCommunications.Add(this);
						this._ec_from_username = value.u_username;
					}
					else
					{
						this._ec_from_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstablishedCommunication1", Storage="_User1", ThisKey="ec_to_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.EstablishedCommunications1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.EstablishedCommunications1.Add(this);
						this._ec_to_username = value.u_username;
					}
					else
					{
						this._ec_to_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EventComments")]
	public partial class EventComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ec_id;
		
		private int _e_id;
		
		private string _u_username;
		
		private System.DateTime _ec_date;
		
		private string _ec_comment;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onec_idChanging(int value);
    partial void Onec_idChanged();
    partial void One_idChanging(int value);
    partial void One_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onec_dateChanging(System.DateTime value);
    partial void Onec_dateChanged();
    partial void Onec_commentChanging(string value);
    partial void Onec_commentChanged();
    #endregion
		
		public EventComment()
		{
			this._Event = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ec_id
		{
			get
			{
				return this._ec_id;
			}
			set
			{
				if ((this._ec_id != value))
				{
					this.Onec_idChanging(value);
					this.SendPropertyChanging();
					this._ec_id = value;
					this.SendPropertyChanged("ec_id");
					this.Onec_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int e_id
		{
			get
			{
				return this._e_id;
			}
			set
			{
				if ((this._e_id != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_idChanging(value);
					this.SendPropertyChanging();
					this._e_id = value;
					this.SendPropertyChanged("e_id");
					this.One_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ec_date
		{
			get
			{
				return this._ec_date;
			}
			set
			{
				if ((this._ec_date != value))
				{
					this.Onec_dateChanging(value);
					this.SendPropertyChanging();
					this._ec_date = value;
					this.SendPropertyChanged("ec_date");
					this.Onec_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ec_comment", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ec_comment
		{
			get
			{
				return this._ec_comment;
			}
			set
			{
				if ((this._ec_comment != value))
				{
					this.Onec_commentChanging(value);
					this.SendPropertyChanging();
					this._ec_comment = value;
					this.SendPropertyChanged("ec_comment");
					this.Onec_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventComment", Storage="_Event", ThisKey="e_id", OtherKey="e_id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.EventComments.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.EventComments.Add(this);
						this._e_id = value.e_id;
					}
					else
					{
						this._e_id = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventComment", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EventComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EventComments.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Events")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _e_id;
		
		private string _e_fromusername;
		
		private System.Nullable<int> _e_fromgroup;
		
		private long _e_type;
		
		private string _e_details;
		
		private System.DateTime _e_date;
		
		private EntitySet<EventComment> _EventComments;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void One_idChanging(int value);
    partial void One_idChanged();
    partial void One_fromusernameChanging(string value);
    partial void One_fromusernameChanged();
    partial void One_fromgroupChanging(System.Nullable<int> value);
    partial void One_fromgroupChanged();
    partial void One_typeChanging(long value);
    partial void One_typeChanged();
    partial void One_detailsChanging(string value);
    partial void One_detailsChanged();
    partial void One_dateChanging(System.DateTime value);
    partial void One_dateChanged();
    #endregion
		
		public Event()
		{
			this._EventComments = new EntitySet<EventComment>(new Action<EventComment>(this.attach_EventComments), new Action<EventComment>(this.detach_EventComments));
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int e_id
		{
			get
			{
				return this._e_id;
			}
			set
			{
				if ((this._e_id != value))
				{
					this.One_idChanging(value);
					this.SendPropertyChanging();
					this._e_id = value;
					this.SendPropertyChanged("e_id");
					this.One_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_fromusername", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string e_fromusername
		{
			get
			{
				return this._e_fromusername;
			}
			set
			{
				if ((this._e_fromusername != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_fromusernameChanging(value);
					this.SendPropertyChanging();
					this._e_fromusername = value;
					this.SendPropertyChanged("e_fromusername");
					this.One_fromusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_fromgroup", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> e_fromgroup
		{
			get
			{
				return this._e_fromgroup;
			}
			set
			{
				if ((this._e_fromgroup != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_fromgroupChanging(value);
					this.SendPropertyChanging();
					this._e_fromgroup = value;
					this.SendPropertyChanged("e_fromgroup");
					this.One_fromgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_type", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long e_type
		{
			get
			{
				return this._e_type;
			}
			set
			{
				if ((this._e_type != value))
				{
					this.One_typeChanging(value);
					this.SendPropertyChanging();
					this._e_type = value;
					this.SendPropertyChanged("e_type");
					this.One_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_details", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string e_details
		{
			get
			{
				return this._e_details;
			}
			set
			{
				if ((this._e_details != value))
				{
					this.One_detailsChanging(value);
					this.SendPropertyChanging();
					this._e_details = value;
					this.SendPropertyChanged("e_details");
					this.One_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime e_date
		{
			get
			{
				return this._e_date;
			}
			set
			{
				if ((this._e_date != value))
				{
					this.One_dateChanging(value);
					this.SendPropertyChanging();
					this._e_date = value;
					this.SendPropertyChanged("e_date");
					this.One_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventComment", Storage="_EventComments", ThisKey="e_id", OtherKey="e_id")]
		public EntitySet<EventComment> EventComments
		{
			get
			{
				return this._EventComments;
			}
			set
			{
				this._EventComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Event", Storage="_Group", ThisKey="e_fromgroup", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._e_fromgroup = value.g_id;
					}
					else
					{
						this._e_fromgroup = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_User", ThisKey="e_fromusername", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._e_fromusername = value.u_username;
					}
					else
					{
						this._e_fromusername = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventComments(EventComment entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_EventComments(EventComment entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Favourites")]
	public partial class Favourite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _f_username;
		
		private System.DateTime _f_timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onf_usernameChanging(string value);
    partial void Onf_usernameChanged();
    partial void Onf_timestampChanging(System.DateTime value);
    partial void Onf_timestampChanged();
    #endregion
		
		public Favourite()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string f_username
		{
			get
			{
				return this._f_username;
			}
			set
			{
				if ((this._f_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onf_usernameChanging(value);
					this.SendPropertyChanging();
					this._f_username = value;
					this.SendPropertyChanged("f_username");
					this.Onf_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime f_timestamp
		{
			get
			{
				return this._f_timestamp;
			}
			set
			{
				if ((this._f_timestamp != value))
				{
					this.Onf_timestampChanging(value);
					this.SendPropertyChanging();
					this._f_timestamp = value;
					this.SendPropertyChanged("f_timestamp");
					this.Onf_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Favourite", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Favourites.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Favourites.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Favourite1", Storage="_User1", ThisKey="f_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Favourites1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Favourites1.Add(this);
						this._f_username = value.u_username;
					}
					else
					{
						this._f_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Friends")]
	public partial class Friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _f_username;
		
		private System.DateTime _f_timestamp;
		
		private bool _f_accepted;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onf_usernameChanging(string value);
    partial void Onf_usernameChanged();
    partial void Onf_timestampChanging(System.DateTime value);
    partial void Onf_timestampChanged();
    partial void Onf_acceptedChanging(bool value);
    partial void Onf_acceptedChanged();
    #endregion
		
		public Friend()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string f_username
		{
			get
			{
				return this._f_username;
			}
			set
			{
				if ((this._f_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onf_usernameChanging(value);
					this.SendPropertyChanging();
					this._f_username = value;
					this.SendPropertyChanged("f_username");
					this.Onf_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime f_timestamp
		{
			get
			{
				return this._f_timestamp;
			}
			set
			{
				if ((this._f_timestamp != value))
				{
					this.Onf_timestampChanging(value);
					this.SendPropertyChanging();
					this._f_timestamp = value;
					this.SendPropertyChanged("f_timestamp");
					this.Onf_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_accepted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool f_accepted
		{
			get
			{
				return this._f_accepted;
			}
			set
			{
				if ((this._f_accepted != value))
				{
					this.Onf_acceptedChanging(value);
					this.SendPropertyChanging();
					this._f_accepted = value;
					this.SendPropertyChanged("f_accepted");
					this.Onf_acceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Friend", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Friends.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Friends.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Friend1", Storage="_User1", ThisKey="f_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Friends1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Friends1.Add(this);
						this._f_username = value.u_username;
					}
					else
					{
						this._f_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupBans")]
	public partial class GroupBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gb_id;
		
		private int _g_id;
		
		private string _u_username;
		
		private System.DateTime _gb_expires;
		
		private System.DateTime _gb_date;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongb_idChanging(int value);
    partial void Ongb_idChanged();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongb_expiresChanging(System.DateTime value);
    partial void Ongb_expiresChanged();
    partial void Ongb_dateChanging(System.DateTime value);
    partial void Ongb_dateChanged();
    #endregion
		
		public GroupBan()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gb_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gb_id
		{
			get
			{
				return this._gb_id;
			}
			set
			{
				if ((this._gb_id != value))
				{
					this.Ongb_idChanging(value);
					this.SendPropertyChanging();
					this._gb_id = value;
					this.SendPropertyChanged("gb_id");
					this.Ongb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gb_expires", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gb_expires
		{
			get
			{
				return this._gb_expires;
			}
			set
			{
				if ((this._gb_expires != value))
				{
					this.Ongb_expiresChanging(value);
					this.SendPropertyChanging();
					this._gb_expires = value;
					this.SendPropertyChanged("gb_expires");
					this.Ongb_expiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gb_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gb_date
		{
			get
			{
				return this._gb_date;
			}
			set
			{
				if ((this._gb_date != value))
				{
					this.Ongb_dateChanging(value);
					this.SendPropertyChanging();
					this._gb_date = value;
					this.SendPropertyChanged("gb_date");
					this.Ongb_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupBan", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupBans.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupBans.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupBan", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupBans.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupBans.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupEvents")]
	public partial class GroupEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ge_id;
		
		private int _g_id;
		
		private string _u_username;
		
		private string _ge_title;
		
		private string _ge_description;
		
		private System.Data.Linq.Binary _ge_image;
		
		private System.DateTime _ge_date;
		
		private string _ge_location;
		
		private EntitySet<GroupEventsAttender> _GroupEventsAttenders;
		
		private EntitySet<GroupEventsComment> _GroupEventsComments;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onge_idChanging(int value);
    partial void Onge_idChanged();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onge_titleChanging(string value);
    partial void Onge_titleChanged();
    partial void Onge_descriptionChanging(string value);
    partial void Onge_descriptionChanged();
    partial void Onge_imageChanging(System.Data.Linq.Binary value);
    partial void Onge_imageChanged();
    partial void Onge_dateChanging(System.DateTime value);
    partial void Onge_dateChanged();
    partial void Onge_locationChanging(string value);
    partial void Onge_locationChanged();
    #endregion
		
		public GroupEvent()
		{
			this._GroupEventsAttenders = new EntitySet<GroupEventsAttender>(new Action<GroupEventsAttender>(this.attach_GroupEventsAttenders), new Action<GroupEventsAttender>(this.detach_GroupEventsAttenders));
			this._GroupEventsComments = new EntitySet<GroupEventsComment>(new Action<GroupEventsComment>(this.attach_GroupEventsComments), new Action<GroupEventsComment>(this.detach_GroupEventsComments));
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ge_id
		{
			get
			{
				return this._ge_id;
			}
			set
			{
				if ((this._ge_id != value))
				{
					this.Onge_idChanging(value);
					this.SendPropertyChanging();
					this._ge_id = value;
					this.SendPropertyChanged("ge_id");
					this.Onge_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ge_title
		{
			get
			{
				return this._ge_title;
			}
			set
			{
				if ((this._ge_title != value))
				{
					this.Onge_titleChanging(value);
					this.SendPropertyChanging();
					this._ge_title = value;
					this.SendPropertyChanged("ge_title");
					this.Onge_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ge_description
		{
			get
			{
				return this._ge_description;
			}
			set
			{
				if ((this._ge_description != value))
				{
					this.Onge_descriptionChanging(value);
					this.SendPropertyChanging();
					this._ge_description = value;
					this.SendPropertyChanged("ge_description");
					this.Onge_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ge_image
		{
			get
			{
				return this._ge_image;
			}
			set
			{
				if ((this._ge_image != value))
				{
					this.Onge_imageChanging(value);
					this.SendPropertyChanging();
					this._ge_image = value;
					this.SendPropertyChanged("ge_image");
					this.Onge_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ge_date
		{
			get
			{
				return this._ge_date;
			}
			set
			{
				if ((this._ge_date != value))
				{
					this.Onge_dateChanging(value);
					this.SendPropertyChanging();
					this._ge_date = value;
					this.SendPropertyChanged("ge_date");
					this.Onge_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_location", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ge_location
		{
			get
			{
				return this._ge_location;
			}
			set
			{
				if ((this._ge_location != value))
				{
					this.Onge_locationChanging(value);
					this.SendPropertyChanging();
					this._ge_location = value;
					this.SendPropertyChanged("ge_location");
					this.Onge_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupEvent_GroupEventsAttender", Storage="_GroupEventsAttenders", ThisKey="ge_id", OtherKey="ge_id")]
		public EntitySet<GroupEventsAttender> GroupEventsAttenders
		{
			get
			{
				return this._GroupEventsAttenders;
			}
			set
			{
				this._GroupEventsAttenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupEvent_GroupEventsComment", Storage="_GroupEventsComments", ThisKey="ge_id", OtherKey="ge_id")]
		public EntitySet<GroupEventsComment> GroupEventsComments
		{
			get
			{
				return this._GroupEventsComments;
			}
			set
			{
				this._GroupEventsComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupEvent", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupEvents.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupEvents.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEvent", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupEvents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupEvents.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupEventsAttenders(GroupEventsAttender entity)
		{
			this.SendPropertyChanging();
			entity.GroupEvent = this;
		}
		
		private void detach_GroupEventsAttenders(GroupEventsAttender entity)
		{
			this.SendPropertyChanging();
			entity.GroupEvent = null;
		}
		
		private void attach_GroupEventsComments(GroupEventsComment entity)
		{
			this.SendPropertyChanging();
			entity.GroupEvent = this;
		}
		
		private void detach_GroupEventsComments(GroupEventsComment entity)
		{
			this.SendPropertyChanging();
			entity.GroupEvent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupEventsAttenders")]
	public partial class GroupEventsAttender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ge_id;
		
		private string _u_username;
		
		private EntityRef<GroupEvent> _GroupEvent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onge_idChanging(int value);
    partial void Onge_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    #endregion
		
		public GroupEventsAttender()
		{
			this._GroupEvent = default(EntityRef<GroupEvent>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ge_id
		{
			get
			{
				return this._ge_id;
			}
			set
			{
				if ((this._ge_id != value))
				{
					if (this._GroupEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onge_idChanging(value);
					this.SendPropertyChanging();
					this._ge_id = value;
					this.SendPropertyChanged("ge_id");
					this.Onge_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupEvent_GroupEventsAttender", Storage="_GroupEvent", ThisKey="ge_id", OtherKey="ge_id", IsForeignKey=true)]
		public GroupEvent GroupEvent
		{
			get
			{
				return this._GroupEvent.Entity;
			}
			set
			{
				GroupEvent previousValue = this._GroupEvent.Entity;
				if (((previousValue != value) 
							|| (this._GroupEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupEvent.Entity = null;
						previousValue.GroupEventsAttenders.Remove(this);
					}
					this._GroupEvent.Entity = value;
					if ((value != null))
					{
						value.GroupEventsAttenders.Add(this);
						this._ge_id = value.ge_id;
					}
					else
					{
						this._ge_id = default(int);
					}
					this.SendPropertyChanged("GroupEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEventsAttender", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupEventsAttenders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupEventsAttenders.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupEventsComments")]
	public partial class GroupEventsComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gec_id;
		
		private int _ge_id;
		
		private string _u_username;
		
		private string _gec_comment;
		
		private System.DateTime _gec_date;
		
		private EntityRef<GroupEvent> _GroupEvent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongec_idChanging(int value);
    partial void Ongec_idChanged();
    partial void Onge_idChanging(int value);
    partial void Onge_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongec_commentChanging(string value);
    partial void Ongec_commentChanged();
    partial void Ongec_dateChanging(System.DateTime value);
    partial void Ongec_dateChanged();
    #endregion
		
		public GroupEventsComment()
		{
			this._GroupEvent = default(EntityRef<GroupEvent>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gec_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gec_id
		{
			get
			{
				return this._gec_id;
			}
			set
			{
				if ((this._gec_id != value))
				{
					this.Ongec_idChanging(value);
					this.SendPropertyChanging();
					this._gec_id = value;
					this.SendPropertyChanged("gec_id");
					this.Ongec_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ge_id
		{
			get
			{
				return this._ge_id;
			}
			set
			{
				if ((this._ge_id != value))
				{
					if (this._GroupEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onge_idChanging(value);
					this.SendPropertyChanging();
					this._ge_id = value;
					this.SendPropertyChanged("ge_id");
					this.Onge_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gec_comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gec_comment
		{
			get
			{
				return this._gec_comment;
			}
			set
			{
				if ((this._gec_comment != value))
				{
					this.Ongec_commentChanging(value);
					this.SendPropertyChanging();
					this._gec_comment = value;
					this.SendPropertyChanged("gec_comment");
					this.Ongec_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gec_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gec_date
		{
			get
			{
				return this._gec_date;
			}
			set
			{
				if ((this._gec_date != value))
				{
					this.Ongec_dateChanging(value);
					this.SendPropertyChanging();
					this._gec_date = value;
					this.SendPropertyChanged("gec_date");
					this.Ongec_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupEvent_GroupEventsComment", Storage="_GroupEvent", ThisKey="ge_id", OtherKey="ge_id", IsForeignKey=true)]
		public GroupEvent GroupEvent
		{
			get
			{
				return this._GroupEvent.Entity;
			}
			set
			{
				GroupEvent previousValue = this._GroupEvent.Entity;
				if (((previousValue != value) 
							|| (this._GroupEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupEvent.Entity = null;
						previousValue.GroupEventsComments.Remove(this);
					}
					this._GroupEvent.Entity = value;
					if ((value != null))
					{
						value.GroupEventsComments.Add(this);
						this._ge_id = value.ge_id;
					}
					else
					{
						this._ge_id = default(int);
					}
					this.SendPropertyChanged("GroupEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEventsComment", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupEventsComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupEventsComments.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupMembers")]
	public partial class GroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _g_id;
		
		private string _u_username;
		
		private int _gm_type;
		
		private System.DateTime _gm_joindate;
		
		private string _gm_invitedby;
		
		private bool _gm_active;
		
		private string _gm_joinanswer;
		
		private bool _gm_warned;
		
		private string _gm_warn_reason;
		
		private System.Nullable<System.DateTime> _gm_warn_expirationdate;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongm_typeChanging(int value);
    partial void Ongm_typeChanged();
    partial void Ongm_joindateChanging(System.DateTime value);
    partial void Ongm_joindateChanged();
    partial void Ongm_invitedbyChanging(string value);
    partial void Ongm_invitedbyChanged();
    partial void Ongm_activeChanging(bool value);
    partial void Ongm_activeChanged();
    partial void Ongm_joinanswerChanging(string value);
    partial void Ongm_joinanswerChanged();
    partial void Ongm_warnedChanging(bool value);
    partial void Ongm_warnedChanged();
    partial void Ongm_warn_reasonChanging(string value);
    partial void Ongm_warn_reasonChanged();
    partial void Ongm_warn_expirationdateChanging(System.Nullable<System.DateTime> value);
    partial void Ongm_warn_expirationdateChanged();
    #endregion
		
		public GroupMember()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gm_type
		{
			get
			{
				return this._gm_type;
			}
			set
			{
				if ((this._gm_type != value))
				{
					this.Ongm_typeChanging(value);
					this.SendPropertyChanging();
					this._gm_type = value;
					this.SendPropertyChanged("gm_type");
					this.Ongm_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_joindate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gm_joindate
		{
			get
			{
				return this._gm_joindate;
			}
			set
			{
				if ((this._gm_joindate != value))
				{
					this.Ongm_joindateChanging(value);
					this.SendPropertyChanging();
					this._gm_joindate = value;
					this.SendPropertyChanged("gm_joindate");
					this.Ongm_joindateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_invitedby", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string gm_invitedby
		{
			get
			{
				return this._gm_invitedby;
			}
			set
			{
				if ((this._gm_invitedby != value))
				{
					this.Ongm_invitedbyChanging(value);
					this.SendPropertyChanging();
					this._gm_invitedby = value;
					this.SendPropertyChanged("gm_invitedby");
					this.Ongm_invitedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool gm_active
		{
			get
			{
				return this._gm_active;
			}
			set
			{
				if ((this._gm_active != value))
				{
					this.Ongm_activeChanging(value);
					this.SendPropertyChanging();
					this._gm_active = value;
					this.SendPropertyChanged("gm_active");
					this.Ongm_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_joinanswer", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gm_joinanswer
		{
			get
			{
				return this._gm_joinanswer;
			}
			set
			{
				if ((this._gm_joinanswer != value))
				{
					this.Ongm_joinanswerChanging(value);
					this.SendPropertyChanging();
					this._gm_joinanswer = value;
					this.SendPropertyChanged("gm_joinanswer");
					this.Ongm_joinanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_warned", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool gm_warned
		{
			get
			{
				return this._gm_warned;
			}
			set
			{
				if ((this._gm_warned != value))
				{
					this.Ongm_warnedChanging(value);
					this.SendPropertyChanging();
					this._gm_warned = value;
					this.SendPropertyChanged("gm_warned");
					this.Ongm_warnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_warn_reason", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string gm_warn_reason
		{
			get
			{
				return this._gm_warn_reason;
			}
			set
			{
				if ((this._gm_warn_reason != value))
				{
					this.Ongm_warn_reasonChanging(value);
					this.SendPropertyChanging();
					this._gm_warn_reason = value;
					this.SendPropertyChanged("gm_warn_reason");
					this.Ongm_warn_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gm_warn_expirationdate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> gm_warn_expirationdate
		{
			get
			{
				return this._gm_warn_expirationdate;
			}
			set
			{
				if ((this._gm_warn_expirationdate != value))
				{
					this.Ongm_warn_expirationdateChanging(value);
					this.SendPropertyChanging();
					this._gm_warn_expirationdate = value;
					this.SendPropertyChanged("gm_warn_expirationdate");
					this.Ongm_warn_expirationdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupMember", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupMembers.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupMembers.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupMember", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupMembers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupMembers.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupPhotos")]
	public partial class GroupPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gp_id;
		
		private int _g_id;
		
		private string _u_username;
		
		private string _gp_name;
		
		private string _gp_description;
		
		private System.Data.Linq.Binary _gp_image;
		
		private System.DateTime _gp_date;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongp_idChanging(int value);
    partial void Ongp_idChanged();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongp_nameChanging(string value);
    partial void Ongp_nameChanged();
    partial void Ongp_descriptionChanging(string value);
    partial void Ongp_descriptionChanged();
    partial void Ongp_imageChanging(System.Data.Linq.Binary value);
    partial void Ongp_imageChanged();
    partial void Ongp_dateChanging(System.DateTime value);
    partial void Ongp_dateChanged();
    #endregion
		
		public GroupPhoto()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gp_id
		{
			get
			{
				return this._gp_id;
			}
			set
			{
				if ((this._gp_id != value))
				{
					this.Ongp_idChanging(value);
					this.SendPropertyChanging();
					this._gp_id = value;
					this.SendPropertyChanged("gp_id");
					this.Ongp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_name", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gp_name
		{
			get
			{
				return this._gp_name;
			}
			set
			{
				if ((this._gp_name != value))
				{
					this.Ongp_nameChanging(value);
					this.SendPropertyChanging();
					this._gp_name = value;
					this.SendPropertyChanged("gp_name");
					this.Ongp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gp_description
		{
			get
			{
				return this._gp_description;
			}
			set
			{
				if ((this._gp_description != value))
				{
					this.Ongp_descriptionChanging(value);
					this.SendPropertyChanging();
					this._gp_description = value;
					this.SendPropertyChanged("gp_description");
					this.Ongp_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_image", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary gp_image
		{
			get
			{
				return this._gp_image;
			}
			set
			{
				if ((this._gp_image != value))
				{
					this.Ongp_imageChanging(value);
					this.SendPropertyChanging();
					this._gp_image = value;
					this.SendPropertyChanged("gp_image");
					this.Ongp_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gp_date
		{
			get
			{
				return this._gp_date;
			}
			set
			{
				if ((this._gp_date != value))
				{
					this.Ongp_dateChanging(value);
					this.SendPropertyChanging();
					this._gp_date = value;
					this.SendPropertyChanged("gp_date");
					this.Ongp_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPhoto", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupPhotos.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupPhotos.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPhoto", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupPhotos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupPhotos.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupPollsAnswers")]
	public partial class GroupPollsAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gt_id;
		
		private string _u_username;
		
		private int _gpc_id;
		
		private EntityRef<GroupPollsChoice> _GroupPollsChoice;
		
		private EntityRef<GroupTopic> _GroupTopic;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongt_idChanging(int value);
    partial void Ongt_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongpc_idChanging(int value);
    partial void Ongpc_idChanged();
    #endregion
		
		public GroupPollsAnswer()
		{
			this._GroupPollsChoice = default(EntityRef<GroupPollsChoice>);
			this._GroupTopic = default(EntityRef<GroupTopic>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int gt_id
		{
			get
			{
				return this._gt_id;
			}
			set
			{
				if ((this._gt_id != value))
				{
					if (this._GroupTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongt_idChanging(value);
					this.SendPropertyChanging();
					this._gt_id = value;
					this.SendPropertyChanged("gt_id");
					this.Ongt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gpc_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gpc_id
		{
			get
			{
				return this._gpc_id;
			}
			set
			{
				if ((this._gpc_id != value))
				{
					if (this._GroupPollsChoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongpc_idChanging(value);
					this.SendPropertyChanging();
					this._gpc_id = value;
					this.SendPropertyChanged("gpc_id");
					this.Ongpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPollsChoice_GroupPollsAnswer", Storage="_GroupPollsChoice", ThisKey="gpc_id", OtherKey="gpc_id", IsForeignKey=true)]
		public GroupPollsChoice GroupPollsChoice
		{
			get
			{
				return this._GroupPollsChoice.Entity;
			}
			set
			{
				GroupPollsChoice previousValue = this._GroupPollsChoice.Entity;
				if (((previousValue != value) 
							|| (this._GroupPollsChoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupPollsChoice.Entity = null;
						previousValue.GroupPollsAnswers.Remove(this);
					}
					this._GroupPollsChoice.Entity = value;
					if ((value != null))
					{
						value.GroupPollsAnswers.Add(this);
						this._gpc_id = value.gpc_id;
					}
					else
					{
						this._gpc_id = default(int);
					}
					this.SendPropertyChanged("GroupPollsChoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPollsAnswer", Storage="_GroupTopic", ThisKey="gt_id", OtherKey="gt_id", IsForeignKey=true)]
		public GroupTopic GroupTopic
		{
			get
			{
				return this._GroupTopic.Entity;
			}
			set
			{
				GroupTopic previousValue = this._GroupTopic.Entity;
				if (((previousValue != value) 
							|| (this._GroupTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupTopic.Entity = null;
						previousValue.GroupPollsAnswers.Remove(this);
					}
					this._GroupTopic.Entity = value;
					if ((value != null))
					{
						value.GroupPollsAnswers.Add(this);
						this._gt_id = value.gt_id;
					}
					else
					{
						this._gt_id = default(int);
					}
					this.SendPropertyChanged("GroupTopic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPollsAnswer", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupPollsAnswers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupPollsAnswers.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupPollsChoices")]
	public partial class GroupPollsChoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gpc_id;
		
		private int _gt_id;
		
		private string _gpc_answer;
		
		private EntitySet<GroupPollsAnswer> _GroupPollsAnswers;
		
		private EntityRef<GroupTopic> _GroupTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongpc_idChanging(int value);
    partial void Ongpc_idChanged();
    partial void Ongt_idChanging(int value);
    partial void Ongt_idChanged();
    partial void Ongpc_answerChanging(string value);
    partial void Ongpc_answerChanged();
    #endregion
		
		public GroupPollsChoice()
		{
			this._GroupPollsAnswers = new EntitySet<GroupPollsAnswer>(new Action<GroupPollsAnswer>(this.attach_GroupPollsAnswers), new Action<GroupPollsAnswer>(this.detach_GroupPollsAnswers));
			this._GroupTopic = default(EntityRef<GroupTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gpc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gpc_id
		{
			get
			{
				return this._gpc_id;
			}
			set
			{
				if ((this._gpc_id != value))
				{
					this.Ongpc_idChanging(value);
					this.SendPropertyChanging();
					this._gpc_id = value;
					this.SendPropertyChanged("gpc_id");
					this.Ongpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gt_id
		{
			get
			{
				return this._gt_id;
			}
			set
			{
				if ((this._gt_id != value))
				{
					if (this._GroupTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongt_idChanging(value);
					this.SendPropertyChanging();
					this._gt_id = value;
					this.SendPropertyChanged("gt_id");
					this.Ongt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gpc_answer", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gpc_answer
		{
			get
			{
				return this._gpc_answer;
			}
			set
			{
				if ((this._gpc_answer != value))
				{
					this.Ongpc_answerChanging(value);
					this.SendPropertyChanging();
					this._gpc_answer = value;
					this.SendPropertyChanged("gpc_answer");
					this.Ongpc_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPollsChoice_GroupPollsAnswer", Storage="_GroupPollsAnswers", ThisKey="gpc_id", OtherKey="gpc_id")]
		public EntitySet<GroupPollsAnswer> GroupPollsAnswers
		{
			get
			{
				return this._GroupPollsAnswers;
			}
			set
			{
				this._GroupPollsAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPollsChoice", Storage="_GroupTopic", ThisKey="gt_id", OtherKey="gt_id", IsForeignKey=true)]
		public GroupTopic GroupTopic
		{
			get
			{
				return this._GroupTopic.Entity;
			}
			set
			{
				GroupTopic previousValue = this._GroupTopic.Entity;
				if (((previousValue != value) 
							|| (this._GroupTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupTopic.Entity = null;
						previousValue.GroupPollsChoices.Remove(this);
					}
					this._GroupTopic.Entity = value;
					if ((value != null))
					{
						value.GroupPollsChoices.Add(this);
						this._gt_id = value.gt_id;
					}
					else
					{
						this._gt_id = default(int);
					}
					this.SendPropertyChanged("GroupTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.GroupPollsChoice = this;
		}
		
		private void detach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.GroupPollsChoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupPosts")]
	public partial class GroupPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gp_id;
		
		private int _gt_id;
		
		private string _u_username;
		
		private System.DateTime _gp_dateposted;
		
		private System.Nullable<System.DateTime> _gp_dateedited;
		
		private string _gp_editnotes;
		
		private string _gp_post;
		
		private EntityRef<GroupTopic> _GroupTopic;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongp_idChanging(int value);
    partial void Ongp_idChanged();
    partial void Ongt_idChanging(int value);
    partial void Ongt_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongp_datepostedChanging(System.DateTime value);
    partial void Ongp_datepostedChanged();
    partial void Ongp_dateeditedChanging(System.Nullable<System.DateTime> value);
    partial void Ongp_dateeditedChanged();
    partial void Ongp_editnotesChanging(string value);
    partial void Ongp_editnotesChanged();
    partial void Ongp_postChanging(string value);
    partial void Ongp_postChanged();
    #endregion
		
		public GroupPost()
		{
			this._GroupTopic = default(EntityRef<GroupTopic>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gp_id
		{
			get
			{
				return this._gp_id;
			}
			set
			{
				if ((this._gp_id != value))
				{
					this.Ongp_idChanging(value);
					this.SendPropertyChanging();
					this._gp_id = value;
					this.SendPropertyChanged("gp_id");
					this.Ongp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gt_id
		{
			get
			{
				return this._gt_id;
			}
			set
			{
				if ((this._gt_id != value))
				{
					if (this._GroupTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongt_idChanging(value);
					this.SendPropertyChanging();
					this._gt_id = value;
					this.SendPropertyChanged("gt_id");
					this.Ongt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_dateposted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gp_dateposted
		{
			get
			{
				return this._gp_dateposted;
			}
			set
			{
				if ((this._gp_dateposted != value))
				{
					this.Ongp_datepostedChanging(value);
					this.SendPropertyChanging();
					this._gp_dateposted = value;
					this.SendPropertyChanged("gp_dateposted");
					this.Ongp_datepostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_dateedited", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> gp_dateedited
		{
			get
			{
				return this._gp_dateedited;
			}
			set
			{
				if ((this._gp_dateedited != value))
				{
					this.Ongp_dateeditedChanging(value);
					this.SendPropertyChanging();
					this._gp_dateedited = value;
					this.SendPropertyChanged("gp_dateedited");
					this.Ongp_dateeditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_editnotes", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string gp_editnotes
		{
			get
			{
				return this._gp_editnotes;
			}
			set
			{
				if ((this._gp_editnotes != value))
				{
					this.Ongp_editnotesChanging(value);
					this.SendPropertyChanging();
					this._gp_editnotes = value;
					this.SendPropertyChanged("gp_editnotes");
					this.Ongp_editnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_post", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gp_post
		{
			get
			{
				return this._gp_post;
			}
			set
			{
				if ((this._gp_post != value))
				{
					this.Ongp_postChanging(value);
					this.SendPropertyChanging();
					this._gp_post = value;
					this.SendPropertyChanged("gp_post");
					this.Ongp_postChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPost", Storage="_GroupTopic", ThisKey="gt_id", OtherKey="gt_id", IsForeignKey=true)]
		public GroupTopic GroupTopic
		{
			get
			{
				return this._GroupTopic.Entity;
			}
			set
			{
				GroupTopic previousValue = this._GroupTopic.Entity;
				if (((previousValue != value) 
							|| (this._GroupTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupTopic.Entity = null;
						previousValue.GroupPosts.Remove(this);
					}
					this._GroupTopic.Entity = value;
					if ((value != null))
					{
						value.GroupPosts.Add(this);
						this._gt_id = value.gt_id;
					}
					else
					{
						this._gt_id = default(int);
					}
					this.SendPropertyChanged("GroupTopic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPost", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupPosts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupPosts.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _g_id;
		
		private string _g_name;
		
		private string _g_description;
		
		private System.Data.Linq.Binary _g_icon;
		
		private System.DateTime _g_datecreated;
		
		private bool _g_approved;
		
		private int _g_accesslevel;
		
		private string _g_owner;
		
		private int _g_activemembers;
		
		private string _g_jointerms;
		
		private string _g_joinquestion;
		
		private long _g_permissions;
		
		private System.Nullable<int> _g_minage;
		
		private bool _g_autojoin;
		
		private string _g_autojoincountry;
		
		private string _g_autojoinregion;
		
		private string _g_autojoincity;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<GroupBan> _GroupBans;
		
		private EntitySet<GroupEvent> _GroupEvents;
		
		private EntitySet<GroupMember> _GroupMembers;
		
		private EntitySet<GroupPhoto> _GroupPhotos;
		
		private EntitySet<GroupsCategory> _GroupsCategories;
		
		private EntitySet<GroupTopic> _GroupTopics;
		
		private EntitySet<GroupTopicSubscription> _GroupTopicSubscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Ong_nameChanging(string value);
    partial void Ong_nameChanged();
    partial void Ong_descriptionChanging(string value);
    partial void Ong_descriptionChanged();
    partial void Ong_iconChanging(System.Data.Linq.Binary value);
    partial void Ong_iconChanged();
    partial void Ong_datecreatedChanging(System.DateTime value);
    partial void Ong_datecreatedChanged();
    partial void Ong_approvedChanging(bool value);
    partial void Ong_approvedChanged();
    partial void Ong_accesslevelChanging(int value);
    partial void Ong_accesslevelChanged();
    partial void Ong_ownerChanging(string value);
    partial void Ong_ownerChanged();
    partial void Ong_activemembersChanging(int value);
    partial void Ong_activemembersChanged();
    partial void Ong_jointermsChanging(string value);
    partial void Ong_jointermsChanged();
    partial void Ong_joinquestionChanging(string value);
    partial void Ong_joinquestionChanged();
    partial void Ong_permissionsChanging(long value);
    partial void Ong_permissionsChanged();
    partial void Ong_minageChanging(System.Nullable<int> value);
    partial void Ong_minageChanged();
    partial void Ong_autojoinChanging(bool value);
    partial void Ong_autojoinChanged();
    partial void Ong_autojoincountryChanging(string value);
    partial void Ong_autojoincountryChanged();
    partial void Ong_autojoinregionChanging(string value);
    partial void Ong_autojoinregionChanged();
    partial void Ong_autojoincityChanging(string value);
    partial void Ong_autojoincityChanged();
    #endregion
		
		public Group()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._GroupBans = new EntitySet<GroupBan>(new Action<GroupBan>(this.attach_GroupBans), new Action<GroupBan>(this.detach_GroupBans));
			this._GroupEvents = new EntitySet<GroupEvent>(new Action<GroupEvent>(this.attach_GroupEvents), new Action<GroupEvent>(this.detach_GroupEvents));
			this._GroupMembers = new EntitySet<GroupMember>(new Action<GroupMember>(this.attach_GroupMembers), new Action<GroupMember>(this.detach_GroupMembers));
			this._GroupPhotos = new EntitySet<GroupPhoto>(new Action<GroupPhoto>(this.attach_GroupPhotos), new Action<GroupPhoto>(this.detach_GroupPhotos));
			this._GroupsCategories = new EntitySet<GroupsCategory>(new Action<GroupsCategory>(this.attach_GroupsCategories), new Action<GroupsCategory>(this.detach_GroupsCategories));
			this._GroupTopics = new EntitySet<GroupTopic>(new Action<GroupTopic>(this.attach_GroupTopics), new Action<GroupTopic>(this.detach_GroupTopics));
			this._GroupTopicSubscriptions = new EntitySet<GroupTopicSubscription>(new Action<GroupTopicSubscription>(this.attach_GroupTopicSubscriptions), new Action<GroupTopicSubscription>(this.detach_GroupTopicSubscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string g_name
		{
			get
			{
				return this._g_name;
			}
			set
			{
				if ((this._g_name != value))
				{
					this.Ong_nameChanging(value);
					this.SendPropertyChanging();
					this._g_name = value;
					this.SendPropertyChanged("g_name");
					this.Ong_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string g_description
		{
			get
			{
				return this._g_description;
			}
			set
			{
				if ((this._g_description != value))
				{
					this.Ong_descriptionChanging(value);
					this.SendPropertyChanging();
					this._g_description = value;
					this.SendPropertyChanged("g_description");
					this.Ong_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_icon", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary g_icon
		{
			get
			{
				return this._g_icon;
			}
			set
			{
				if ((this._g_icon != value))
				{
					this.Ong_iconChanging(value);
					this.SendPropertyChanging();
					this._g_icon = value;
					this.SendPropertyChanged("g_icon");
					this.Ong_iconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_datecreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime g_datecreated
		{
			get
			{
				return this._g_datecreated;
			}
			set
			{
				if ((this._g_datecreated != value))
				{
					this.Ong_datecreatedChanging(value);
					this.SendPropertyChanging();
					this._g_datecreated = value;
					this.SendPropertyChanged("g_datecreated");
					this.Ong_datecreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool g_approved
		{
			get
			{
				return this._g_approved;
			}
			set
			{
				if ((this._g_approved != value))
				{
					this.Ong_approvedChanging(value);
					this.SendPropertyChanging();
					this._g_approved = value;
					this.SendPropertyChanged("g_approved");
					this.Ong_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_accesslevel", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_accesslevel
		{
			get
			{
				return this._g_accesslevel;
			}
			set
			{
				if ((this._g_accesslevel != value))
				{
					this.Ong_accesslevelChanging(value);
					this.SendPropertyChanging();
					this._g_accesslevel = value;
					this.SendPropertyChanged("g_accesslevel");
					this.Ong_accesslevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_owner", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string g_owner
		{
			get
			{
				return this._g_owner;
			}
			set
			{
				if ((this._g_owner != value))
				{
					this.Ong_ownerChanging(value);
					this.SendPropertyChanging();
					this._g_owner = value;
					this.SendPropertyChanged("g_owner");
					this.Ong_ownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_activemembers", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_activemembers
		{
			get
			{
				return this._g_activemembers;
			}
			set
			{
				if ((this._g_activemembers != value))
				{
					this.Ong_activemembersChanging(value);
					this.SendPropertyChanging();
					this._g_activemembers = value;
					this.SendPropertyChanged("g_activemembers");
					this.Ong_activemembersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_jointerms", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string g_jointerms
		{
			get
			{
				return this._g_jointerms;
			}
			set
			{
				if ((this._g_jointerms != value))
				{
					this.Ong_jointermsChanging(value);
					this.SendPropertyChanging();
					this._g_jointerms = value;
					this.SendPropertyChanged("g_jointerms");
					this.Ong_jointermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_joinquestion", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string g_joinquestion
		{
			get
			{
				return this._g_joinquestion;
			}
			set
			{
				if ((this._g_joinquestion != value))
				{
					this.Ong_joinquestionChanging(value);
					this.SendPropertyChanging();
					this._g_joinquestion = value;
					this.SendPropertyChanged("g_joinquestion");
					this.Ong_joinquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_permissions", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long g_permissions
		{
			get
			{
				return this._g_permissions;
			}
			set
			{
				if ((this._g_permissions != value))
				{
					this.Ong_permissionsChanging(value);
					this.SendPropertyChanging();
					this._g_permissions = value;
					this.SendPropertyChanged("g_permissions");
					this.Ong_permissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_minage", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> g_minage
		{
			get
			{
				return this._g_minage;
			}
			set
			{
				if ((this._g_minage != value))
				{
					this.Ong_minageChanging(value);
					this.SendPropertyChanging();
					this._g_minage = value;
					this.SendPropertyChanged("g_minage");
					this.Ong_minageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_autojoin", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool g_autojoin
		{
			get
			{
				return this._g_autojoin;
			}
			set
			{
				if ((this._g_autojoin != value))
				{
					this.Ong_autojoinChanging(value);
					this.SendPropertyChanging();
					this._g_autojoin = value;
					this.SendPropertyChanged("g_autojoin");
					this.Ong_autojoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_autojoincountry", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string g_autojoincountry
		{
			get
			{
				return this._g_autojoincountry;
			}
			set
			{
				if ((this._g_autojoincountry != value))
				{
					this.Ong_autojoincountryChanging(value);
					this.SendPropertyChanging();
					this._g_autojoincountry = value;
					this.SendPropertyChanged("g_autojoincountry");
					this.Ong_autojoincountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_autojoinregion", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string g_autojoinregion
		{
			get
			{
				return this._g_autojoinregion;
			}
			set
			{
				if ((this._g_autojoinregion != value))
				{
					this.Ong_autojoinregionChanging(value);
					this.SendPropertyChanging();
					this._g_autojoinregion = value;
					this.SendPropertyChanged("g_autojoinregion");
					this.Ong_autojoinregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_autojoincity", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string g_autojoincity
		{
			get
			{
				return this._g_autojoincity;
			}
			set
			{
				if ((this._g_autojoincity != value))
				{
					this.Ong_autojoincityChanging(value);
					this.SendPropertyChanging();
					this._g_autojoincity = value;
					this.SendPropertyChanged("g_autojoincity");
					this.Ong_autojoincityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Event", Storage="_Events", ThisKey="g_id", OtherKey="e_fromgroup")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupBan", Storage="_GroupBans", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupBan> GroupBans
		{
			get
			{
				return this._GroupBans;
			}
			set
			{
				this._GroupBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupEvent", Storage="_GroupEvents", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupEvent> GroupEvents
		{
			get
			{
				return this._GroupEvents;
			}
			set
			{
				this._GroupEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupMember", Storage="_GroupMembers", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupMember> GroupMembers
		{
			get
			{
				return this._GroupMembers;
			}
			set
			{
				this._GroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPhoto", Storage="_GroupPhotos", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupPhoto> GroupPhotos
		{
			get
			{
				return this._GroupPhotos;
			}
			set
			{
				this._GroupPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupsCategory", Storage="_GroupsCategories", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupsCategory> GroupsCategories
		{
			get
			{
				return this._GroupsCategories;
			}
			set
			{
				this._GroupsCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupTopic", Storage="_GroupTopics", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupTopic> GroupTopics
		{
			get
			{
				return this._GroupTopics;
			}
			set
			{
				this._GroupTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupTopicSubscription", Storage="_GroupTopicSubscriptions", ThisKey="g_id", OtherKey="g_id")]
		public EntitySet<GroupTopicSubscription> GroupTopicSubscriptions
		{
			get
			{
				return this._GroupTopicSubscriptions;
			}
			set
			{
				this._GroupTopicSubscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupBans(GroupBan entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupBans(GroupBan entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupEvents(GroupEvent entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupEvents(GroupEvent entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupPhotos(GroupPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupPhotos(GroupPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupsCategories(GroupsCategory entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupsCategories(GroupsCategory entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupTopics(GroupTopic entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupTopics(GroupTopic entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupsCategories")]
	public partial class GroupsCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _g_id;
		
		private int _c_id;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onc_idChanging(int value);
    partial void Onc_idChanged();
    #endregion
		
		public GroupsCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int c_id
		{
			get
			{
				return this._c_id;
			}
			set
			{
				if ((this._c_id != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onc_idChanging(value);
					this.SendPropertyChanging();
					this._c_id = value;
					this.SendPropertyChanged("c_id");
					this.Onc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_GroupsCategory", Storage="_Category", ThisKey="c_id", OtherKey="c_id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.GroupsCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.GroupsCategories.Add(this);
						this._c_id = value.c_id;
					}
					else
					{
						this._c_id = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupsCategory", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupsCategories.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupsCategories.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupTopics")]
	public partial class GroupTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gt_id;
		
		private int _g_id;
		
		private string _gt_name;
		
		private System.DateTime _gt_datecreated;
		
		private System.DateTime _gt_dateupdated;
		
		private string _u_username;
		
		private int _gt_posts;
		
		private bool _gt_locked;
		
		private System.Nullable<System.DateTime> _gt_stickyuntil;
		
		private bool _gt_poll;
		
		private int _gt_views;
		
		private EntitySet<GroupPollsAnswer> _GroupPollsAnswers;
		
		private EntitySet<GroupPollsChoice> _GroupPollsChoices;
		
		private EntitySet<GroupPost> _GroupPosts;
		
		private EntitySet<GroupTopicSubscription> _GroupTopicSubscriptions;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongt_idChanging(int value);
    partial void Ongt_idChanged();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Ongt_nameChanging(string value);
    partial void Ongt_nameChanged();
    partial void Ongt_datecreatedChanging(System.DateTime value);
    partial void Ongt_datecreatedChanged();
    partial void Ongt_dateupdatedChanging(System.DateTime value);
    partial void Ongt_dateupdatedChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongt_postsChanging(int value);
    partial void Ongt_postsChanged();
    partial void Ongt_lockedChanging(bool value);
    partial void Ongt_lockedChanged();
    partial void Ongt_stickyuntilChanging(System.Nullable<System.DateTime> value);
    partial void Ongt_stickyuntilChanged();
    partial void Ongt_pollChanging(bool value);
    partial void Ongt_pollChanged();
    partial void Ongt_viewsChanging(int value);
    partial void Ongt_viewsChanged();
    #endregion
		
		public GroupTopic()
		{
			this._GroupPollsAnswers = new EntitySet<GroupPollsAnswer>(new Action<GroupPollsAnswer>(this.attach_GroupPollsAnswers), new Action<GroupPollsAnswer>(this.detach_GroupPollsAnswers));
			this._GroupPollsChoices = new EntitySet<GroupPollsChoice>(new Action<GroupPollsChoice>(this.attach_GroupPollsChoices), new Action<GroupPollsChoice>(this.detach_GroupPollsChoices));
			this._GroupPosts = new EntitySet<GroupPost>(new Action<GroupPost>(this.attach_GroupPosts), new Action<GroupPost>(this.detach_GroupPosts));
			this._GroupTopicSubscriptions = new EntitySet<GroupTopicSubscription>(new Action<GroupTopicSubscription>(this.attach_GroupTopicSubscriptions), new Action<GroupTopicSubscription>(this.detach_GroupTopicSubscriptions));
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gt_id
		{
			get
			{
				return this._gt_id;
			}
			set
			{
				if ((this._gt_id != value))
				{
					this.Ongt_idChanging(value);
					this.SendPropertyChanging();
					this._gt_id = value;
					this.SendPropertyChanged("gt_id");
					this.Ongt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gt_name
		{
			get
			{
				return this._gt_name;
			}
			set
			{
				if ((this._gt_name != value))
				{
					this.Ongt_nameChanging(value);
					this.SendPropertyChanging();
					this._gt_name = value;
					this.SendPropertyChanged("gt_name");
					this.Ongt_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_datecreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gt_datecreated
		{
			get
			{
				return this._gt_datecreated;
			}
			set
			{
				if ((this._gt_datecreated != value))
				{
					this.Ongt_datecreatedChanging(value);
					this.SendPropertyChanging();
					this._gt_datecreated = value;
					this.SendPropertyChanged("gt_datecreated");
					this.Ongt_datecreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_dateupdated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gt_dateupdated
		{
			get
			{
				return this._gt_dateupdated;
			}
			set
			{
				if ((this._gt_dateupdated != value))
				{
					this.Ongt_dateupdatedChanging(value);
					this.SendPropertyChanging();
					this._gt_dateupdated = value;
					this.SendPropertyChanged("gt_dateupdated");
					this.Ongt_dateupdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_posts", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gt_posts
		{
			get
			{
				return this._gt_posts;
			}
			set
			{
				if ((this._gt_posts != value))
				{
					this.Ongt_postsChanging(value);
					this.SendPropertyChanging();
					this._gt_posts = value;
					this.SendPropertyChanged("gt_posts");
					this.Ongt_postsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_locked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool gt_locked
		{
			get
			{
				return this._gt_locked;
			}
			set
			{
				if ((this._gt_locked != value))
				{
					this.Ongt_lockedChanging(value);
					this.SendPropertyChanging();
					this._gt_locked = value;
					this.SendPropertyChanged("gt_locked");
					this.Ongt_lockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_stickyuntil", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> gt_stickyuntil
		{
			get
			{
				return this._gt_stickyuntil;
			}
			set
			{
				if ((this._gt_stickyuntil != value))
				{
					this.Ongt_stickyuntilChanging(value);
					this.SendPropertyChanging();
					this._gt_stickyuntil = value;
					this.SendPropertyChanged("gt_stickyuntil");
					this.Ongt_stickyuntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_poll", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool gt_poll
		{
			get
			{
				return this._gt_poll;
			}
			set
			{
				if ((this._gt_poll != value))
				{
					this.Ongt_pollChanging(value);
					this.SendPropertyChanging();
					this._gt_poll = value;
					this.SendPropertyChanged("gt_poll");
					this.Ongt_pollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_views", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gt_views
		{
			get
			{
				return this._gt_views;
			}
			set
			{
				if ((this._gt_views != value))
				{
					this.Ongt_viewsChanging(value);
					this.SendPropertyChanging();
					this._gt_views = value;
					this.SendPropertyChanged("gt_views");
					this.Ongt_viewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPollsAnswer", Storage="_GroupPollsAnswers", ThisKey="gt_id", OtherKey="gt_id")]
		public EntitySet<GroupPollsAnswer> GroupPollsAnswers
		{
			get
			{
				return this._GroupPollsAnswers;
			}
			set
			{
				this._GroupPollsAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPollsChoice", Storage="_GroupPollsChoices", ThisKey="gt_id", OtherKey="gt_id")]
		public EntitySet<GroupPollsChoice> GroupPollsChoices
		{
			get
			{
				return this._GroupPollsChoices;
			}
			set
			{
				this._GroupPollsChoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupPost", Storage="_GroupPosts", ThisKey="gt_id", OtherKey="gt_id")]
		public EntitySet<GroupPost> GroupPosts
		{
			get
			{
				return this._GroupPosts;
			}
			set
			{
				this._GroupPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupTopicSubscription", Storage="_GroupTopicSubscriptions", ThisKey="gt_id", OtherKey="gt_id")]
		public EntitySet<GroupTopicSubscription> GroupTopicSubscriptions
		{
			get
			{
				return this._GroupTopicSubscriptions;
			}
			set
			{
				this._GroupTopicSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupTopic", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupTopics.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupTopics.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupTopic", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupTopics.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupTopics.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = this;
		}
		
		private void detach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = null;
		}
		
		private void attach_GroupPollsChoices(GroupPollsChoice entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = this;
		}
		
		private void detach_GroupPollsChoices(GroupPollsChoice entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = null;
		}
		
		private void attach_GroupPosts(GroupPost entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = this;
		}
		
		private void detach_GroupPosts(GroupPost entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = null;
		}
		
		private void attach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = this;
		}
		
		private void detach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.GroupTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="GroupTopicSubscriptions")]
	public partial class GroupTopicSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gts_id;
		
		private int _gt_id;
		
		private int _g_id;
		
		private string _u_username;
		
		private System.DateTime _gts_dateupdated;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<GroupTopic> _GroupTopic;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongts_idChanging(int value);
    partial void Ongts_idChanged();
    partial void Ongt_idChanging(int value);
    partial void Ongt_idChanged();
    partial void Ong_idChanging(int value);
    partial void Ong_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ongts_dateupdatedChanging(System.DateTime value);
    partial void Ongts_dateupdatedChanged();
    #endregion
		
		public GroupTopicSubscription()
		{
			this._Group = default(EntityRef<Group>);
			this._GroupTopic = default(EntityRef<GroupTopic>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gts_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gts_id
		{
			get
			{
				return this._gts_id;
			}
			set
			{
				if ((this._gts_id != value))
				{
					this.Ongts_idChanging(value);
					this.SendPropertyChanging();
					this._gts_id = value;
					this.SendPropertyChanged("gts_id");
					this.Ongts_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int gt_id
		{
			get
			{
				return this._gt_id;
			}
			set
			{
				if ((this._gt_id != value))
				{
					if (this._GroupTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongt_idChanging(value);
					this.SendPropertyChanging();
					this._gt_id = value;
					this.SendPropertyChanged("gt_id");
					this.Ongt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_g_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int g_id
		{
			get
			{
				return this._g_id;
			}
			set
			{
				if ((this._g_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ong_idChanging(value);
					this.SendPropertyChanging();
					this._g_id = value;
					this.SendPropertyChanged("g_id");
					this.Ong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gts_dateupdated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime gts_dateupdated
		{
			get
			{
				return this._gts_dateupdated;
			}
			set
			{
				if ((this._gts_dateupdated != value))
				{
					this.Ongts_dateupdatedChanging(value);
					this.SendPropertyChanging();
					this._gts_dateupdated = value;
					this.SendPropertyChanged("gts_dateupdated");
					this.Ongts_dateupdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupTopicSubscription", Storage="_Group", ThisKey="g_id", OtherKey="g_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupTopicSubscriptions.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupTopicSubscriptions.Add(this);
						this._g_id = value.g_id;
					}
					else
					{
						this._g_id = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupTopic_GroupTopicSubscription", Storage="_GroupTopic", ThisKey="gt_id", OtherKey="gt_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GroupTopic GroupTopic
		{
			get
			{
				return this._GroupTopic.Entity;
			}
			set
			{
				GroupTopic previousValue = this._GroupTopic.Entity;
				if (((previousValue != value) 
							|| (this._GroupTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupTopic.Entity = null;
						previousValue.GroupTopicSubscriptions.Remove(this);
					}
					this._GroupTopic.Entity = value;
					if ((value != null))
					{
						value.GroupTopicSubscriptions.Add(this);
						this._gt_id = value.gt_id;
					}
					else
					{
						this._gt_id = default(int);
					}
					this.SendPropertyChanged("GroupTopic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupTopicSubscription", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupTopicSubscriptions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupTopicSubscriptions.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HourlyStats")]
	public partial class HourlyStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _hs_time;
		
		private int _hs_usersonline;
		
		private int _hs_newusers;
		
		private int _hs_sentmessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhs_timeChanging(System.DateTime value);
    partial void Onhs_timeChanged();
    partial void Onhs_usersonlineChanging(int value);
    partial void Onhs_usersonlineChanged();
    partial void Onhs_newusersChanging(int value);
    partial void Onhs_newusersChanged();
    partial void Onhs_sentmessagesChanging(int value);
    partial void Onhs_sentmessagesChanged();
    #endregion
		
		public HourlyStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hs_time", DbType="DateTime NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime hs_time
		{
			get
			{
				return this._hs_time;
			}
			set
			{
				if ((this._hs_time != value))
				{
					this.Onhs_timeChanging(value);
					this.SendPropertyChanging();
					this._hs_time = value;
					this.SendPropertyChanged("hs_time");
					this.Onhs_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hs_usersonline", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int hs_usersonline
		{
			get
			{
				return this._hs_usersonline;
			}
			set
			{
				if ((this._hs_usersonline != value))
				{
					this.Onhs_usersonlineChanging(value);
					this.SendPropertyChanging();
					this._hs_usersonline = value;
					this.SendPropertyChanged("hs_usersonline");
					this.Onhs_usersonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hs_newusers", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int hs_newusers
		{
			get
			{
				return this._hs_newusers;
			}
			set
			{
				if ((this._hs_newusers != value))
				{
					this.Onhs_newusersChanging(value);
					this.SendPropertyChanging();
					this._hs_newusers = value;
					this.SendPropertyChanged("hs_newusers");
					this.Onhs_newusersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hs_sentmessages", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int hs_sentmessages
		{
			get
			{
				return this._hs_sentmessages;
			}
			set
			{
				if ((this._hs_sentmessages != value))
				{
					this.Onhs_sentmessagesChanging(value);
					this.SendPropertyChanging();
					this._hs_sentmessages = value;
					this.SendPropertyChanged("hs_sentmessages");
					this.Onhs_sentmessagesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Interests")]
	public partial class Interest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _i_id;
		
		private string _i_from_username;
		
		private string _i_to_username;
		
		private System.DateTime _i_date_posted;
		
		private bool _i_deleted_by_fromuser;
		
		private bool _i_deleted_by_touser;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oni_idChanging(int value);
    partial void Oni_idChanged();
    partial void Oni_from_usernameChanging(string value);
    partial void Oni_from_usernameChanged();
    partial void Oni_to_usernameChanging(string value);
    partial void Oni_to_usernameChanged();
    partial void Oni_date_postedChanging(System.DateTime value);
    partial void Oni_date_postedChanged();
    partial void Oni_deleted_by_fromuserChanging(bool value);
    partial void Oni_deleted_by_fromuserChanged();
    partial void Oni_deleted_by_touserChanging(bool value);
    partial void Oni_deleted_by_touserChanged();
    #endregion
		
		public Interest()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int i_id
		{
			get
			{
				return this._i_id;
			}
			set
			{
				if ((this._i_id != value))
				{
					this.Oni_idChanging(value);
					this.SendPropertyChanging();
					this._i_id = value;
					this.SendPropertyChanged("i_id");
					this.Oni_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string i_from_username
		{
			get
			{
				return this._i_from_username;
			}
			set
			{
				if ((this._i_from_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oni_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._i_from_username = value;
					this.SendPropertyChanged("i_from_username");
					this.Oni_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string i_to_username
		{
			get
			{
				return this._i_to_username;
			}
			set
			{
				if ((this._i_to_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oni_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._i_to_username = value;
					this.SendPropertyChanged("i_to_username");
					this.Oni_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_date_posted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime i_date_posted
		{
			get
			{
				return this._i_date_posted;
			}
			set
			{
				if ((this._i_date_posted != value))
				{
					this.Oni_date_postedChanging(value);
					this.SendPropertyChanging();
					this._i_date_posted = value;
					this.SendPropertyChanged("i_date_posted");
					this.Oni_date_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_deleted_by_fromuser", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool i_deleted_by_fromuser
		{
			get
			{
				return this._i_deleted_by_fromuser;
			}
			set
			{
				if ((this._i_deleted_by_fromuser != value))
				{
					this.Oni_deleted_by_fromuserChanging(value);
					this.SendPropertyChanging();
					this._i_deleted_by_fromuser = value;
					this.SendPropertyChanged("i_deleted_by_fromuser");
					this.Oni_deleted_by_fromuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_deleted_by_touser", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool i_deleted_by_touser
		{
			get
			{
				return this._i_deleted_by_touser;
			}
			set
			{
				if ((this._i_deleted_by_touser != value))
				{
					this.Oni_deleted_by_touserChanging(value);
					this.SendPropertyChanging();
					this._i_deleted_by_touser = value;
					this.SendPropertyChanged("i_deleted_by_touser");
					this.Oni_deleted_by_touserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Interest", Storage="_User", ThisKey="i_from_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Interests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Interests.Add(this);
						this._i_from_username = value.u_username;
					}
					else
					{
						this._i_from_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Interest1", Storage="_User1", ThisKey="i_to_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Interests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Interests1.Add(this);
						this._i_to_username = value.u_username;
					}
					else
					{
						this._i_to_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="IPLogs")]
	public partial class IPLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ipl_id;
		
		private string _u_username;
		
		private string _ipl_ip;
		
		private int _ipl_action;
		
		private System.DateTime _ipl_timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onipl_idChanging(int value);
    partial void Onipl_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onipl_ipChanging(string value);
    partial void Onipl_ipChanged();
    partial void Onipl_actionChanging(int value);
    partial void Onipl_actionChanged();
    partial void Onipl_timestampChanging(System.DateTime value);
    partial void Onipl_timestampChanged();
    #endregion
		
		public IPLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipl_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ipl_id
		{
			get
			{
				return this._ipl_id;
			}
			set
			{
				if ((this._ipl_id != value))
				{
					this.Onipl_idChanging(value);
					this.SendPropertyChanging();
					this._ipl_id = value;
					this.SendPropertyChanged("ipl_id");
					this.Onipl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipl_ip", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ipl_ip
		{
			get
			{
				return this._ipl_ip;
			}
			set
			{
				if ((this._ipl_ip != value))
				{
					this.Onipl_ipChanging(value);
					this.SendPropertyChanging();
					this._ipl_ip = value;
					this.SendPropertyChanged("ipl_ip");
					this.Onipl_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipl_action", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ipl_action
		{
			get
			{
				return this._ipl_action;
			}
			set
			{
				if ((this._ipl_action != value))
				{
					this.Onipl_actionChanging(value);
					this.SendPropertyChanging();
					this._ipl_action = value;
					this.SendPropertyChanged("ipl_action");
					this.Onipl_actionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipl_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ipl_timestamp
		{
			get
			{
				return this._ipl_timestamp;
			}
			set
			{
				if ((this._ipl_timestamp != value))
				{
					this.Onipl_timestampChanging(value);
					this.SendPropertyChanging();
					this._ipl_timestamp = value;
					this.SendPropertyChanged("ipl_timestamp");
					this.Onipl_timestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _l_id;
		
		private string _l_language;
		
		private bool _l_active;
		
		private bool _l_predefined;
		
		private int _l_order;
		
		private string _l_browser_languages;
		
		private string _l_ipcountries;
		
		private string _l_theme;
		
		private EntitySet<ContentPage> _ContentPages;
		
		private EntitySet<New> _News;
		
		private EntitySet<Translation> _Translations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    partial void Onl_languageChanging(string value);
    partial void Onl_languageChanged();
    partial void Onl_activeChanging(bool value);
    partial void Onl_activeChanged();
    partial void Onl_predefinedChanging(bool value);
    partial void Onl_predefinedChanged();
    partial void Onl_orderChanging(int value);
    partial void Onl_orderChanged();
    partial void Onl_browser_languagesChanging(string value);
    partial void Onl_browser_languagesChanged();
    partial void Onl_ipcountriesChanging(string value);
    partial void Onl_ipcountriesChanged();
    partial void Onl_themeChanging(string value);
    partial void Onl_themeChanged();
    #endregion
		
		public Language()
		{
			this._ContentPages = new EntitySet<ContentPage>(new Action<ContentPage>(this.attach_ContentPages), new Action<ContentPage>(this.detach_ContentPages));
			this._News = new EntitySet<New>(new Action<New>(this.attach_News), new Action<New>(this.detach_News));
			this._Translations = new EntitySet<Translation>(new Action<Translation>(this.attach_Translations), new Action<Translation>(this.detach_Translations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_language", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string l_language
		{
			get
			{
				return this._l_language;
			}
			set
			{
				if ((this._l_language != value))
				{
					this.Onl_languageChanging(value);
					this.SendPropertyChanging();
					this._l_language = value;
					this.SendPropertyChanged("l_language");
					this.Onl_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool l_active
		{
			get
			{
				return this._l_active;
			}
			set
			{
				if ((this._l_active != value))
				{
					this.Onl_activeChanging(value);
					this.SendPropertyChanging();
					this._l_active = value;
					this.SendPropertyChanged("l_active");
					this.Onl_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_predefined", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool l_predefined
		{
			get
			{
				return this._l_predefined;
			}
			set
			{
				if ((this._l_predefined != value))
				{
					this.Onl_predefinedChanging(value);
					this.SendPropertyChanging();
					this._l_predefined = value;
					this.SendPropertyChanged("l_predefined");
					this.Onl_predefinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_order", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int l_order
		{
			get
			{
				return this._l_order;
			}
			set
			{
				if ((this._l_order != value))
				{
					this.Onl_orderChanging(value);
					this.SendPropertyChanging();
					this._l_order = value;
					this.SendPropertyChanged("l_order");
					this.Onl_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_browser_languages", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string l_browser_languages
		{
			get
			{
				return this._l_browser_languages;
			}
			set
			{
				if ((this._l_browser_languages != value))
				{
					this.Onl_browser_languagesChanging(value);
					this.SendPropertyChanging();
					this._l_browser_languages = value;
					this.SendPropertyChanged("l_browser_languages");
					this.Onl_browser_languagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_ipcountries", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string l_ipcountries
		{
			get
			{
				return this._l_ipcountries;
			}
			set
			{
				if ((this._l_ipcountries != value))
				{
					this.Onl_ipcountriesChanging(value);
					this.SendPropertyChanging();
					this._l_ipcountries = value;
					this.SendPropertyChanged("l_ipcountries");
					this.Onl_ipcountriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_theme", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string l_theme
		{
			get
			{
				return this._l_theme;
			}
			set
			{
				if ((this._l_theme != value))
				{
					this.Onl_themeChanging(value);
					this.SendPropertyChanging();
					this._l_theme = value;
					this.SendPropertyChanged("l_theme");
					this.Onl_themeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ContentPage", Storage="_ContentPages", ThisKey="l_id", OtherKey="l_id")]
		public EntitySet<ContentPage> ContentPages
		{
			get
			{
				return this._ContentPages;
			}
			set
			{
				this._ContentPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_New", Storage="_News", ThisKey="l_id", OtherKey="l_id")]
		public EntitySet<New> News
		{
			get
			{
				return this._News;
			}
			set
			{
				this._News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Translation", Storage="_Translations", ThisKey="l_id", OtherKey="l_id")]
		public EntitySet<Translation> Translations
		{
			get
			{
				return this._Translations;
			}
			set
			{
				this._Translations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentPages(ContentPage entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_ContentPages(ContentPage entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Translations(Translation entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Translations(Translation entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _m_id;
		
		private string _m_from_username;
		
		private int _m_from_folder;
		
		private string _m_to_username;
		
		private int _m_to_folder;
		
		private string _m_body;
		
		private System.DateTime _m_timestamp;
		
		private int _m_replied_to;
		
		private bool _m_is_read;
		
		private bool _m_pending_approval;
		
		private bool _m_new;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onm_idChanging(int value);
    partial void Onm_idChanged();
    partial void Onm_from_usernameChanging(string value);
    partial void Onm_from_usernameChanged();
    partial void Onm_from_folderChanging(int value);
    partial void Onm_from_folderChanged();
    partial void Onm_to_usernameChanging(string value);
    partial void Onm_to_usernameChanged();
    partial void Onm_to_folderChanging(int value);
    partial void Onm_to_folderChanged();
    partial void Onm_bodyChanging(string value);
    partial void Onm_bodyChanged();
    partial void Onm_timestampChanging(System.DateTime value);
    partial void Onm_timestampChanged();
    partial void Onm_replied_toChanging(int value);
    partial void Onm_replied_toChanged();
    partial void Onm_is_readChanging(bool value);
    partial void Onm_is_readChanged();
    partial void Onm_pending_approvalChanging(bool value);
    partial void Onm_pending_approvalChanged();
    partial void Onm_newChanging(bool value);
    partial void Onm_newChanged();
    #endregion
		
		public Message()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int m_id
		{
			get
			{
				return this._m_id;
			}
			set
			{
				if ((this._m_id != value))
				{
					this.Onm_idChanging(value);
					this.SendPropertyChanging();
					this._m_id = value;
					this.SendPropertyChanged("m_id");
					this.Onm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_from_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_from_username
		{
			get
			{
				return this._m_from_username;
			}
			set
			{
				if ((this._m_from_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onm_from_usernameChanging(value);
					this.SendPropertyChanging();
					this._m_from_username = value;
					this.SendPropertyChanged("m_from_username");
					this.Onm_from_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_from_folder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_from_folder
		{
			get
			{
				return this._m_from_folder;
			}
			set
			{
				if ((this._m_from_folder != value))
				{
					this.Onm_from_folderChanging(value);
					this.SendPropertyChanging();
					this._m_from_folder = value;
					this.SendPropertyChanged("m_from_folder");
					this.Onm_from_folderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_to_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_to_username
		{
			get
			{
				return this._m_to_username;
			}
			set
			{
				if ((this._m_to_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onm_to_usernameChanging(value);
					this.SendPropertyChanging();
					this._m_to_username = value;
					this.SendPropertyChanged("m_to_username");
					this.Onm_to_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_to_folder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_to_folder
		{
			get
			{
				return this._m_to_folder;
			}
			set
			{
				if ((this._m_to_folder != value))
				{
					this.Onm_to_folderChanging(value);
					this.SendPropertyChanging();
					this._m_to_folder = value;
					this.SendPropertyChanged("m_to_folder");
					this.Onm_to_folderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_body", DbType="NVarChar(3500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string m_body
		{
			get
			{
				return this._m_body;
			}
			set
			{
				if ((this._m_body != value))
				{
					this.Onm_bodyChanging(value);
					this.SendPropertyChanging();
					this._m_body = value;
					this.SendPropertyChanged("m_body");
					this.Onm_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime m_timestamp
		{
			get
			{
				return this._m_timestamp;
			}
			set
			{
				if ((this._m_timestamp != value))
				{
					this.Onm_timestampChanging(value);
					this.SendPropertyChanging();
					this._m_timestamp = value;
					this.SendPropertyChanged("m_timestamp");
					this.Onm_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_replied_to", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int m_replied_to
		{
			get
			{
				return this._m_replied_to;
			}
			set
			{
				if ((this._m_replied_to != value))
				{
					this.Onm_replied_toChanging(value);
					this.SendPropertyChanging();
					this._m_replied_to = value;
					this.SendPropertyChanged("m_replied_to");
					this.Onm_replied_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_is_read", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_is_read
		{
			get
			{
				return this._m_is_read;
			}
			set
			{
				if ((this._m_is_read != value))
				{
					this.Onm_is_readChanging(value);
					this.SendPropertyChanging();
					this._m_is_read = value;
					this.SendPropertyChanged("m_is_read");
					this.Onm_is_readChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_pending_approval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_pending_approval
		{
			get
			{
				return this._m_pending_approval;
			}
			set
			{
				if ((this._m_pending_approval != value))
				{
					this.Onm_pending_approvalChanging(value);
					this.SendPropertyChanging();
					this._m_pending_approval = value;
					this.SendPropertyChanged("m_pending_approval");
					this.Onm_pending_approvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_new", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool m_new
		{
			get
			{
				return this._m_new;
			}
			set
			{
				if ((this._m_new != value))
				{
					this.Onm_newChanging(value);
					this.SendPropertyChanging();
					this._m_new = value;
					this.SendPropertyChanged("m_new");
					this.Onm_newChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="m_from_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._m_from_username = value.u_username;
					}
					else
					{
						this._m_from_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_User1", ThisKey="m_to_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Messages1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Messages1.Add(this);
						this._m_to_username = value.u_username;
					}
					else
					{
						this._m_to_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class MessagesHistoryCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mhc_fromusername;
		
		private string _mhc_tousername;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmhc_fromusernameChanging(string value);
    partial void Onmhc_fromusernameChanged();
    partial void Onmhc_tousernameChanging(string value);
    partial void Onmhc_tousernameChanged();
    #endregion
		
		public MessagesHistoryCache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mhc_fromusername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string mhc_fromusername
		{
			get
			{
				return this._mhc_fromusername;
			}
			set
			{
				if ((this._mhc_fromusername != value))
				{
					this.Onmhc_fromusernameChanging(value);
					this.SendPropertyChanging();
					this._mhc_fromusername = value;
					this.SendPropertyChanged("mhc_fromusername");
					this.Onmhc_fromusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mhc_tousername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string mhc_tousername
		{
			get
			{
				return this._mhc_tousername;
			}
			set
			{
				if ((this._mhc_tousername != value))
				{
					this.Onmhc_tousernameChanging(value);
					this.SendPropertyChanging();
					this._mhc_tousername = value;
					this.SendPropertyChanged("mhc_tousername");
					this.Onmhc_tousernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class MessagesSandbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _ms_message;
		
		private int _ms_count;
		
		private System.DateTime _ms_datetime;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onms_messageChanging(string value);
    partial void Onms_messageChanged();
    partial void Onms_countChanging(int value);
    partial void Onms_countChanged();
    partial void Onms_datetimeChanging(System.DateTime value);
    partial void Onms_datetimeChanged();
    #endregion
		
		public MessagesSandbox()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ms_message", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ms_message
		{
			get
			{
				return this._ms_message;
			}
			set
			{
				if ((this._ms_message != value))
				{
					this.Onms_messageChanging(value);
					this.SendPropertyChanging();
					this._ms_message = value;
					this.SendPropertyChanged("ms_message");
					this.Onms_messageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ms_count", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ms_count
		{
			get
			{
				return this._ms_count;
			}
			set
			{
				if ((this._ms_count != value))
				{
					this.Onms_countChanging(value);
					this.SendPropertyChanging();
					this._ms_count = value;
					this.SendPropertyChanged("ms_count");
					this.Onms_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ms_datetime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ms_datetime
		{
			get
			{
				return this._ms_datetime;
			}
			set
			{
				if ((this._ms_datetime != value))
				{
					this.Onms_datetimeChanging(value);
					this.SendPropertyChanging();
					this._ms_datetime = value;
					this.SendPropertyChanged("ms_datetime");
					this.Onms_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MessagesSandbox", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MessagesSandboxes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MessagesSandboxes.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _n_id;
		
		private System.DateTime _n_date;
		
		private string _n_text;
		
		private string _n_title;
		
		private int _l_id;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onn_idChanging(int value);
    partial void Onn_idChanged();
    partial void Onn_dateChanging(System.DateTime value);
    partial void Onn_dateChanged();
    partial void Onn_textChanging(string value);
    partial void Onn_textChanged();
    partial void Onn_titleChanging(string value);
    partial void Onn_titleChanged();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    #endregion
		
		public New()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int n_id
		{
			get
			{
				return this._n_id;
			}
			set
			{
				if ((this._n_id != value))
				{
					this.Onn_idChanging(value);
					this.SendPropertyChanging();
					this._n_id = value;
					this.SendPropertyChanged("n_id");
					this.Onn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime n_date
		{
			get
			{
				return this._n_date;
			}
			set
			{
				if ((this._n_date != value))
				{
					this.Onn_dateChanging(value);
					this.SendPropertyChanging();
					this._n_date = value;
					this.SendPropertyChanged("n_date");
					this.Onn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string n_text
		{
			get
			{
				return this._n_text;
			}
			set
			{
				if ((this._n_text != value))
				{
					this.Onn_textChanging(value);
					this.SendPropertyChanging();
					this._n_text = value;
					this.SendPropertyChanged("n_text");
					this.Onn_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string n_title
		{
			get
			{
				return this._n_title;
			}
			set
			{
				if ((this._n_title != value))
				{
					this.Onn_titleChanging(value);
					this.SendPropertyChanging();
					this._n_title = value;
					this.SendPropertyChanged("n_title");
					this.Onn_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_New", Storage="_Language", ThisKey="l_id", OtherKey="l_id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.News.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.News.Add(this);
						this._l_id = value.l_id;
					}
					else
					{
						this._l_id = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PaymentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ph_id;
		
		private string _u_username;
		
		private string _ph_paymentprocessor;
		
		private decimal _ph_amount;
		
		private string _ph_description;
		
		private string _ph_notes;
		
		private int _ph_status;
		
		private System.DateTime _ph_timestamp;
		
		private EntitySet<AffiliateCommission> _AffiliateCommissions;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onph_idChanging(int value);
    partial void Onph_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onph_paymentprocessorChanging(string value);
    partial void Onph_paymentprocessorChanged();
    partial void Onph_amountChanging(decimal value);
    partial void Onph_amountChanged();
    partial void Onph_descriptionChanging(string value);
    partial void Onph_descriptionChanged();
    partial void Onph_notesChanging(string value);
    partial void Onph_notesChanged();
    partial void Onph_statusChanging(int value);
    partial void Onph_statusChanged();
    partial void Onph_timestampChanging(System.DateTime value);
    partial void Onph_timestampChanged();
    #endregion
		
		public PaymentHistory()
		{
			this._AffiliateCommissions = new EntitySet<AffiliateCommission>(new Action<AffiliateCommission>(this.attach_AffiliateCommissions), new Action<AffiliateCommission>(this.detach_AffiliateCommissions));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ph_id
		{
			get
			{
				return this._ph_id;
			}
			set
			{
				if ((this._ph_id != value))
				{
					this.Onph_idChanging(value);
					this.SendPropertyChanging();
					this._ph_id = value;
					this.SendPropertyChanged("ph_id");
					this.Onph_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_paymentprocessor", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ph_paymentprocessor
		{
			get
			{
				return this._ph_paymentprocessor;
			}
			set
			{
				if ((this._ph_paymentprocessor != value))
				{
					this.Onph_paymentprocessorChanging(value);
					this.SendPropertyChanging();
					this._ph_paymentprocessor = value;
					this.SendPropertyChanged("ph_paymentprocessor");
					this.Onph_paymentprocessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_amount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ph_amount
		{
			get
			{
				return this._ph_amount;
			}
			set
			{
				if ((this._ph_amount != value))
				{
					this.Onph_amountChanging(value);
					this.SendPropertyChanging();
					this._ph_amount = value;
					this.SendPropertyChanged("ph_amount");
					this.Onph_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ph_description
		{
			get
			{
				return this._ph_description;
			}
			set
			{
				if ((this._ph_description != value))
				{
					this.Onph_descriptionChanging(value);
					this.SendPropertyChanging();
					this._ph_description = value;
					this.SendPropertyChanged("ph_description");
					this.Onph_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_notes", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ph_notes
		{
			get
			{
				return this._ph_notes;
			}
			set
			{
				if ((this._ph_notes != value))
				{
					this.Onph_notesChanging(value);
					this.SendPropertyChanging();
					this._ph_notes = value;
					this.SendPropertyChanged("ph_notes");
					this.Onph_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ph_status
		{
			get
			{
				return this._ph_status;
			}
			set
			{
				if ((this._ph_status != value))
				{
					this.Onph_statusChanging(value);
					this.SendPropertyChanging();
					this._ph_status = value;
					this.SendPropertyChanged("ph_status");
					this.Onph_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ph_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ph_timestamp
		{
			get
			{
				return this._ph_timestamp;
			}
			set
			{
				if ((this._ph_timestamp != value))
				{
					this.Onph_timestampChanging(value);
					this.SendPropertyChanging();
					this._ph_timestamp = value;
					this.SendPropertyChanged("ph_timestamp");
					this.Onph_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentHistory_AffiliateCommission", Storage="_AffiliateCommissions", ThisKey="ph_id", OtherKey="ph_id")]
		public EntitySet<AffiliateCommission> AffiliateCommissions
		{
			get
			{
				return this._AffiliateCommissions;
			}
			set
			{
				this._AffiliateCommissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentHistory", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PaymentHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PaymentHistories.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.PaymentHistory = this;
		}
		
		private void detach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.PaymentHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PendingGuids")]
	public partial class PendingGuid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pg_username;
		
		private string _pg_guid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpg_usernameChanging(string value);
    partial void Onpg_usernameChanged();
    partial void Onpg_guidChanging(string value);
    partial void Onpg_guidChanged();
    #endregion
		
		public PendingGuid()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pg_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pg_username
		{
			get
			{
				return this._pg_username;
			}
			set
			{
				if ((this._pg_username != value))
				{
					this.Onpg_usernameChanging(value);
					this.SendPropertyChanging();
					this._pg_username = value;
					this.SendPropertyChanged("pg_username");
					this.Onpg_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pg_guid", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pg_guid
		{
			get
			{
				return this._pg_guid;
			}
			set
			{
				if ((this._pg_guid != value))
				{
					this.Onpg_guidChanging(value);
					this.SendPropertyChanging();
					this._pg_guid = value;
					this.SendPropertyChanged("pg_guid");
					this.Onpg_guidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PhotoAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pa_photoowner;
		
		private string _pa_photoviewer;
		
		private System.DateTime _pa_dateaccessgranted;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpa_photoownerChanging(string value);
    partial void Onpa_photoownerChanged();
    partial void Onpa_photoviewerChanging(string value);
    partial void Onpa_photoviewerChanged();
    partial void Onpa_dateaccessgrantedChanging(System.DateTime value);
    partial void Onpa_dateaccessgrantedChanged();
    #endregion
		
		public PhotoAccess()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_photoowner", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pa_photoowner
		{
			get
			{
				return this._pa_photoowner;
			}
			set
			{
				if ((this._pa_photoowner != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpa_photoownerChanging(value);
					this.SendPropertyChanging();
					this._pa_photoowner = value;
					this.SendPropertyChanged("pa_photoowner");
					this.Onpa_photoownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_photoviewer", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pa_photoviewer
		{
			get
			{
				return this._pa_photoviewer;
			}
			set
			{
				if ((this._pa_photoviewer != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpa_photoviewerChanging(value);
					this.SendPropertyChanging();
					this._pa_photoviewer = value;
					this.SendPropertyChanged("pa_photoviewer");
					this.Onpa_photoviewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_dateaccessgranted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pa_dateaccessgranted
		{
			get
			{
				return this._pa_dateaccessgranted;
			}
			set
			{
				if ((this._pa_dateaccessgranted != value))
				{
					this.Onpa_dateaccessgrantedChanging(value);
					this.SendPropertyChanging();
					this._pa_dateaccessgranted = value;
					this.SendPropertyChanged("pa_dateaccessgranted");
					this.Onpa_dateaccessgrantedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAccess", Storage="_User", ThisKey="pa_photoowner", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoAccesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoAccesses.Add(this);
						this._pa_photoowner = value.u_username;
					}
					else
					{
						this._pa_photoowner = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAccess1", Storage="_User1", ThisKey="pa_photoviewer", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.PhotoAccesses1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.PhotoAccesses1.Add(this);
						this._pa_photoviewer = value.u_username;
					}
					else
					{
						this._pa_photoviewer = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoAlbums")]
	public partial class PhotoAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pa_id;
		
		private string _u_username;
		
		private string _pa_name;
		
		private int _pa_access;
		
		private System.Nullable<int> _pa_cover_photoid;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpa_idChanging(int value);
    partial void Onpa_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpa_nameChanging(string value);
    partial void Onpa_nameChanged();
    partial void Onpa_accessChanging(int value);
    partial void Onpa_accessChanged();
    partial void Onpa_cover_photoidChanging(System.Nullable<int> value);
    partial void Onpa_cover_photoidChanged();
    #endregion
		
		public PhotoAlbum()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pa_id
		{
			get
			{
				return this._pa_id;
			}
			set
			{
				if ((this._pa_id != value))
				{
					this.Onpa_idChanging(value);
					this.SendPropertyChanging();
					this._pa_id = value;
					this.SendPropertyChanged("pa_id");
					this.Onpa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pa_name
		{
			get
			{
				return this._pa_name;
			}
			set
			{
				if ((this._pa_name != value))
				{
					this.Onpa_nameChanging(value);
					this.SendPropertyChanging();
					this._pa_name = value;
					this.SendPropertyChanged("pa_name");
					this.Onpa_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_access", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pa_access
		{
			get
			{
				return this._pa_access;
			}
			set
			{
				if ((this._pa_access != value))
				{
					this.Onpa_accessChanging(value);
					this.SendPropertyChanging();
					this._pa_access = value;
					this.SendPropertyChanged("pa_access");
					this.Onpa_accessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_cover_photoid", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pa_cover_photoid
		{
			get
			{
				return this._pa_cover_photoid;
			}
			set
			{
				if ((this._pa_cover_photoid != value))
				{
					this.Onpa_cover_photoidChanging(value);
					this.SendPropertyChanging();
					this._pa_cover_photoid = value;
					this.SendPropertyChanged("pa_cover_photoid");
					this.Onpa_cover_photoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAlbum", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoAlbums.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoAlbums.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoComments")]
	public partial class PhotoComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pc_id;
		
		private int _p_id;
		
		private string _u_username;
		
		private string _pc_comment;
		
		private System.DateTime _pc_date;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpc_commentChanging(string value);
    partial void Onpc_commentChanged();
    partial void Onpc_dateChanging(System.DateTime value);
    partial void Onpc_dateChanged();
    #endregion
		
		public PhotoComment()
		{
			this._Photo = default(EntityRef<Photo>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_comment
		{
			get
			{
				return this._pc_comment;
			}
			set
			{
				if ((this._pc_comment != value))
				{
					this.Onpc_commentChanging(value);
					this.SendPropertyChanging();
					this._pc_comment = value;
					this.SendPropertyChanged("pc_comment");
					this.Onpc_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pc_date
		{
			get
			{
				return this._pc_date;
			}
			set
			{
				if ((this._pc_date != value))
				{
					this.Onpc_dateChanging(value);
					this.SendPropertyChanging();
					this._pc_date = value;
					this.SendPropertyChanged("pc_date");
					this.Onpc_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoComment", Storage="_Photo", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.PhotoComments.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.PhotoComments.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoComment", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoComments.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoContestEntries")]
	public partial class PhotoContestEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pce_id;
		
		private int _pc_id;
		
		private string _u_username;
		
		private int _p_id;
		
		private EntitySet<PhotoContestRank> _PhotoContestRanks;
		
		private EntitySet<PhotoContestVote> _PhotoContestVotes;
		
		private EntitySet<PhotoContestVote> _PhotoContestVotes1;
		
		private EntityRef<PhotoContest> _PhotoContest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpce_idChanging(int value);
    partial void Onpce_idChanged();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    #endregion
		
		public PhotoContestEntry()
		{
			this._PhotoContestRanks = new EntitySet<PhotoContestRank>(new Action<PhotoContestRank>(this.attach_PhotoContestRanks), new Action<PhotoContestRank>(this.detach_PhotoContestRanks));
			this._PhotoContestVotes = new EntitySet<PhotoContestVote>(new Action<PhotoContestVote>(this.attach_PhotoContestVotes), new Action<PhotoContestVote>(this.detach_PhotoContestVotes));
			this._PhotoContestVotes1 = new EntitySet<PhotoContestVote>(new Action<PhotoContestVote>(this.attach_PhotoContestVotes1), new Action<PhotoContestVote>(this.detach_PhotoContestVotes1));
			this._PhotoContest = default(EntityRef<PhotoContest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pce_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pce_id
		{
			get
			{
				return this._pce_id;
			}
			set
			{
				if ((this._pce_id != value))
				{
					this.Onpce_idChanging(value);
					this.SendPropertyChanging();
					this._pce_id = value;
					this.SendPropertyChanged("pce_id");
					this.Onpce_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					if (this._PhotoContest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestRank", Storage="_PhotoContestRanks", ThisKey="pce_id", OtherKey="pce_id")]
		public EntitySet<PhotoContestRank> PhotoContestRanks
		{
			get
			{
				return this._PhotoContestRanks;
			}
			set
			{
				this._PhotoContestRanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestVote", Storage="_PhotoContestVotes", ThisKey="pce_id", OtherKey="pce_id_nonpicked")]
		public EntitySet<PhotoContestVote> PhotoContestVotes
		{
			get
			{
				return this._PhotoContestVotes;
			}
			set
			{
				this._PhotoContestVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestVote1", Storage="_PhotoContestVotes1", ThisKey="pce_id", OtherKey="pce_id_picked")]
		public EntitySet<PhotoContestVote> PhotoContestVotes1
		{
			get
			{
				return this._PhotoContestVotes1;
			}
			set
			{
				this._PhotoContestVotes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContest_PhotoContestEntry", Storage="_PhotoContest", ThisKey="pc_id", OtherKey="pc_id", IsForeignKey=true)]
		public PhotoContest PhotoContest
		{
			get
			{
				return this._PhotoContest.Entity;
			}
			set
			{
				PhotoContest previousValue = this._PhotoContest.Entity;
				if (((previousValue != value) 
							|| (this._PhotoContest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoContest.Entity = null;
						previousValue.PhotoContestEntries.Remove(this);
					}
					this._PhotoContest.Entity = value;
					if ((value != null))
					{
						value.PhotoContestEntries.Add(this);
						this._pc_id = value.pc_id;
					}
					else
					{
						this._pc_id = default(int);
					}
					this.SendPropertyChanged("PhotoContest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry = this;
		}
		
		private void detach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry = null;
		}
		
		private void attach_PhotoContestVotes(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry = this;
		}
		
		private void detach_PhotoContestVotes(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry = null;
		}
		
		private void attach_PhotoContestVotes1(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry1 = this;
		}
		
		private void detach_PhotoContestVotes1(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContestEntry1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoContestRanks")]
	public partial class PhotoContestRank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private int _pc_id;
		
		private int _pce_id;
		
		private int _pcr_value;
		
		private EntityRef<PhotoContestEntry> _PhotoContestEntry;
		
		private EntityRef<PhotoContest> _PhotoContest;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onpce_idChanging(int value);
    partial void Onpce_idChanged();
    partial void Onpcr_valueChanging(int value);
    partial void Onpcr_valueChanged();
    #endregion
		
		public PhotoContestRank()
		{
			this._PhotoContestEntry = default(EntityRef<PhotoContestEntry>);
			this._PhotoContest = default(EntityRef<PhotoContest>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					if (this._PhotoContest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pce_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pce_id
		{
			get
			{
				return this._pce_id;
			}
			set
			{
				if ((this._pce_id != value))
				{
					if (this._PhotoContestEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpce_idChanging(value);
					this.SendPropertyChanging();
					this._pce_id = value;
					this.SendPropertyChanged("pce_id");
					this.Onpce_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcr_value", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pcr_value
		{
			get
			{
				return this._pcr_value;
			}
			set
			{
				if ((this._pcr_value != value))
				{
					this.Onpcr_valueChanging(value);
					this.SendPropertyChanging();
					this._pcr_value = value;
					this.SendPropertyChanged("pcr_value");
					this.Onpcr_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestRank", Storage="_PhotoContestEntry", ThisKey="pce_id", OtherKey="pce_id", IsForeignKey=true)]
		public PhotoContestEntry PhotoContestEntry
		{
			get
			{
				return this._PhotoContestEntry.Entity;
			}
			set
			{
				PhotoContestEntry previousValue = this._PhotoContestEntry.Entity;
				if (((previousValue != value) 
							|| (this._PhotoContestEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoContestEntry.Entity = null;
						previousValue.PhotoContestRanks.Remove(this);
					}
					this._PhotoContestEntry.Entity = value;
					if ((value != null))
					{
						value.PhotoContestRanks.Add(this);
						this._pce_id = value.pce_id;
					}
					else
					{
						this._pce_id = default(int);
					}
					this.SendPropertyChanged("PhotoContestEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContest_PhotoContestRank", Storage="_PhotoContest", ThisKey="pc_id", OtherKey="pc_id", IsForeignKey=true)]
		public PhotoContest PhotoContest
		{
			get
			{
				return this._PhotoContest.Entity;
			}
			set
			{
				PhotoContest previousValue = this._PhotoContest.Entity;
				if (((previousValue != value) 
							|| (this._PhotoContest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoContest.Entity = null;
						previousValue.PhotoContestRanks.Remove(this);
					}
					this._PhotoContest.Entity = value;
					if ((value != null))
					{
						value.PhotoContestRanks.Add(this);
						this._pc_id = value.pc_id;
					}
					else
					{
						this._pc_id = default(int);
					}
					this.SendPropertyChanged("PhotoContest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoContestRank", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoContestRanks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoContestRanks.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoContests")]
	public partial class PhotoContest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pc_id;
		
		private string _pc_name;
		
		private System.Nullable<int> _pc_gender;
		
		private string _pc_description;
		
		private string _pc_terms;
		
		private System.Nullable<int> _pc_minage;
		
		private System.Nullable<int> _pc_maxage;
		
		private System.DateTime _pc_datecreated;
		
		private System.Nullable<System.DateTime> _pc_dateends;
		
		private EntitySet<PhotoContestEntry> _PhotoContestEntries;
		
		private EntitySet<PhotoContestRank> _PhotoContestRanks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onpc_nameChanging(string value);
    partial void Onpc_nameChanged();
    partial void Onpc_genderChanging(System.Nullable<int> value);
    partial void Onpc_genderChanged();
    partial void Onpc_descriptionChanging(string value);
    partial void Onpc_descriptionChanged();
    partial void Onpc_termsChanging(string value);
    partial void Onpc_termsChanged();
    partial void Onpc_minageChanging(System.Nullable<int> value);
    partial void Onpc_minageChanged();
    partial void Onpc_maxageChanging(System.Nullable<int> value);
    partial void Onpc_maxageChanged();
    partial void Onpc_datecreatedChanging(System.DateTime value);
    partial void Onpc_datecreatedChanged();
    partial void Onpc_dateendsChanging(System.Nullable<System.DateTime> value);
    partial void Onpc_dateendsChanged();
    #endregion
		
		public PhotoContest()
		{
			this._PhotoContestEntries = new EntitySet<PhotoContestEntry>(new Action<PhotoContestEntry>(this.attach_PhotoContestEntries), new Action<PhotoContestEntry>(this.detach_PhotoContestEntries));
			this._PhotoContestRanks = new EntitySet<PhotoContestRank>(new Action<PhotoContestRank>(this.attach_PhotoContestRanks), new Action<PhotoContestRank>(this.detach_PhotoContestRanks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_name
		{
			get
			{
				return this._pc_name;
			}
			set
			{
				if ((this._pc_name != value))
				{
					this.Onpc_nameChanging(value);
					this.SendPropertyChanging();
					this._pc_name = value;
					this.SendPropertyChanged("pc_name");
					this.Onpc_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_gender", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pc_gender
		{
			get
			{
				return this._pc_gender;
			}
			set
			{
				if ((this._pc_gender != value))
				{
					this.Onpc_genderChanging(value);
					this.SendPropertyChanging();
					this._pc_gender = value;
					this.SendPropertyChanged("pc_gender");
					this.Onpc_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_description
		{
			get
			{
				return this._pc_description;
			}
			set
			{
				if ((this._pc_description != value))
				{
					this.Onpc_descriptionChanging(value);
					this.SendPropertyChanging();
					this._pc_description = value;
					this.SendPropertyChanged("pc_description");
					this.Onpc_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_terms", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_terms
		{
			get
			{
				return this._pc_terms;
			}
			set
			{
				if ((this._pc_terms != value))
				{
					this.Onpc_termsChanging(value);
					this.SendPropertyChanging();
					this._pc_terms = value;
					this.SendPropertyChanged("pc_terms");
					this.Onpc_termsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_minage", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pc_minage
		{
			get
			{
				return this._pc_minage;
			}
			set
			{
				if ((this._pc_minage != value))
				{
					this.Onpc_minageChanging(value);
					this.SendPropertyChanging();
					this._pc_minage = value;
					this.SendPropertyChanged("pc_minage");
					this.Onpc_minageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_maxage", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pc_maxage
		{
			get
			{
				return this._pc_maxage;
			}
			set
			{
				if ((this._pc_maxage != value))
				{
					this.Onpc_maxageChanging(value);
					this.SendPropertyChanging();
					this._pc_maxage = value;
					this.SendPropertyChanged("pc_maxage");
					this.Onpc_maxageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_datecreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pc_datecreated
		{
			get
			{
				return this._pc_datecreated;
			}
			set
			{
				if ((this._pc_datecreated != value))
				{
					this.Onpc_datecreatedChanging(value);
					this.SendPropertyChanging();
					this._pc_datecreated = value;
					this.SendPropertyChanged("pc_datecreated");
					this.Onpc_datecreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_dateends", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> pc_dateends
		{
			get
			{
				return this._pc_dateends;
			}
			set
			{
				if ((this._pc_dateends != value))
				{
					this.Onpc_dateendsChanging(value);
					this.SendPropertyChanging();
					this._pc_dateends = value;
					this.SendPropertyChanged("pc_dateends");
					this.Onpc_dateendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContest_PhotoContestEntry", Storage="_PhotoContestEntries", ThisKey="pc_id", OtherKey="pc_id")]
		public EntitySet<PhotoContestEntry> PhotoContestEntries
		{
			get
			{
				return this._PhotoContestEntries;
			}
			set
			{
				this._PhotoContestEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContest_PhotoContestRank", Storage="_PhotoContestRanks", ThisKey="pc_id", OtherKey="pc_id")]
		public EntitySet<PhotoContestRank> PhotoContestRanks
		{
			get
			{
				return this._PhotoContestRanks;
			}
			set
			{
				this._PhotoContestRanks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhotoContestEntries(PhotoContestEntry entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContest = this;
		}
		
		private void detach_PhotoContestEntries(PhotoContestEntry entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContest = null;
		}
		
		private void attach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContest = this;
		}
		
		private void detach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.PhotoContest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoContestVotes")]
	public partial class PhotoContestVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private int _pce_id_picked;
		
		private int _pce_id_nonpicked;
		
		private EntityRef<PhotoContestEntry> _PhotoContestEntry;
		
		private EntityRef<PhotoContestEntry> _PhotoContestEntry1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpce_id_pickedChanging(int value);
    partial void Onpce_id_pickedChanged();
    partial void Onpce_id_nonpickedChanging(int value);
    partial void Onpce_id_nonpickedChanged();
    #endregion
		
		public PhotoContestVote()
		{
			this._PhotoContestEntry = default(EntityRef<PhotoContestEntry>);
			this._PhotoContestEntry1 = default(EntityRef<PhotoContestEntry>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pce_id_picked", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pce_id_picked
		{
			get
			{
				return this._pce_id_picked;
			}
			set
			{
				if ((this._pce_id_picked != value))
				{
					if (this._PhotoContestEntry1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpce_id_pickedChanging(value);
					this.SendPropertyChanging();
					this._pce_id_picked = value;
					this.SendPropertyChanged("pce_id_picked");
					this.Onpce_id_pickedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pce_id_nonpicked", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pce_id_nonpicked
		{
			get
			{
				return this._pce_id_nonpicked;
			}
			set
			{
				if ((this._pce_id_nonpicked != value))
				{
					if (this._PhotoContestEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpce_id_nonpickedChanging(value);
					this.SendPropertyChanging();
					this._pce_id_nonpicked = value;
					this.SendPropertyChanged("pce_id_nonpicked");
					this.Onpce_id_nonpickedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestVote", Storage="_PhotoContestEntry", ThisKey="pce_id_nonpicked", OtherKey="pce_id", IsForeignKey=true)]
		public PhotoContestEntry PhotoContestEntry
		{
			get
			{
				return this._PhotoContestEntry.Entity;
			}
			set
			{
				PhotoContestEntry previousValue = this._PhotoContestEntry.Entity;
				if (((previousValue != value) 
							|| (this._PhotoContestEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoContestEntry.Entity = null;
						previousValue.PhotoContestVotes.Remove(this);
					}
					this._PhotoContestEntry.Entity = value;
					if ((value != null))
					{
						value.PhotoContestVotes.Add(this);
						this._pce_id_nonpicked = value.pce_id;
					}
					else
					{
						this._pce_id_nonpicked = default(int);
					}
					this.SendPropertyChanged("PhotoContestEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoContestEntry_PhotoContestVote1", Storage="_PhotoContestEntry1", ThisKey="pce_id_picked", OtherKey="pce_id", IsForeignKey=true)]
		public PhotoContestEntry PhotoContestEntry1
		{
			get
			{
				return this._PhotoContestEntry1.Entity;
			}
			set
			{
				PhotoContestEntry previousValue = this._PhotoContestEntry1.Entity;
				if (((previousValue != value) 
							|| (this._PhotoContestEntry1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoContestEntry1.Entity = null;
						previousValue.PhotoContestVotes1.Remove(this);
					}
					this._PhotoContestEntry1.Entity = value;
					if ((value != null))
					{
						value.PhotoContestVotes1.Add(this);
						this._pce_id_picked = value.pce_id;
					}
					else
					{
						this._pce_id_picked = default(int);
					}
					this.SendPropertyChanged("PhotoContestEntry1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoContestVote", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoContestVotes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoContestVotes.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoNotes")]
	public partial class PhotoNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pn_id;
		
		private int _p_id;
		
		private string _u_username;
		
		private string _pn_notes;
		
		private System.DateTime _pn_timestamp;
		
		private int _pn_x;
		
		private int _pn_y;
		
		private int _pn_width;
		
		private int _pn_height;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpn_idChanging(int value);
    partial void Onpn_idChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpn_notesChanging(string value);
    partial void Onpn_notesChanged();
    partial void Onpn_timestampChanging(System.DateTime value);
    partial void Onpn_timestampChanged();
    partial void Onpn_xChanging(int value);
    partial void Onpn_xChanged();
    partial void Onpn_yChanging(int value);
    partial void Onpn_yChanged();
    partial void Onpn_widthChanging(int value);
    partial void Onpn_widthChanged();
    partial void Onpn_heightChanging(int value);
    partial void Onpn_heightChanged();
    #endregion
		
		public PhotoNote()
		{
			this._Photo = default(EntityRef<Photo>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pn_id
		{
			get
			{
				return this._pn_id;
			}
			set
			{
				if ((this._pn_id != value))
				{
					this.Onpn_idChanging(value);
					this.SendPropertyChanging();
					this._pn_id = value;
					this.SendPropertyChanged("pn_id");
					this.Onpn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_notes", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string pn_notes
		{
			get
			{
				return this._pn_notes;
			}
			set
			{
				if ((this._pn_notes != value))
				{
					this.Onpn_notesChanging(value);
					this.SendPropertyChanging();
					this._pn_notes = value;
					this.SendPropertyChanged("pn_notes");
					this.Onpn_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pn_timestamp
		{
			get
			{
				return this._pn_timestamp;
			}
			set
			{
				if ((this._pn_timestamp != value))
				{
					this.Onpn_timestampChanging(value);
					this.SendPropertyChanging();
					this._pn_timestamp = value;
					this.SendPropertyChanged("pn_timestamp");
					this.Onpn_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_x", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pn_x
		{
			get
			{
				return this._pn_x;
			}
			set
			{
				if ((this._pn_x != value))
				{
					this.Onpn_xChanging(value);
					this.SendPropertyChanging();
					this._pn_x = value;
					this.SendPropertyChanged("pn_x");
					this.Onpn_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_y", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pn_y
		{
			get
			{
				return this._pn_y;
			}
			set
			{
				if ((this._pn_y != value))
				{
					this.Onpn_yChanging(value);
					this.SendPropertyChanging();
					this._pn_y = value;
					this.SendPropertyChanged("pn_y");
					this.Onpn_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_width", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pn_width
		{
			get
			{
				return this._pn_width;
			}
			set
			{
				if ((this._pn_width != value))
				{
					this.Onpn_widthChanging(value);
					this.SendPropertyChanging();
					this._pn_width = value;
					this.SendPropertyChanged("pn_width");
					this.Onpn_widthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_height", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pn_height
		{
			get
			{
				return this._pn_height;
			}
			set
			{
				if ((this._pn_height != value))
				{
					this.Onpn_heightChanging(value);
					this.SendPropertyChanging();
					this._pn_height = value;
					this.SendPropertyChanged("pn_height");
					this.Onpn_heightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoNote", Storage="_Photo", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.PhotoNotes.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.PhotoNotes.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoNote", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoNotes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoNotes.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PhotoRatings")]
	public partial class PhotoRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pr_fromusername;
		
		private int _p_id;
		
		private int _pr_rating;
		
		private System.DateTime _pr_timestamp;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpr_fromusernameChanging(string value);
    partial void Onpr_fromusernameChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onpr_ratingChanging(int value);
    partial void Onpr_ratingChanged();
    partial void Onpr_timestampChanging(System.DateTime value);
    partial void Onpr_timestampChanged();
    #endregion
		
		public PhotoRating()
		{
			this._Photo = default(EntityRef<Photo>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pr_fromusername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pr_fromusername
		{
			get
			{
				return this._pr_fromusername;
			}
			set
			{
				if ((this._pr_fromusername != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpr_fromusernameChanging(value);
					this.SendPropertyChanging();
					this._pr_fromusername = value;
					this.SendPropertyChanged("pr_fromusername");
					this.Onpr_fromusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pr_rating", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pr_rating
		{
			get
			{
				return this._pr_rating;
			}
			set
			{
				if ((this._pr_rating != value))
				{
					this.Onpr_ratingChanging(value);
					this.SendPropertyChanging();
					this._pr_rating = value;
					this.SendPropertyChanged("pr_rating");
					this.Onpr_ratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pr_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pr_timestamp
		{
			get
			{
				return this._pr_timestamp;
			}
			set
			{
				if ((this._pr_timestamp != value))
				{
					this.Onpr_timestampChanging(value);
					this.SendPropertyChanging();
					this._pr_timestamp = value;
					this.SendPropertyChanged("pr_timestamp");
					this.Onpr_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoRating", Storage="_Photo", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.PhotoRatings.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.PhotoRatings.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoRating", Storage="_User", ThisKey="pr_fromusername", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhotoRatings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhotoRatings.Add(this);
						this._pr_fromusername = value.u_username;
					}
					else
					{
						this._pr_fromusername = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Photos")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _u_username;
		
		private System.Nullable<int> _pa_id;
		
		private System.Data.Linq.Binary _p_image;
		
		private string _p_name;
		
		private string _p_description;
		
		private bool _p_approved;
		
		private bool _p_primary;
		
		private bool _p_explicit;
		
		private bool _p_private;
		
		private string _p_approvedby;
		
		private System.Nullable<System.DateTime> _p_approvedtimestamp;
		
		private string _p_facecrop;
		
		private bool _p_manual_approval;
		
		private bool _p_salute;
		
		private EntitySet<CommunityPhotoApproval> _CommunityPhotoApprovals;
		
		private EntitySet<PhotoComment> _PhotoComments;
		
		private EntitySet<PhotoNote> _PhotoNotes;
		
		private EntitySet<PhotoRating> _PhotoRatings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpa_idChanging(System.Nullable<int> value);
    partial void Onpa_idChanged();
    partial void Onp_imageChanging(System.Data.Linq.Binary value);
    partial void Onp_imageChanged();
    partial void Onp_nameChanging(string value);
    partial void Onp_nameChanged();
    partial void Onp_descriptionChanging(string value);
    partial void Onp_descriptionChanged();
    partial void Onp_approvedChanging(bool value);
    partial void Onp_approvedChanged();
    partial void Onp_primaryChanging(bool value);
    partial void Onp_primaryChanged();
    partial void Onp_explicitChanging(bool value);
    partial void Onp_explicitChanged();
    partial void Onp_privateChanging(bool value);
    partial void Onp_privateChanged();
    partial void Onp_approvedbyChanging(string value);
    partial void Onp_approvedbyChanged();
    partial void Onp_approvedtimestampChanging(System.Nullable<System.DateTime> value);
    partial void Onp_approvedtimestampChanged();
    partial void Onp_facecropChanging(string value);
    partial void Onp_facecropChanged();
    partial void Onp_manual_approvalChanging(bool value);
    partial void Onp_manual_approvalChanged();
    partial void Onp_saluteChanging(bool value);
    partial void Onp_saluteChanged();
    #endregion
		
		public Photo()
		{
			this._CommunityPhotoApprovals = new EntitySet<CommunityPhotoApproval>(new Action<CommunityPhotoApproval>(this.attach_CommunityPhotoApprovals), new Action<CommunityPhotoApproval>(this.detach_CommunityPhotoApprovals));
			this._PhotoComments = new EntitySet<PhotoComment>(new Action<PhotoComment>(this.attach_PhotoComments), new Action<PhotoComment>(this.detach_PhotoComments));
			this._PhotoNotes = new EntitySet<PhotoNote>(new Action<PhotoNote>(this.attach_PhotoNotes), new Action<PhotoNote>(this.detach_PhotoNotes));
			this._PhotoRatings = new EntitySet<PhotoRating>(new Action<PhotoRating>(this.attach_PhotoRatings), new Action<PhotoRating>(this.detach_PhotoRatings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pa_id
		{
			get
			{
				return this._pa_id;
			}
			set
			{
				if ((this._pa_id != value))
				{
					this.Onpa_idChanging(value);
					this.SendPropertyChanging();
					this._pa_id = value;
					this.SendPropertyChanged("pa_id");
					this.Onpa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary p_image
		{
			get
			{
				return this._p_image;
			}
			set
			{
				if ((this._p_image != value))
				{
					this.Onp_imageChanging(value);
					this.SendPropertyChanging();
					this._p_image = value;
					this.SendPropertyChanged("p_image");
					this.Onp_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_name", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_name
		{
			get
			{
				return this._p_name;
			}
			set
			{
				if ((this._p_name != value))
				{
					this.Onp_nameChanging(value);
					this.SendPropertyChanging();
					this._p_name = value;
					this.SendPropertyChanged("p_name");
					this.Onp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_description
		{
			get
			{
				return this._p_description;
			}
			set
			{
				if ((this._p_description != value))
				{
					this.Onp_descriptionChanging(value);
					this.SendPropertyChanging();
					this._p_description = value;
					this.SendPropertyChanged("p_description");
					this.Onp_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_approved
		{
			get
			{
				return this._p_approved;
			}
			set
			{
				if ((this._p_approved != value))
				{
					this.Onp_approvedChanging(value);
					this.SendPropertyChanging();
					this._p_approved = value;
					this.SendPropertyChanged("p_approved");
					this.Onp_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_primary", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_primary
		{
			get
			{
				return this._p_primary;
			}
			set
			{
				if ((this._p_primary != value))
				{
					this.Onp_primaryChanging(value);
					this.SendPropertyChanging();
					this._p_primary = value;
					this.SendPropertyChanged("p_primary");
					this.Onp_primaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_explicit", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_explicit
		{
			get
			{
				return this._p_explicit;
			}
			set
			{
				if ((this._p_explicit != value))
				{
					this.Onp_explicitChanging(value);
					this.SendPropertyChanging();
					this._p_explicit = value;
					this.SendPropertyChanged("p_explicit");
					this.Onp_explicitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_private", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_private
		{
			get
			{
				return this._p_private;
			}
			set
			{
				if ((this._p_private != value))
				{
					this.Onp_privateChanging(value);
					this.SendPropertyChanging();
					this._p_private = value;
					this.SendPropertyChanged("p_private");
					this.Onp_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_approvedby", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string p_approvedby
		{
			get
			{
				return this._p_approvedby;
			}
			set
			{
				if ((this._p_approvedby != value))
				{
					this.Onp_approvedbyChanging(value);
					this.SendPropertyChanging();
					this._p_approvedby = value;
					this.SendPropertyChanged("p_approvedby");
					this.Onp_approvedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_approvedtimestamp", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> p_approvedtimestamp
		{
			get
			{
				return this._p_approvedtimestamp;
			}
			set
			{
				if ((this._p_approvedtimestamp != value))
				{
					this.Onp_approvedtimestampChanging(value);
					this.SendPropertyChanging();
					this._p_approvedtimestamp = value;
					this.SendPropertyChanged("p_approvedtimestamp");
					this.Onp_approvedtimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_facecrop", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string p_facecrop
		{
			get
			{
				return this._p_facecrop;
			}
			set
			{
				if ((this._p_facecrop != value))
				{
					this.Onp_facecropChanging(value);
					this.SendPropertyChanging();
					this._p_facecrop = value;
					this.SendPropertyChanged("p_facecrop");
					this.Onp_facecropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_manual_approval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_manual_approval
		{
			get
			{
				return this._p_manual_approval;
			}
			set
			{
				if ((this._p_manual_approval != value))
				{
					this.Onp_manual_approvalChanging(value);
					this.SendPropertyChanging();
					this._p_manual_approval = value;
					this.SendPropertyChanged("p_manual_approval");
					this.Onp_manual_approvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_salute", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool p_salute
		{
			get
			{
				return this._p_salute;
			}
			set
			{
				if ((this._p_salute != value))
				{
					this.Onp_saluteChanging(value);
					this.SendPropertyChanging();
					this._p_salute = value;
					this.SendPropertyChanged("p_salute");
					this.Onp_saluteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_CommunityPhotoApproval", Storage="_CommunityPhotoApprovals", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<CommunityPhotoApproval> CommunityPhotoApprovals
		{
			get
			{
				return this._CommunityPhotoApprovals;
			}
			set
			{
				this._CommunityPhotoApprovals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoComment", Storage="_PhotoComments", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<PhotoComment> PhotoComments
		{
			get
			{
				return this._PhotoComments;
			}
			set
			{
				this._PhotoComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoNote", Storage="_PhotoNotes", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<PhotoNote> PhotoNotes
		{
			get
			{
				return this._PhotoNotes;
			}
			set
			{
				this._PhotoNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_PhotoRating", Storage="_PhotoRatings", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<PhotoRating> PhotoRatings
		{
			get
			{
				return this._PhotoRatings;
			}
			set
			{
				this._PhotoRatings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunityPhotoApprovals(CommunityPhotoApproval entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_CommunityPhotoApprovals(CommunityPhotoApproval entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_PhotoComments(PhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_PhotoComments(PhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_PhotoNotes(PhotoNote entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_PhotoNotes(PhotoNote entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_PhotoRatings(PhotoRating entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_PhotoRatings(PhotoRating entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PollAnswers")]
	public partial class PollAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _u_username;
		
		private int _pc_id;
		
		private EntityRef<PollChoice> _PollChoice;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    #endregion
		
		public PollAnswer()
		{
			this._PollChoice = default(EntityRef<PollChoice>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					if (this._PollChoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollChoice_PollAnswer", Storage="_PollChoice", ThisKey="pc_id", OtherKey="pc_id", IsForeignKey=true)]
		public PollChoice PollChoice
		{
			get
			{
				return this._PollChoice.Entity;
			}
			set
			{
				PollChoice previousValue = this._PollChoice.Entity;
				if (((previousValue != value) 
							|| (this._PollChoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PollChoice.Entity = null;
						previousValue.PollAnswers.Remove(this);
					}
					this._PollChoice.Entity = value;
					if ((value != null))
					{
						value.PollAnswers.Add(this);
						this._pc_id = value.pc_id;
					}
					else
					{
						this._pc_id = default(int);
					}
					this.SendPropertyChanged("PollChoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PollAnswer", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PollAnswers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PollAnswers.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PollChoices")]
	public partial class PollChoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pc_id;
		
		private int _p_id;
		
		private string _pc_answer;
		
		private EntitySet<PollAnswer> _PollAnswers;
		
		private EntityRef<Poll> _Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onpc_answerChanging(string value);
    partial void Onpc_answerChanged();
    #endregion
		
		public PollChoice()
		{
			this._PollAnswers = new EntitySet<PollAnswer>(new Action<PollAnswer>(this.attach_PollAnswers), new Action<PollAnswer>(this.detach_PollAnswers));
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_answer", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_answer
		{
			get
			{
				return this._pc_answer;
			}
			set
			{
				if ((this._pc_answer != value))
				{
					this.Onpc_answerChanging(value);
					this.SendPropertyChanging();
					this._pc_answer = value;
					this.SendPropertyChanged("pc_answer");
					this.Onpc_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollChoice_PollAnswer", Storage="_PollAnswers", ThisKey="pc_id", OtherKey="pc_id")]
		public EntitySet<PollAnswer> PollAnswers
		{
			get
			{
				return this._PollAnswers;
			}
			set
			{
				this._PollAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollChoice", Storage="_Poll", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollChoices.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollChoices.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.PollChoice = this;
		}
		
		private void detach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.PollChoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Polls")]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _p_title;
		
		private System.DateTime _p_startdate;
		
		private System.DateTime _p_enddate;
		
		private System.DateTime _p_showresultsuntil;
		
		private EntitySet<PollChoice> _PollChoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onp_titleChanging(string value);
    partial void Onp_titleChanged();
    partial void Onp_startdateChanging(System.DateTime value);
    partial void Onp_startdateChanged();
    partial void Onp_enddateChanging(System.DateTime value);
    partial void Onp_enddateChanged();
    partial void Onp_showresultsuntilChanging(System.DateTime value);
    partial void Onp_showresultsuntilChanged();
    #endregion
		
		public Poll()
		{
			this._PollChoices = new EntitySet<PollChoice>(new Action<PollChoice>(this.attach_PollChoices), new Action<PollChoice>(this.detach_PollChoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_title", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string p_title
		{
			get
			{
				return this._p_title;
			}
			set
			{
				if ((this._p_title != value))
				{
					this.Onp_titleChanging(value);
					this.SendPropertyChanging();
					this._p_title = value;
					this.SendPropertyChanged("p_title");
					this.Onp_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_startdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime p_startdate
		{
			get
			{
				return this._p_startdate;
			}
			set
			{
				if ((this._p_startdate != value))
				{
					this.Onp_startdateChanging(value);
					this.SendPropertyChanging();
					this._p_startdate = value;
					this.SendPropertyChanged("p_startdate");
					this.Onp_startdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_enddate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime p_enddate
		{
			get
			{
				return this._p_enddate;
			}
			set
			{
				if ((this._p_enddate != value))
				{
					this.Onp_enddateChanging(value);
					this.SendPropertyChanging();
					this._p_enddate = value;
					this.SendPropertyChanged("p_enddate");
					this.Onp_enddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_showresultsuntil", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime p_showresultsuntil
		{
			get
			{
				return this._p_showresultsuntil;
			}
			set
			{
				if ((this._p_showresultsuntil != value))
				{
					this.Onp_showresultsuntilChanging(value);
					this.SendPropertyChanging();
					this._p_showresultsuntil = value;
					this.SendPropertyChanged("p_showresultsuntil");
					this.Onp_showresultsuntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollChoice", Storage="_PollChoices", ThisKey="p_id", OtherKey="p_id")]
		public EntitySet<PollChoice> PollChoices
		{
			get
			{
				return this._PollChoices;
			}
			set
			{
				this._PollChoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollChoices(PollChoice entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollChoices(PollChoice entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileAnswers")]
	public partial class ProfileAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private int _pq_id;
		
		private string _pa_value;
		
		private bool _pa_approved;
		
		private EntityRef<ProfileQuestion> _ProfileQuestion;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onpq_idChanging(int value);
    partial void Onpq_idChanged();
    partial void Onpa_valueChanging(string value);
    partial void Onpa_valueChanged();
    partial void Onpa_approvedChanging(bool value);
    partial void Onpa_approvedChanged();
    #endregion
		
		public ProfileAnswer()
		{
			this._ProfileQuestion = default(EntityRef<ProfileQuestion>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int pq_id
		{
			get
			{
				return this._pq_id;
			}
			set
			{
				if ((this._pq_id != value))
				{
					if (this._ProfileQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpq_idChanging(value);
					this.SendPropertyChanging();
					this._pq_id = value;
					this.SendPropertyChanged("pq_id");
					this.Onpq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_value", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pa_value
		{
			get
			{
				return this._pa_value;
			}
			set
			{
				if ((this._pa_value != value))
				{
					this.Onpa_valueChanging(value);
					this.SendPropertyChanging();
					this._pa_value = value;
					this.SendPropertyChanged("pa_value");
					this.Onpa_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pa_approved
		{
			get
			{
				return this._pa_approved;
			}
			set
			{
				if ((this._pa_approved != value))
				{
					this.Onpa_approvedChanging(value);
					this.SendPropertyChanging();
					this._pa_approved = value;
					this.SendPropertyChanged("pa_approved");
					this.Onpa_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileQuestion_ProfileAnswer", Storage="_ProfileQuestion", ThisKey="pq_id", OtherKey="pq_id", IsForeignKey=true)]
		public ProfileQuestion ProfileQuestion
		{
			get
			{
				return this._ProfileQuestion.Entity;
			}
			set
			{
				ProfileQuestion previousValue = this._ProfileQuestion.Entity;
				if (((previousValue != value) 
							|| (this._ProfileQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileQuestion.Entity = null;
						previousValue.ProfileAnswers.Remove(this);
					}
					this._ProfileQuestion.Entity = value;
					if ((value != null))
					{
						value.ProfileAnswers.Add(this);
						this._pq_id = value.pq_id;
					}
					else
					{
						this._pq_id = default(int);
					}
					this.SendPropertyChanged("ProfileQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileAnswer", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProfileAnswers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProfileAnswers.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileChoices")]
	public partial class ProfileChoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pc_id;
		
		private int _pq_id;
		
		private string _pc_value;
		
		private EntityRef<ProfileQuestion> _ProfileQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpc_idChanging(int value);
    partial void Onpc_idChanged();
    partial void Onpq_idChanging(int value);
    partial void Onpq_idChanged();
    partial void Onpc_valueChanging(string value);
    partial void Onpc_valueChanged();
    #endregion
		
		public ProfileChoice()
		{
			this._ProfileQuestion = default(EntityRef<ProfileQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pc_id
		{
			get
			{
				return this._pc_id;
			}
			set
			{
				if ((this._pc_id != value))
				{
					this.Onpc_idChanging(value);
					this.SendPropertyChanging();
					this._pc_id = value;
					this.SendPropertyChanged("pc_id");
					this.Onpc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pq_id
		{
			get
			{
				return this._pq_id;
			}
			set
			{
				if ((this._pq_id != value))
				{
					if (this._ProfileQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpq_idChanging(value);
					this.SendPropertyChanging();
					this._pq_id = value;
					this.SendPropertyChanged("pq_id");
					this.Onpq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pc_value", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pc_value
		{
			get
			{
				return this._pc_value;
			}
			set
			{
				if ((this._pc_value != value))
				{
					this.Onpc_valueChanging(value);
					this.SendPropertyChanging();
					this._pc_value = value;
					this.SendPropertyChanged("pc_value");
					this.Onpc_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileQuestion_ProfileChoice", Storage="_ProfileQuestion", ThisKey="pq_id", OtherKey="pq_id", IsForeignKey=true)]
		public ProfileQuestion ProfileQuestion
		{
			get
			{
				return this._ProfileQuestion.Entity;
			}
			set
			{
				ProfileQuestion previousValue = this._ProfileQuestion.Entity;
				if (((previousValue != value) 
							|| (this._ProfileQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileQuestion.Entity = null;
						previousValue.ProfileChoices.Remove(this);
					}
					this._ProfileQuestion.Entity = value;
					if ((value != null))
					{
						value.ProfileChoices.Add(this);
						this._pq_id = value.pq_id;
					}
					else
					{
						this._pq_id = default(int);
					}
					this.SendPropertyChanged("ProfileQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileQuestions")]
	public partial class ProfileQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pq_id;
		
		private int _pt_id;
		
		private string _pq_name;
		
		private string _pq_altname;
		
		private string _pq_description;
		
		private string _pq_hint;
		
		private int _pq_edit_style;
		
		private int _pq_show_style;
		
		private int _pq_search_style;
		
		private bool _pq_required;
		
		private int _pq_priority;
		
		private bool _pq_requires_approval;
		
		private bool _pq_visible_male;
		
		private bool _pq_visible_female;
		
		private bool _pq_visible_couple;
		
		private System.Nullable<int> _pq_match_field;
		
		private bool _pq_viewpaidonly;
		
		private bool _pq_editpaidonly;
		
		private System.Nullable<int> _pq_parent_question_id;
		
		private string _pq_parent_question_choices;
		
		private EntitySet<ProfileAnswer> _ProfileAnswers;
		
		private EntitySet<ProfileChoice> _ProfileChoices;
		
		private EntityRef<ProfileTopic> _ProfileTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpq_idChanging(int value);
    partial void Onpq_idChanged();
    partial void Onpt_idChanging(int value);
    partial void Onpt_idChanged();
    partial void Onpq_nameChanging(string value);
    partial void Onpq_nameChanged();
    partial void Onpq_altnameChanging(string value);
    partial void Onpq_altnameChanged();
    partial void Onpq_descriptionChanging(string value);
    partial void Onpq_descriptionChanged();
    partial void Onpq_hintChanging(string value);
    partial void Onpq_hintChanged();
    partial void Onpq_edit_styleChanging(int value);
    partial void Onpq_edit_styleChanged();
    partial void Onpq_show_styleChanging(int value);
    partial void Onpq_show_styleChanged();
    partial void Onpq_search_styleChanging(int value);
    partial void Onpq_search_styleChanged();
    partial void Onpq_requiredChanging(bool value);
    partial void Onpq_requiredChanged();
    partial void Onpq_priorityChanging(int value);
    partial void Onpq_priorityChanged();
    partial void Onpq_requires_approvalChanging(bool value);
    partial void Onpq_requires_approvalChanged();
    partial void Onpq_visible_maleChanging(bool value);
    partial void Onpq_visible_maleChanged();
    partial void Onpq_visible_femaleChanging(bool value);
    partial void Onpq_visible_femaleChanged();
    partial void Onpq_visible_coupleChanging(bool value);
    partial void Onpq_visible_coupleChanged();
    partial void Onpq_match_fieldChanging(System.Nullable<int> value);
    partial void Onpq_match_fieldChanged();
    partial void Onpq_viewpaidonlyChanging(bool value);
    partial void Onpq_viewpaidonlyChanged();
    partial void Onpq_editpaidonlyChanging(bool value);
    partial void Onpq_editpaidonlyChanged();
    partial void Onpq_parent_question_idChanging(System.Nullable<int> value);
    partial void Onpq_parent_question_idChanged();
    partial void Onpq_parent_question_choicesChanging(string value);
    partial void Onpq_parent_question_choicesChanged();
    #endregion
		
		public ProfileQuestion()
		{
			this._ProfileAnswers = new EntitySet<ProfileAnswer>(new Action<ProfileAnswer>(this.attach_ProfileAnswers), new Action<ProfileAnswer>(this.detach_ProfileAnswers));
			this._ProfileChoices = new EntitySet<ProfileChoice>(new Action<ProfileChoice>(this.attach_ProfileChoices), new Action<ProfileChoice>(this.detach_ProfileChoices));
			this._ProfileTopic = default(EntityRef<ProfileTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pq_id
		{
			get
			{
				return this._pq_id;
			}
			set
			{
				if ((this._pq_id != value))
				{
					this.Onpq_idChanging(value);
					this.SendPropertyChanging();
					this._pq_id = value;
					this.SendPropertyChanged("pq_id");
					this.Onpq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pt_id
		{
			get
			{
				return this._pt_id;
			}
			set
			{
				if ((this._pt_id != value))
				{
					if (this._ProfileTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpt_idChanging(value);
					this.SendPropertyChanging();
					this._pt_id = value;
					this.SendPropertyChanged("pt_id");
					this.Onpt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pq_name
		{
			get
			{
				return this._pq_name;
			}
			set
			{
				if ((this._pq_name != value))
				{
					this.Onpq_nameChanging(value);
					this.SendPropertyChanging();
					this._pq_name = value;
					this.SendPropertyChanged("pq_name");
					this.Onpq_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_altname", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pq_altname
		{
			get
			{
				return this._pq_altname;
			}
			set
			{
				if ((this._pq_altname != value))
				{
					this.Onpq_altnameChanging(value);
					this.SendPropertyChanging();
					this._pq_altname = value;
					this.SendPropertyChanged("pq_altname");
					this.Onpq_altnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pq_description
		{
			get
			{
				return this._pq_description;
			}
			set
			{
				if ((this._pq_description != value))
				{
					this.Onpq_descriptionChanging(value);
					this.SendPropertyChanging();
					this._pq_description = value;
					this.SendPropertyChanged("pq_description");
					this.Onpq_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_hint", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pq_hint
		{
			get
			{
				return this._pq_hint;
			}
			set
			{
				if ((this._pq_hint != value))
				{
					this.Onpq_hintChanging(value);
					this.SendPropertyChanging();
					this._pq_hint = value;
					this.SendPropertyChanged("pq_hint");
					this.Onpq_hintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_edit_style", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pq_edit_style
		{
			get
			{
				return this._pq_edit_style;
			}
			set
			{
				if ((this._pq_edit_style != value))
				{
					this.Onpq_edit_styleChanging(value);
					this.SendPropertyChanging();
					this._pq_edit_style = value;
					this.SendPropertyChanged("pq_edit_style");
					this.Onpq_edit_styleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_show_style", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pq_show_style
		{
			get
			{
				return this._pq_show_style;
			}
			set
			{
				if ((this._pq_show_style != value))
				{
					this.Onpq_show_styleChanging(value);
					this.SendPropertyChanging();
					this._pq_show_style = value;
					this.SendPropertyChanged("pq_show_style");
					this.Onpq_show_styleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_search_style", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pq_search_style
		{
			get
			{
				return this._pq_search_style;
			}
			set
			{
				if ((this._pq_search_style != value))
				{
					this.Onpq_search_styleChanging(value);
					this.SendPropertyChanging();
					this._pq_search_style = value;
					this.SendPropertyChanged("pq_search_style");
					this.Onpq_search_styleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_required", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_required
		{
			get
			{
				return this._pq_required;
			}
			set
			{
				if ((this._pq_required != value))
				{
					this.Onpq_requiredChanging(value);
					this.SendPropertyChanging();
					this._pq_required = value;
					this.SendPropertyChanged("pq_required");
					this.Onpq_requiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_priority", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pq_priority
		{
			get
			{
				return this._pq_priority;
			}
			set
			{
				if ((this._pq_priority != value))
				{
					this.Onpq_priorityChanging(value);
					this.SendPropertyChanging();
					this._pq_priority = value;
					this.SendPropertyChanged("pq_priority");
					this.Onpq_priorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_requires_approval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_requires_approval
		{
			get
			{
				return this._pq_requires_approval;
			}
			set
			{
				if ((this._pq_requires_approval != value))
				{
					this.Onpq_requires_approvalChanging(value);
					this.SendPropertyChanging();
					this._pq_requires_approval = value;
					this.SendPropertyChanged("pq_requires_approval");
					this.Onpq_requires_approvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_visible_male", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_visible_male
		{
			get
			{
				return this._pq_visible_male;
			}
			set
			{
				if ((this._pq_visible_male != value))
				{
					this.Onpq_visible_maleChanging(value);
					this.SendPropertyChanging();
					this._pq_visible_male = value;
					this.SendPropertyChanged("pq_visible_male");
					this.Onpq_visible_maleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_visible_female", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_visible_female
		{
			get
			{
				return this._pq_visible_female;
			}
			set
			{
				if ((this._pq_visible_female != value))
				{
					this.Onpq_visible_femaleChanging(value);
					this.SendPropertyChanging();
					this._pq_visible_female = value;
					this.SendPropertyChanged("pq_visible_female");
					this.Onpq_visible_femaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_visible_couple", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_visible_couple
		{
			get
			{
				return this._pq_visible_couple;
			}
			set
			{
				if ((this._pq_visible_couple != value))
				{
					this.Onpq_visible_coupleChanging(value);
					this.SendPropertyChanging();
					this._pq_visible_couple = value;
					this.SendPropertyChanged("pq_visible_couple");
					this.Onpq_visible_coupleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_match_field", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pq_match_field
		{
			get
			{
				return this._pq_match_field;
			}
			set
			{
				if ((this._pq_match_field != value))
				{
					this.Onpq_match_fieldChanging(value);
					this.SendPropertyChanging();
					this._pq_match_field = value;
					this.SendPropertyChanged("pq_match_field");
					this.Onpq_match_fieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_viewpaidonly", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_viewpaidonly
		{
			get
			{
				return this._pq_viewpaidonly;
			}
			set
			{
				if ((this._pq_viewpaidonly != value))
				{
					this.Onpq_viewpaidonlyChanging(value);
					this.SendPropertyChanging();
					this._pq_viewpaidonly = value;
					this.SendPropertyChanged("pq_viewpaidonly");
					this.Onpq_viewpaidonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_editpaidonly", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool pq_editpaidonly
		{
			get
			{
				return this._pq_editpaidonly;
			}
			set
			{
				if ((this._pq_editpaidonly != value))
				{
					this.Onpq_editpaidonlyChanging(value);
					this.SendPropertyChanging();
					this._pq_editpaidonly = value;
					this.SendPropertyChanged("pq_editpaidonly");
					this.Onpq_editpaidonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_parent_question_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> pq_parent_question_id
		{
			get
			{
				return this._pq_parent_question_id;
			}
			set
			{
				if ((this._pq_parent_question_id != value))
				{
					this.Onpq_parent_question_idChanging(value);
					this.SendPropertyChanging();
					this._pq_parent_question_id = value;
					this.SendPropertyChanged("pq_parent_question_id");
					this.Onpq_parent_question_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pq_parent_question_choices", DbType="NVarChar(3000)", UpdateCheck=UpdateCheck.Never)]
		public string pq_parent_question_choices
		{
			get
			{
				return this._pq_parent_question_choices;
			}
			set
			{
				if ((this._pq_parent_question_choices != value))
				{
					this.Onpq_parent_question_choicesChanging(value);
					this.SendPropertyChanging();
					this._pq_parent_question_choices = value;
					this.SendPropertyChanged("pq_parent_question_choices");
					this.Onpq_parent_question_choicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileQuestion_ProfileAnswer", Storage="_ProfileAnswers", ThisKey="pq_id", OtherKey="pq_id")]
		public EntitySet<ProfileAnswer> ProfileAnswers
		{
			get
			{
				return this._ProfileAnswers;
			}
			set
			{
				this._ProfileAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileQuestion_ProfileChoice", Storage="_ProfileChoices", ThisKey="pq_id", OtherKey="pq_id")]
		public EntitySet<ProfileChoice> ProfileChoices
		{
			get
			{
				return this._ProfileChoices;
			}
			set
			{
				this._ProfileChoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileTopic_ProfileQuestion", Storage="_ProfileTopic", ThisKey="pt_id", OtherKey="pt_id", IsForeignKey=true)]
		public ProfileTopic ProfileTopic
		{
			get
			{
				return this._ProfileTopic.Entity;
			}
			set
			{
				ProfileTopic previousValue = this._ProfileTopic.Entity;
				if (((previousValue != value) 
							|| (this._ProfileTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileTopic.Entity = null;
						previousValue.ProfileQuestions.Remove(this);
					}
					this._ProfileTopic.Entity = value;
					if ((value != null))
					{
						value.ProfileQuestions.Add(this);
						this._pt_id = value.pt_id;
					}
					else
					{
						this._pt_id = default(int);
					}
					this.SendPropertyChanged("ProfileTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProfileAnswers(ProfileAnswer entity)
		{
			this.SendPropertyChanging();
			entity.ProfileQuestion = this;
		}
		
		private void detach_ProfileAnswers(ProfileAnswer entity)
		{
			this.SendPropertyChanging();
			entity.ProfileQuestion = null;
		}
		
		private void attach_ProfileChoices(ProfileChoice entity)
		{
			this.SendPropertyChanging();
			entity.ProfileQuestion = this;
		}
		
		private void detach_ProfileChoices(ProfileChoice entity)
		{
			this.SendPropertyChanging();
			entity.ProfileQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileTopics")]
	public partial class ProfileTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pt_id;
		
		private string _pt_name;
		
		private int _pt_priority;
		
		private int _pt_editcolumns;
		
		private int _pt_viewcolumns;
		
		private EntitySet<ProfileQuestion> _ProfileQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpt_idChanging(int value);
    partial void Onpt_idChanged();
    partial void Onpt_nameChanging(string value);
    partial void Onpt_nameChanged();
    partial void Onpt_priorityChanging(int value);
    partial void Onpt_priorityChanged();
    partial void Onpt_editcolumnsChanging(int value);
    partial void Onpt_editcolumnsChanged();
    partial void Onpt_viewcolumnsChanging(int value);
    partial void Onpt_viewcolumnsChanged();
    #endregion
		
		public ProfileTopic()
		{
			this._ProfileQuestions = new EntitySet<ProfileQuestion>(new Action<ProfileQuestion>(this.attach_ProfileQuestions), new Action<ProfileQuestion>(this.detach_ProfileQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int pt_id
		{
			get
			{
				return this._pt_id;
			}
			set
			{
				if ((this._pt_id != value))
				{
					this.Onpt_idChanging(value);
					this.SendPropertyChanging();
					this._pt_id = value;
					this.SendPropertyChanged("pt_id");
					this.Onpt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pt_name
		{
			get
			{
				return this._pt_name;
			}
			set
			{
				if ((this._pt_name != value))
				{
					this.Onpt_nameChanging(value);
					this.SendPropertyChanging();
					this._pt_name = value;
					this.SendPropertyChanged("pt_name");
					this.Onpt_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_priority", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pt_priority
		{
			get
			{
				return this._pt_priority;
			}
			set
			{
				if ((this._pt_priority != value))
				{
					this.Onpt_priorityChanging(value);
					this.SendPropertyChanging();
					this._pt_priority = value;
					this.SendPropertyChanged("pt_priority");
					this.Onpt_priorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_editcolumns", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pt_editcolumns
		{
			get
			{
				return this._pt_editcolumns;
			}
			set
			{
				if ((this._pt_editcolumns != value))
				{
					this.Onpt_editcolumnsChanging(value);
					this.SendPropertyChanging();
					this._pt_editcolumns = value;
					this.SendPropertyChanged("pt_editcolumns");
					this.Onpt_editcolumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_viewcolumns", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int pt_viewcolumns
		{
			get
			{
				return this._pt_viewcolumns;
			}
			set
			{
				if ((this._pt_viewcolumns != value))
				{
					this.Onpt_viewcolumnsChanging(value);
					this.SendPropertyChanging();
					this._pt_viewcolumns = value;
					this.SendPropertyChanged("pt_viewcolumns");
					this.Onpt_viewcolumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileTopic_ProfileQuestion", Storage="_ProfileQuestions", ThisKey="pt_id", OtherKey="pt_id")]
		public EntitySet<ProfileQuestion> ProfileQuestions
		{
			get
			{
				return this._ProfileQuestions;
			}
			set
			{
				this._ProfileQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProfileQuestions(ProfileQuestion entity)
		{
			this.SendPropertyChanging();
			entity.ProfileTopic = this;
		}
		
		private void detach_ProfileQuestions(ProfileQuestion entity)
		{
			this.SendPropertyChanging();
			entity.ProfileTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileViews")]
	public partial class ProfileView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pv_viewer;
		
		private string _pv_viewed;
		
		private System.DateTime _pv_timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpv_viewerChanging(string value);
    partial void Onpv_viewerChanged();
    partial void Onpv_viewedChanging(string value);
    partial void Onpv_viewedChanged();
    partial void Onpv_timestampChanging(System.DateTime value);
    partial void Onpv_timestampChanged();
    #endregion
		
		public ProfileView()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pv_viewer", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pv_viewer
		{
			get
			{
				return this._pv_viewer;
			}
			set
			{
				if ((this._pv_viewer != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpv_viewerChanging(value);
					this.SendPropertyChanging();
					this._pv_viewer = value;
					this.SendPropertyChanged("pv_viewer");
					this.Onpv_viewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pv_viewed", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string pv_viewed
		{
			get
			{
				return this._pv_viewed;
			}
			set
			{
				if ((this._pv_viewed != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpv_viewedChanging(value);
					this.SendPropertyChanging();
					this._pv_viewed = value;
					this.SendPropertyChanged("pv_viewed");
					this.Onpv_viewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pv_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime pv_timestamp
		{
			get
			{
				return this._pv_timestamp;
			}
			set
			{
				if ((this._pv_timestamp != value))
				{
					this.Onpv_timestampChanging(value);
					this.SendPropertyChanging();
					this._pv_timestamp = value;
					this.SendPropertyChanged("pv_timestamp");
					this.Onpv_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileView", Storage="_User", ThisKey="pv_viewer", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProfileViews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProfileViews.Add(this);
						this._pv_viewer = value.u_username;
					}
					else
					{
						this._pv_viewer = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileView1", Storage="_User1", ThisKey="pv_viewed", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ProfileViews1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ProfileViews1.Add(this);
						this._pv_viewed = value.u_username;
					}
					else
					{
						this._pv_viewed = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ratings")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _r_fromusername;
		
		private string _r_tousername;
		
		private int _r_rating;
		
		private System.DateTime _r_timestamp;
		
		private string _r_ip;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onr_fromusernameChanging(string value);
    partial void Onr_fromusernameChanged();
    partial void Onr_tousernameChanging(string value);
    partial void Onr_tousernameChanged();
    partial void Onr_ratingChanging(int value);
    partial void Onr_ratingChanged();
    partial void Onr_timestampChanging(System.DateTime value);
    partial void Onr_timestampChanged();
    partial void Onr_ipChanging(string value);
    partial void Onr_ipChanged();
    #endregion
		
		public Rating()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_fromusername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string r_fromusername
		{
			get
			{
				return this._r_fromusername;
			}
			set
			{
				if ((this._r_fromusername != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onr_fromusernameChanging(value);
					this.SendPropertyChanging();
					this._r_fromusername = value;
					this.SendPropertyChanged("r_fromusername");
					this.Onr_fromusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_tousername", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string r_tousername
		{
			get
			{
				return this._r_tousername;
			}
			set
			{
				if ((this._r_tousername != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onr_tousernameChanging(value);
					this.SendPropertyChanging();
					this._r_tousername = value;
					this.SendPropertyChanged("r_tousername");
					this.Onr_tousernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_rating", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int r_rating
		{
			get
			{
				return this._r_rating;
			}
			set
			{
				if ((this._r_rating != value))
				{
					this.Onr_ratingChanging(value);
					this.SendPropertyChanging();
					this._r_rating = value;
					this.SendPropertyChanged("r_rating");
					this.Onr_ratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime r_timestamp
		{
			get
			{
				return this._r_timestamp;
			}
			set
			{
				if ((this._r_timestamp != value))
				{
					this.Onr_timestampChanging(value);
					this.SendPropertyChanging();
					this._r_timestamp = value;
					this.SendPropertyChanged("r_timestamp");
					this.Onr_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_ip", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string r_ip
		{
			get
			{
				return this._r_ip;
			}
			set
			{
				if ((this._r_ip != value))
				{
					this.Onr_ipChanging(value);
					this.SendPropertyChanging();
					this._r_ip = value;
					this.SendPropertyChanged("r_ip");
					this.Onr_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating", Storage="_User", ThisKey="r_fromusername", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._r_fromusername = value.u_username;
					}
					else
					{
						this._r_fromusername = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating1", Storage="_User1", ThisKey="r_tousername", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Ratings1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Ratings1.Add(this);
						this._r_tousername = value.u_username;
					}
					else
					{
						this._r_tousername = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Relationships")]
	public partial class Relationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _r_id;
		
		private string _u_username;
		
		private string _r_username;
		
		private int _r_type;
		
		private System.Nullable<int> _r_pendingtype;
		
		private bool _r_accepted;
		
		private System.DateTime _r_timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onr_idChanging(int value);
    partial void Onr_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onr_usernameChanging(string value);
    partial void Onr_usernameChanged();
    partial void Onr_typeChanging(int value);
    partial void Onr_typeChanged();
    partial void Onr_pendingtypeChanging(System.Nullable<int> value);
    partial void Onr_pendingtypeChanged();
    partial void Onr_acceptedChanging(bool value);
    partial void Onr_acceptedChanged();
    partial void Onr_timestampChanging(System.DateTime value);
    partial void Onr_timestampChanged();
    #endregion
		
		public Relationship()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int r_id
		{
			get
			{
				return this._r_id;
			}
			set
			{
				if ((this._r_id != value))
				{
					this.Onr_idChanging(value);
					this.SendPropertyChanging();
					this._r_id = value;
					this.SendPropertyChanged("r_id");
					this.Onr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_username", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string r_username
		{
			get
			{
				return this._r_username;
			}
			set
			{
				if ((this._r_username != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onr_usernameChanging(value);
					this.SendPropertyChanging();
					this._r_username = value;
					this.SendPropertyChanged("r_username");
					this.Onr_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int r_type
		{
			get
			{
				return this._r_type;
			}
			set
			{
				if ((this._r_type != value))
				{
					this.Onr_typeChanging(value);
					this.SendPropertyChanging();
					this._r_type = value;
					this.SendPropertyChanged("r_type");
					this.Onr_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_pendingtype", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> r_pendingtype
		{
			get
			{
				return this._r_pendingtype;
			}
			set
			{
				if ((this._r_pendingtype != value))
				{
					this.Onr_pendingtypeChanging(value);
					this.SendPropertyChanging();
					this._r_pendingtype = value;
					this.SendPropertyChanged("r_pendingtype");
					this.Onr_pendingtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_accepted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool r_accepted
		{
			get
			{
				return this._r_accepted;
			}
			set
			{
				if ((this._r_accepted != value))
				{
					this.Onr_acceptedChanging(value);
					this.SendPropertyChanging();
					this._r_accepted = value;
					this.SendPropertyChanged("r_accepted");
					this.Onr_acceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime r_timestamp
		{
			get
			{
				return this._r_timestamp;
			}
			set
			{
				if ((this._r_timestamp != value))
				{
					this.Onr_timestampChanging(value);
					this.SendPropertyChanging();
					this._r_timestamp = value;
					this.SendPropertyChanged("r_timestamp");
					this.Onr_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Relationships.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Relationships.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship1", Storage="_User1", ThisKey="r_username", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Relationships1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Relationships1.Add(this);
						this._r_username = value.u_username;
					}
					else
					{
						this._r_username = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SavedSearches")]
	public partial class SavedSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ss_id;
		
		private string _u_username;
		
		private string _ss_name;
		
		private int _ss_gender;
		
		private string _ss_country;
		
		private string _ss_state;
		
		private string _ss_zip;
		
		private string _ss_city;
		
		private int _ss_agefrom;
		
		private int _ss_ageto;
		
		private bool _ss_photoreq;
		
		private string _ss_choiceids;
		
		private bool _ss_emailmatches;
		
		private System.Nullable<System.DateTime> _ss_nextemaildate;
		
		private int _ss_emailfrequency;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onss_idChanging(int value);
    partial void Onss_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onss_nameChanging(string value);
    partial void Onss_nameChanged();
    partial void Onss_genderChanging(int value);
    partial void Onss_genderChanged();
    partial void Onss_countryChanging(string value);
    partial void Onss_countryChanged();
    partial void Onss_stateChanging(string value);
    partial void Onss_stateChanged();
    partial void Onss_zipChanging(string value);
    partial void Onss_zipChanged();
    partial void Onss_cityChanging(string value);
    partial void Onss_cityChanged();
    partial void Onss_agefromChanging(int value);
    partial void Onss_agefromChanged();
    partial void Onss_agetoChanging(int value);
    partial void Onss_agetoChanged();
    partial void Onss_photoreqChanging(bool value);
    partial void Onss_photoreqChanged();
    partial void Onss_choiceidsChanging(string value);
    partial void Onss_choiceidsChanged();
    partial void Onss_emailmatchesChanging(bool value);
    partial void Onss_emailmatchesChanged();
    partial void Onss_nextemaildateChanging(System.Nullable<System.DateTime> value);
    partial void Onss_nextemaildateChanged();
    partial void Onss_emailfrequencyChanging(int value);
    partial void Onss_emailfrequencyChanged();
    #endregion
		
		public SavedSearch()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ss_id
		{
			get
			{
				return this._ss_id;
			}
			set
			{
				if ((this._ss_id != value))
				{
					this.Onss_idChanging(value);
					this.SendPropertyChanging();
					this._ss_id = value;
					this.SendPropertyChanged("ss_id");
					this.Onss_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_name
		{
			get
			{
				return this._ss_name;
			}
			set
			{
				if ((this._ss_name != value))
				{
					this.Onss_nameChanging(value);
					this.SendPropertyChanging();
					this._ss_name = value;
					this.SendPropertyChanged("ss_name");
					this.Onss_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_gender", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ss_gender
		{
			get
			{
				return this._ss_gender;
			}
			set
			{
				if ((this._ss_gender != value))
				{
					this.Onss_genderChanging(value);
					this.SendPropertyChanging();
					this._ss_gender = value;
					this.SendPropertyChanged("ss_gender");
					this.Onss_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_country", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_country
		{
			get
			{
				return this._ss_country;
			}
			set
			{
				if ((this._ss_country != value))
				{
					this.Onss_countryChanging(value);
					this.SendPropertyChanging();
					this._ss_country = value;
					this.SendPropertyChanged("ss_country");
					this.Onss_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_state", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_state
		{
			get
			{
				return this._ss_state;
			}
			set
			{
				if ((this._ss_state != value))
				{
					this.Onss_stateChanging(value);
					this.SendPropertyChanging();
					this._ss_state = value;
					this.SendPropertyChanged("ss_state");
					this.Onss_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_zip", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_zip
		{
			get
			{
				return this._ss_zip;
			}
			set
			{
				if ((this._ss_zip != value))
				{
					this.Onss_zipChanging(value);
					this.SendPropertyChanging();
					this._ss_zip = value;
					this.SendPropertyChanged("ss_zip");
					this.Onss_zipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_city", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_city
		{
			get
			{
				return this._ss_city;
			}
			set
			{
				if ((this._ss_city != value))
				{
					this.Onss_cityChanging(value);
					this.SendPropertyChanging();
					this._ss_city = value;
					this.SendPropertyChanged("ss_city");
					this.Onss_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_agefrom", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ss_agefrom
		{
			get
			{
				return this._ss_agefrom;
			}
			set
			{
				if ((this._ss_agefrom != value))
				{
					this.Onss_agefromChanging(value);
					this.SendPropertyChanging();
					this._ss_agefrom = value;
					this.SendPropertyChanged("ss_agefrom");
					this.Onss_agefromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_ageto", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ss_ageto
		{
			get
			{
				return this._ss_ageto;
			}
			set
			{
				if ((this._ss_ageto != value))
				{
					this.Onss_agetoChanging(value);
					this.SendPropertyChanging();
					this._ss_ageto = value;
					this.SendPropertyChanged("ss_ageto");
					this.Onss_agetoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_photoreq", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ss_photoreq
		{
			get
			{
				return this._ss_photoreq;
			}
			set
			{
				if ((this._ss_photoreq != value))
				{
					this.Onss_photoreqChanging(value);
					this.SendPropertyChanging();
					this._ss_photoreq = value;
					this.SendPropertyChanged("ss_photoreq");
					this.Onss_photoreqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_choiceids", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ss_choiceids
		{
			get
			{
				return this._ss_choiceids;
			}
			set
			{
				if ((this._ss_choiceids != value))
				{
					this.Onss_choiceidsChanging(value);
					this.SendPropertyChanging();
					this._ss_choiceids = value;
					this.SendPropertyChanged("ss_choiceids");
					this.Onss_choiceidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_emailmatches", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ss_emailmatches
		{
			get
			{
				return this._ss_emailmatches;
			}
			set
			{
				if ((this._ss_emailmatches != value))
				{
					this.Onss_emailmatchesChanging(value);
					this.SendPropertyChanging();
					this._ss_emailmatches = value;
					this.SendPropertyChanged("ss_emailmatches");
					this.Onss_emailmatchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_nextemaildate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ss_nextemaildate
		{
			get
			{
				return this._ss_nextemaildate;
			}
			set
			{
				if ((this._ss_nextemaildate != value))
				{
					this.Onss_nextemaildateChanging(value);
					this.SendPropertyChanging();
					this._ss_nextemaildate = value;
					this.SendPropertyChanged("ss_nextemaildate");
					this.Onss_nextemaildateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss_emailfrequency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ss_emailfrequency
		{
			get
			{
				return this._ss_emailfrequency;
			}
			set
			{
				if ((this._ss_emailfrequency != value))
				{
					this.Onss_emailfrequencyChanging(value);
					this.SendPropertyChanging();
					this._ss_emailfrequency = value;
					this.SendPropertyChanged("ss_emailfrequency");
					this.Onss_emailfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SavedSearch", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SavedSearches.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SavedSearches.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _s_key;
		
		private string _s_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ons_keyChanging(string value);
    partial void Ons_keyChanged();
    partial void Ons_valueChanging(string value);
    partial void Ons_valueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_key", DbType="VarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string s_key
		{
			get
			{
				return this._s_key;
			}
			set
			{
				if ((this._s_key != value))
				{
					this.Ons_keyChanging(value);
					this.SendPropertyChanging();
					this._s_key = value;
					this.SendPropertyChanged("s_key");
					this.Ons_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string s_value
		{
			get
			{
				return this._s_value;
			}
			set
			{
				if ((this._s_value != value))
				{
					this.Ons_valueChanging(value);
					this.SendPropertyChanging();
					this._s_value = value;
					this.SendPropertyChanged("s_value");
					this.Ons_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Subscriptions")]
	public partial class Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _s_id;
		
		private string _u_username;
		
		private int _p_id;
		
		private System.DateTime _s_order_date;
		
		private System.DateTime _s_renew_date;
		
		private bool _s_confirmed;
		
		private bool _s_cancelled;
		
		private bool _s_cancellation_requested;
		
		private string _s_paymentprocessor;
		
		private string _s_custom;
		
		private EntityRef<BillingPlan> _BillingPlan;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ons_idChanging(int value);
    partial void Ons_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Ons_order_dateChanging(System.DateTime value);
    partial void Ons_order_dateChanged();
    partial void Ons_renew_dateChanging(System.DateTime value);
    partial void Ons_renew_dateChanged();
    partial void Ons_confirmedChanging(bool value);
    partial void Ons_confirmedChanged();
    partial void Ons_cancelledChanging(bool value);
    partial void Ons_cancelledChanged();
    partial void Ons_cancellation_requestedChanging(bool value);
    partial void Ons_cancellation_requestedChanged();
    partial void Ons_paymentprocessorChanging(string value);
    partial void Ons_paymentprocessorChanged();
    partial void Ons_customChanging(string value);
    partial void Ons_customChanged();
    #endregion
		
		public Subscription()
		{
			this._BillingPlan = default(EntityRef<BillingPlan>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int s_id
		{
			get
			{
				return this._s_id;
			}
			set
			{
				if ((this._s_id != value))
				{
					this.Ons_idChanging(value);
					this.SendPropertyChanging();
					this._s_id = value;
					this.SendPropertyChanged("s_id");
					this.Ons_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					if (this._BillingPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_order_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime s_order_date
		{
			get
			{
				return this._s_order_date;
			}
			set
			{
				if ((this._s_order_date != value))
				{
					this.Ons_order_dateChanging(value);
					this.SendPropertyChanging();
					this._s_order_date = value;
					this.SendPropertyChanged("s_order_date");
					this.Ons_order_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_renew_date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime s_renew_date
		{
			get
			{
				return this._s_renew_date;
			}
			set
			{
				if ((this._s_renew_date != value))
				{
					this.Ons_renew_dateChanging(value);
					this.SendPropertyChanging();
					this._s_renew_date = value;
					this.SendPropertyChanged("s_renew_date");
					this.Ons_renew_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_confirmed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool s_confirmed
		{
			get
			{
				return this._s_confirmed;
			}
			set
			{
				if ((this._s_confirmed != value))
				{
					this.Ons_confirmedChanging(value);
					this.SendPropertyChanging();
					this._s_confirmed = value;
					this.SendPropertyChanged("s_confirmed");
					this.Ons_confirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_cancelled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool s_cancelled
		{
			get
			{
				return this._s_cancelled;
			}
			set
			{
				if ((this._s_cancelled != value))
				{
					this.Ons_cancelledChanging(value);
					this.SendPropertyChanging();
					this._s_cancelled = value;
					this.SendPropertyChanged("s_cancelled");
					this.Ons_cancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_cancellation_requested", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool s_cancellation_requested
		{
			get
			{
				return this._s_cancellation_requested;
			}
			set
			{
				if ((this._s_cancellation_requested != value))
				{
					this.Ons_cancellation_requestedChanging(value);
					this.SendPropertyChanging();
					this._s_cancellation_requested = value;
					this.SendPropertyChanged("s_cancellation_requested");
					this.Ons_cancellation_requestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_paymentprocessor", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string s_paymentprocessor
		{
			get
			{
				return this._s_paymentprocessor;
			}
			set
			{
				if ((this._s_paymentprocessor != value))
				{
					this.Ons_paymentprocessorChanging(value);
					this.SendPropertyChanging();
					this._s_paymentprocessor = value;
					this.SendPropertyChanged("s_paymentprocessor");
					this.Ons_paymentprocessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_custom", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string s_custom
		{
			get
			{
				return this._s_custom;
			}
			set
			{
				if ((this._s_custom != value))
				{
					this.Ons_customChanging(value);
					this.SendPropertyChanging();
					this._s_custom = value;
					this.SendPropertyChanged("s_custom");
					this.Ons_customChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingPlan_Subscription", Storage="_BillingPlan", ThisKey="p_id", OtherKey="p_id", IsForeignKey=true)]
		public BillingPlan BillingPlan
		{
			get
			{
				return this._BillingPlan.Entity;
			}
			set
			{
				BillingPlan previousValue = this._BillingPlan.Entity;
				if (((previousValue != value) 
							|| (this._BillingPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingPlan.Entity = null;
						previousValue.Subscriptions.Remove(this);
					}
					this._BillingPlan.Entity = value;
					if ((value != null))
					{
						value.Subscriptions.Add(this);
						this._p_id = value.p_id;
					}
					else
					{
						this._p_id = default(int);
					}
					this.SendPropertyChanged("BillingPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Subscription", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Subscriptions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Subscriptions.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Templates")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _t_key;
		
		private string _t_value;
		
		private string _t_description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ont_keyChanging(string value);
    partial void Ont_keyChanged();
    partial void Ont_valueChanging(string value);
    partial void Ont_valueChanged();
    partial void Ont_descriptionChanging(string value);
    partial void Ont_descriptionChanged();
    #endregion
		
		public Template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_key", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string t_key
		{
			get
			{
				return this._t_key;
			}
			set
			{
				if ((this._t_key != value))
				{
					this.Ont_keyChanging(value);
					this.SendPropertyChanging();
					this._t_key = value;
					this.SendPropertyChanged("t_key");
					this.Ont_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string t_value
		{
			get
			{
				return this._t_value;
			}
			set
			{
				if ((this._t_value != value))
				{
					this.Ont_valueChanging(value);
					this.SendPropertyChanging();
					this._t_value = value;
					this.SendPropertyChanged("t_value");
					this.Ont_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string t_description
		{
			get
			{
				return this._t_description;
			}
			set
			{
				if ((this._t_description != value))
				{
					this.Ont_descriptionChanging(value);
					this.SendPropertyChanging();
					this._t_description = value;
					this.SendPropertyChanged("t_description");
					this.Ont_descriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Translations")]
	public partial class Translation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _l_id;
		
		private string _t_key;
		
		private int _t_adminpanel;
		
		private string _t_value;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    partial void Ont_keyChanging(string value);
    partial void Ont_keyChanged();
    partial void Ont_adminpanelChanging(int value);
    partial void Ont_adminpanelChanged();
    partial void Ont_valueChanging(string value);
    partial void Ont_valueChanged();
    #endregion
		
		public Translation()
		{
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_key", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string t_key
		{
			get
			{
				return this._t_key;
			}
			set
			{
				if ((this._t_key != value))
				{
					this.Ont_keyChanging(value);
					this.SendPropertyChanging();
					this._t_key = value;
					this.SendPropertyChanged("t_key");
					this.Ont_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_adminpanel", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int t_adminpanel
		{
			get
			{
				return this._t_adminpanel;
			}
			set
			{
				if ((this._t_adminpanel != value))
				{
					this.Ont_adminpanelChanging(value);
					this.SendPropertyChanging();
					this._t_adminpanel = value;
					this.SendPropertyChanged("t_adminpanel");
					this.Ont_adminpanelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_value", DbType="NVarChar(400) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string t_value
		{
			get
			{
				return this._t_value;
			}
			set
			{
				if ((this._t_value != value))
				{
					this.Ont_valueChanging(value);
					this.SendPropertyChanging();
					this._t_value = value;
					this.SendPropertyChanged("t_value");
					this.Ont_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Translation", Storage="_Language", ThisKey="l_id", OtherKey="l_id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Translations.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Translations.Add(this);
						this._l_id = value.l_id;
					}
					else
					{
						this._l_id = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="UnlockedSections")]
	public partial class UnlockedSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _us_id;
		
		private string _u_username;
		
		private int _us_type;
		
		private string _us_targetusername;
		
		private System.Nullable<int> _us_targetid;
		
		private System.DateTime _us_unlockeduntil;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onus_idChanging(int value);
    partial void Onus_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onus_typeChanging(int value);
    partial void Onus_typeChanged();
    partial void Onus_targetusernameChanging(string value);
    partial void Onus_targetusernameChanged();
    partial void Onus_targetidChanging(System.Nullable<int> value);
    partial void Onus_targetidChanged();
    partial void Onus_unlockeduntilChanging(System.DateTime value);
    partial void Onus_unlockeduntilChanged();
    #endregion
		
		public UnlockedSection()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int us_id
		{
			get
			{
				return this._us_id;
			}
			set
			{
				if ((this._us_id != value))
				{
					this.Onus_idChanging(value);
					this.SendPropertyChanging();
					this._us_id = value;
					this.SendPropertyChanged("us_id");
					this.Onus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int us_type
		{
			get
			{
				return this._us_type;
			}
			set
			{
				if ((this._us_type != value))
				{
					this.Onus_typeChanging(value);
					this.SendPropertyChanging();
					this._us_type = value;
					this.SendPropertyChanged("us_type");
					this.Onus_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us_targetusername", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string us_targetusername
		{
			get
			{
				return this._us_targetusername;
			}
			set
			{
				if ((this._us_targetusername != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onus_targetusernameChanging(value);
					this.SendPropertyChanging();
					this._us_targetusername = value;
					this.SendPropertyChanged("us_targetusername");
					this.Onus_targetusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us_targetid", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> us_targetid
		{
			get
			{
				return this._us_targetid;
			}
			set
			{
				if ((this._us_targetid != value))
				{
					this.Onus_targetidChanging(value);
					this.SendPropertyChanging();
					this._us_targetid = value;
					this.SendPropertyChanged("us_targetid");
					this.Onus_targetidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us_unlockeduntil", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime us_unlockeduntil
		{
			get
			{
				return this._us_unlockeduntil;
			}
			set
			{
				if ((this._us_unlockeduntil != value))
				{
					this.Onus_unlockeduntilChanging(value);
					this.SendPropertyChanging();
					this._us_unlockeduntil = value;
					this.SendPropertyChanged("us_unlockeduntil");
					this.Onus_unlockeduntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UnlockedSection", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UnlockedSections.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UnlockedSections.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UnlockedSection1", Storage="_User1", ThisKey="us_targetusername", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UnlockedSections1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UnlockedSections1.Add(this);
						this._us_targetusername = value.u_username;
					}
					else
					{
						this._us_targetusername = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="UserLevels")]
	public partial class UserLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ul_id;
		
		private string _ul_name;
		
		private int _ul_minscore;
		
		private string _ul_restrictions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onul_idChanging(int value);
    partial void Onul_idChanged();
    partial void Onul_nameChanging(string value);
    partial void Onul_nameChanged();
    partial void Onul_minscoreChanging(int value);
    partial void Onul_minscoreChanged();
    partial void Onul_restrictionsChanging(string value);
    partial void Onul_restrictionsChanged();
    #endregion
		
		public UserLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ul_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ul_id
		{
			get
			{
				return this._ul_id;
			}
			set
			{
				if ((this._ul_id != value))
				{
					this.Onul_idChanging(value);
					this.SendPropertyChanging();
					this._ul_id = value;
					this.SendPropertyChanged("ul_id");
					this.Onul_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ul_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ul_name
		{
			get
			{
				return this._ul_name;
			}
			set
			{
				if ((this._ul_name != value))
				{
					this.Onul_nameChanging(value);
					this.SendPropertyChanging();
					this._ul_name = value;
					this.SendPropertyChanged("ul_name");
					this.Onul_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ul_minscore", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ul_minscore
		{
			get
			{
				return this._ul_minscore;
			}
			set
			{
				if ((this._ul_minscore != value))
				{
					this.Onul_minscoreChanging(value);
					this.SendPropertyChanging();
					this._ul_minscore = value;
					this.SendPropertyChanged("ul_minscore");
					this.Onul_minscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ul_restrictions", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ul_restrictions
		{
			get
			{
				return this._ul_restrictions;
			}
			set
			{
				if ((this._ul_restrictions != value))
				{
					this.Onul_restrictionsChanging(value);
					this.SendPropertyChanging();
					this._ul_restrictions = value;
					this.SendPropertyChanged("ul_restrictions");
					this.Onul_restrictionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _u_password;
		
		private string _u_email;
		
		private string _u_name;
		
		private int _u_gender;
		
		private System.DateTime _u_birthdate;
		
		private System.Nullable<System.DateTime> _u_birthdate2;
		
		private System.DateTime _u_usersince;
		
		private bool _u_active;
		
		private bool _u_smsconfirmed;
		
		private System.DateTime _u_prevlogin;
		
		private System.DateTime _u_lastlogin;
		
		private int _u_logincount;
		
		private System.DateTime _u_lastonline;
		
		private int _u_profileviews;
		
		private bool _u_profilevisible;
		
		private bool _u_receiveemails;
		
		private string _u_country;
		
		private string _u_state;
		
		private string _u_zip_code;
		
		private string _u_city;
		
		private bool _u_deleted;
		
		private bool _u_paid_member;
		
		private string _u_signup_ip;
		
		private System.Nullable<int> _u_interested_in;
		
		private string _u_lastsessionid;
		
		private int _u_message_verifications_left;
		
		private bool _u_verifiedbyadmin;
		
		private int _l_id;
		
		private string _u_incoming_messages_restrictions;
		
		private string _u_billingdetails;
		
		private string _u_invited_by;
		
		private System.Nullable<int> _a_id;
		
		private long _u_options;
		
		private string _u_deletereason;
		
		private System.Nullable<double> _u_longitude;
		
		private System.Nullable<double> _u_latitude;
		
		private int _u_score;
		
		private string _u_tokenuniqueid;
		
		private string _u_personalizationinfo;
		
		private int _u_credits;
		
		private int _u_moderationscore;
		
		private bool _u_spamsuspected;
		
		private bool _u_face_control_approved;
		
		private string _u_profile_skin;
		
		private string _u_status_text;
		
		private bool _u_featuredmember;
		
		private string _u_myspaceid;
		
		private System.Nullable<long> _u_facebookid;
		
		private System.Nullable<long> _u_eventssettings;
		
		private EntitySet<AdComment> _AdComments;
		
		private EntitySet<Ad> _Ads;
		
		private EntitySet<AffiliateCommission> _AffiliateCommissions;
		
		private EntitySet<AudioAccess> _AudioAccesses;
		
		private EntitySet<AudioAccess> _AudioAccesses1;
		
		private EntitySet<AudioUpload> _AudioUploads;
		
		private EntitySet<BlockedUser> _BlockedUsers;
		
		private EntitySet<BlockedUser> _BlockedUsers1;
		
		private EntitySet<BlogPostComment> _BlogPostComments;
		
		private EntitySet<Blog> _Blogs;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Comment> _Comments1;
		
		private EntitySet<CommunityPhotoApproval> _CommunityPhotoApprovals;
		
		private EntitySet<CommunityProfileApproval> _CommunityProfileApprovals;
		
		private EntitySet<CommunityProfileApproval> _CommunityProfileApprovals1;
		
		private EntitySet<CreditsHistory> _CreditsHistories;
		
		private EntitySet<Ecard> _Ecards;
		
		private EntitySet<Ecard> _Ecards1;
		
		private EntitySet<EstablishedCommunication> _EstablishedCommunications;
		
		private EntitySet<EstablishedCommunication> _EstablishedCommunications1;
		
		private EntitySet<EventComment> _EventComments;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<Favourite> _Favourites;
		
		private EntitySet<Favourite> _Favourites1;
		
		private EntitySet<Friend> _Friends;
		
		private EntitySet<Friend> _Friends1;
		
		private EntitySet<GroupBan> _GroupBans;
		
		private EntitySet<GroupEvent> _GroupEvents;
		
		private EntitySet<GroupEventsAttender> _GroupEventsAttenders;
		
		private EntitySet<GroupEventsComment> _GroupEventsComments;
		
		private EntitySet<GroupMember> _GroupMembers;
		
		private EntitySet<GroupPhoto> _GroupPhotos;
		
		private EntitySet<GroupPollsAnswer> _GroupPollsAnswers;
		
		private EntitySet<GroupPost> _GroupPosts;
		
		private EntitySet<GroupTopic> _GroupTopics;
		
		private EntitySet<GroupTopicSubscription> _GroupTopicSubscriptions;
		
		private EntitySet<Interest> _Interests;
		
		private EntitySet<Interest> _Interests1;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Message> _Messages1;
		
		private EntitySet<MessagesSandbox> _MessagesSandboxes;
		
		private EntitySet<PaymentHistory> _PaymentHistories;
		
		private EntitySet<PhotoAccess> _PhotoAccesses;
		
		private EntitySet<PhotoAccess> _PhotoAccesses1;
		
		private EntitySet<PhotoAlbum> _PhotoAlbums;
		
		private EntitySet<PhotoComment> _PhotoComments;
		
		private EntitySet<PhotoContestRank> _PhotoContestRanks;
		
		private EntitySet<PhotoContestVote> _PhotoContestVotes;
		
		private EntitySet<PhotoNote> _PhotoNotes;
		
		private EntitySet<PhotoRating> _PhotoRatings;
		
		private EntitySet<PollAnswer> _PollAnswers;
		
		private EntitySet<ProfileAnswer> _ProfileAnswers;
		
		private EntitySet<ProfileView> _ProfileViews;
		
		private EntitySet<ProfileView> _ProfileViews1;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<Rating> _Ratings1;
		
		private EntitySet<Relationship> _Relationships;
		
		private EntitySet<Relationship> _Relationships1;
		
		private EntitySet<SavedSearch> _SavedSearches;
		
		private EntitySet<Subscription> _Subscriptions;
		
		private EntitySet<UnlockedSection> _UnlockedSections;
		
		private EntitySet<UnlockedSection> _UnlockedSections1;
		
		private EntitySet<UserScoresLog> _UserScoresLogs;
		
		private EntitySet<VerifiedUser> _VerifiedUsers;
		
		private EntitySet<VerifiedUser> _VerifiedUsers1;
		
		private EntitySet<VideoAccess> _VideoAccesses;
		
		private EntitySet<VideoAccess> _VideoAccesses1;
		
		private EntitySet<VideoEmbed> _VideoEmbeds;
		
		private EntityRef<TwitterCredential> _TwitterCredential;
		
		private EntityRef<FacebookCredential> _FacebookCredential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onu_passwordChanging(string value);
    partial void Onu_passwordChanged();
    partial void Onu_emailChanging(string value);
    partial void Onu_emailChanged();
    partial void Onu_nameChanging(string value);
    partial void Onu_nameChanged();
    partial void Onu_genderChanging(int value);
    partial void Onu_genderChanged();
    partial void Onu_birthdateChanging(System.DateTime value);
    partial void Onu_birthdateChanged();
    partial void Onu_birthdate2Changing(System.Nullable<System.DateTime> value);
    partial void Onu_birthdate2Changed();
    partial void Onu_usersinceChanging(System.DateTime value);
    partial void Onu_usersinceChanged();
    partial void Onu_activeChanging(bool value);
    partial void Onu_activeChanged();
    partial void Onu_smsconfirmedChanging(bool value);
    partial void Onu_smsconfirmedChanged();
    partial void Onu_prevloginChanging(System.DateTime value);
    partial void Onu_prevloginChanged();
    partial void Onu_lastloginChanging(System.DateTime value);
    partial void Onu_lastloginChanged();
    partial void Onu_logincountChanging(int value);
    partial void Onu_logincountChanged();
    partial void Onu_lastonlineChanging(System.DateTime value);
    partial void Onu_lastonlineChanged();
    partial void Onu_profileviewsChanging(int value);
    partial void Onu_profileviewsChanged();
    partial void Onu_profilevisibleChanging(bool value);
    partial void Onu_profilevisibleChanged();
    partial void Onu_receiveemailsChanging(bool value);
    partial void Onu_receiveemailsChanged();
    partial void Onu_countryChanging(string value);
    partial void Onu_countryChanged();
    partial void Onu_stateChanging(string value);
    partial void Onu_stateChanged();
    partial void Onu_zip_codeChanging(string value);
    partial void Onu_zip_codeChanged();
    partial void Onu_cityChanging(string value);
    partial void Onu_cityChanged();
    partial void Onu_deletedChanging(bool value);
    partial void Onu_deletedChanged();
    partial void Onu_paid_memberChanging(bool value);
    partial void Onu_paid_memberChanged();
    partial void Onu_signup_ipChanging(string value);
    partial void Onu_signup_ipChanged();
    partial void Onu_interested_inChanging(System.Nullable<int> value);
    partial void Onu_interested_inChanged();
    partial void Onu_lastsessionidChanging(string value);
    partial void Onu_lastsessionidChanged();
    partial void Onu_message_verifications_leftChanging(int value);
    partial void Onu_message_verifications_leftChanged();
    partial void Onu_verifiedbyadminChanging(bool value);
    partial void Onu_verifiedbyadminChanged();
    partial void Onl_idChanging(int value);
    partial void Onl_idChanged();
    partial void Onu_incoming_messages_restrictionsChanging(string value);
    partial void Onu_incoming_messages_restrictionsChanged();
    partial void Onu_billingdetailsChanging(string value);
    partial void Onu_billingdetailsChanged();
    partial void Onu_invited_byChanging(string value);
    partial void Onu_invited_byChanged();
    partial void Ona_idChanging(System.Nullable<int> value);
    partial void Ona_idChanged();
    partial void Onu_optionsChanging(long value);
    partial void Onu_optionsChanged();
    partial void Onu_deletereasonChanging(string value);
    partial void Onu_deletereasonChanged();
    partial void Onu_longitudeChanging(System.Nullable<double> value);
    partial void Onu_longitudeChanged();
    partial void Onu_latitudeChanging(System.Nullable<double> value);
    partial void Onu_latitudeChanged();
    partial void Onu_scoreChanging(int value);
    partial void Onu_scoreChanged();
    partial void Onu_tokenuniqueidChanging(string value);
    partial void Onu_tokenuniqueidChanged();
    partial void Onu_personalizationinfoChanging(string value);
    partial void Onu_personalizationinfoChanged();
    partial void Onu_creditsChanging(int value);
    partial void Onu_creditsChanged();
    partial void Onu_moderationscoreChanging(int value);
    partial void Onu_moderationscoreChanged();
    partial void Onu_spamsuspectedChanging(bool value);
    partial void Onu_spamsuspectedChanged();
    partial void Onu_face_control_approvedChanging(bool value);
    partial void Onu_face_control_approvedChanged();
    partial void Onu_profile_skinChanging(string value);
    partial void Onu_profile_skinChanged();
    partial void Onu_status_textChanging(string value);
    partial void Onu_status_textChanged();
    partial void Onu_featuredmemberChanging(bool value);
    partial void Onu_featuredmemberChanged();
    partial void Onu_myspaceidChanging(string value);
    partial void Onu_myspaceidChanged();
    partial void Onu_facebookidChanging(System.Nullable<long> value);
    partial void Onu_facebookidChanged();
    partial void Onu_eventssettingsChanging(System.Nullable<long> value);
    partial void Onu_eventssettingsChanged();
    #endregion
		
		public User()
		{
			this._AdComments = new EntitySet<AdComment>(new Action<AdComment>(this.attach_AdComments), new Action<AdComment>(this.detach_AdComments));
			this._Ads = new EntitySet<Ad>(new Action<Ad>(this.attach_Ads), new Action<Ad>(this.detach_Ads));
			this._AffiliateCommissions = new EntitySet<AffiliateCommission>(new Action<AffiliateCommission>(this.attach_AffiliateCommissions), new Action<AffiliateCommission>(this.detach_AffiliateCommissions));
			this._AudioAccesses = new EntitySet<AudioAccess>(new Action<AudioAccess>(this.attach_AudioAccesses), new Action<AudioAccess>(this.detach_AudioAccesses));
			this._AudioAccesses1 = new EntitySet<AudioAccess>(new Action<AudioAccess>(this.attach_AudioAccesses1), new Action<AudioAccess>(this.detach_AudioAccesses1));
			this._AudioUploads = new EntitySet<AudioUpload>(new Action<AudioUpload>(this.attach_AudioUploads), new Action<AudioUpload>(this.detach_AudioUploads));
			this._BlockedUsers = new EntitySet<BlockedUser>(new Action<BlockedUser>(this.attach_BlockedUsers), new Action<BlockedUser>(this.detach_BlockedUsers));
			this._BlockedUsers1 = new EntitySet<BlockedUser>(new Action<BlockedUser>(this.attach_BlockedUsers1), new Action<BlockedUser>(this.detach_BlockedUsers1));
			this._BlogPostComments = new EntitySet<BlogPostComment>(new Action<BlogPostComment>(this.attach_BlogPostComments), new Action<BlogPostComment>(this.detach_BlogPostComments));
			this._Blogs = new EntitySet<Blog>(new Action<Blog>(this.attach_Blogs), new Action<Blog>(this.detach_Blogs));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Comments1 = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments1), new Action<Comment>(this.detach_Comments1));
			this._CommunityPhotoApprovals = new EntitySet<CommunityPhotoApproval>(new Action<CommunityPhotoApproval>(this.attach_CommunityPhotoApprovals), new Action<CommunityPhotoApproval>(this.detach_CommunityPhotoApprovals));
			this._CommunityProfileApprovals = new EntitySet<CommunityProfileApproval>(new Action<CommunityProfileApproval>(this.attach_CommunityProfileApprovals), new Action<CommunityProfileApproval>(this.detach_CommunityProfileApprovals));
			this._CommunityProfileApprovals1 = new EntitySet<CommunityProfileApproval>(new Action<CommunityProfileApproval>(this.attach_CommunityProfileApprovals1), new Action<CommunityProfileApproval>(this.detach_CommunityProfileApprovals1));
			this._CreditsHistories = new EntitySet<CreditsHistory>(new Action<CreditsHistory>(this.attach_CreditsHistories), new Action<CreditsHistory>(this.detach_CreditsHistories));
			this._Ecards = new EntitySet<Ecard>(new Action<Ecard>(this.attach_Ecards), new Action<Ecard>(this.detach_Ecards));
			this._Ecards1 = new EntitySet<Ecard>(new Action<Ecard>(this.attach_Ecards1), new Action<Ecard>(this.detach_Ecards1));
			this._EstablishedCommunications = new EntitySet<EstablishedCommunication>(new Action<EstablishedCommunication>(this.attach_EstablishedCommunications), new Action<EstablishedCommunication>(this.detach_EstablishedCommunications));
			this._EstablishedCommunications1 = new EntitySet<EstablishedCommunication>(new Action<EstablishedCommunication>(this.attach_EstablishedCommunications1), new Action<EstablishedCommunication>(this.detach_EstablishedCommunications1));
			this._EventComments = new EntitySet<EventComment>(new Action<EventComment>(this.attach_EventComments), new Action<EventComment>(this.detach_EventComments));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._Favourites = new EntitySet<Favourite>(new Action<Favourite>(this.attach_Favourites), new Action<Favourite>(this.detach_Favourites));
			this._Favourites1 = new EntitySet<Favourite>(new Action<Favourite>(this.attach_Favourites1), new Action<Favourite>(this.detach_Favourites1));
			this._Friends = new EntitySet<Friend>(new Action<Friend>(this.attach_Friends), new Action<Friend>(this.detach_Friends));
			this._Friends1 = new EntitySet<Friend>(new Action<Friend>(this.attach_Friends1), new Action<Friend>(this.detach_Friends1));
			this._GroupBans = new EntitySet<GroupBan>(new Action<GroupBan>(this.attach_GroupBans), new Action<GroupBan>(this.detach_GroupBans));
			this._GroupEvents = new EntitySet<GroupEvent>(new Action<GroupEvent>(this.attach_GroupEvents), new Action<GroupEvent>(this.detach_GroupEvents));
			this._GroupEventsAttenders = new EntitySet<GroupEventsAttender>(new Action<GroupEventsAttender>(this.attach_GroupEventsAttenders), new Action<GroupEventsAttender>(this.detach_GroupEventsAttenders));
			this._GroupEventsComments = new EntitySet<GroupEventsComment>(new Action<GroupEventsComment>(this.attach_GroupEventsComments), new Action<GroupEventsComment>(this.detach_GroupEventsComments));
			this._GroupMembers = new EntitySet<GroupMember>(new Action<GroupMember>(this.attach_GroupMembers), new Action<GroupMember>(this.detach_GroupMembers));
			this._GroupPhotos = new EntitySet<GroupPhoto>(new Action<GroupPhoto>(this.attach_GroupPhotos), new Action<GroupPhoto>(this.detach_GroupPhotos));
			this._GroupPollsAnswers = new EntitySet<GroupPollsAnswer>(new Action<GroupPollsAnswer>(this.attach_GroupPollsAnswers), new Action<GroupPollsAnswer>(this.detach_GroupPollsAnswers));
			this._GroupPosts = new EntitySet<GroupPost>(new Action<GroupPost>(this.attach_GroupPosts), new Action<GroupPost>(this.detach_GroupPosts));
			this._GroupTopics = new EntitySet<GroupTopic>(new Action<GroupTopic>(this.attach_GroupTopics), new Action<GroupTopic>(this.detach_GroupTopics));
			this._GroupTopicSubscriptions = new EntitySet<GroupTopicSubscription>(new Action<GroupTopicSubscription>(this.attach_GroupTopicSubscriptions), new Action<GroupTopicSubscription>(this.detach_GroupTopicSubscriptions));
			this._Interests = new EntitySet<Interest>(new Action<Interest>(this.attach_Interests), new Action<Interest>(this.detach_Interests));
			this._Interests1 = new EntitySet<Interest>(new Action<Interest>(this.attach_Interests1), new Action<Interest>(this.detach_Interests1));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
			this._MessagesSandboxes = new EntitySet<MessagesSandbox>(new Action<MessagesSandbox>(this.attach_MessagesSandboxes), new Action<MessagesSandbox>(this.detach_MessagesSandboxes));
			this._PaymentHistories = new EntitySet<PaymentHistory>(new Action<PaymentHistory>(this.attach_PaymentHistories), new Action<PaymentHistory>(this.detach_PaymentHistories));
			this._PhotoAccesses = new EntitySet<PhotoAccess>(new Action<PhotoAccess>(this.attach_PhotoAccesses), new Action<PhotoAccess>(this.detach_PhotoAccesses));
			this._PhotoAccesses1 = new EntitySet<PhotoAccess>(new Action<PhotoAccess>(this.attach_PhotoAccesses1), new Action<PhotoAccess>(this.detach_PhotoAccesses1));
			this._PhotoAlbums = new EntitySet<PhotoAlbum>(new Action<PhotoAlbum>(this.attach_PhotoAlbums), new Action<PhotoAlbum>(this.detach_PhotoAlbums));
			this._PhotoComments = new EntitySet<PhotoComment>(new Action<PhotoComment>(this.attach_PhotoComments), new Action<PhotoComment>(this.detach_PhotoComments));
			this._PhotoContestRanks = new EntitySet<PhotoContestRank>(new Action<PhotoContestRank>(this.attach_PhotoContestRanks), new Action<PhotoContestRank>(this.detach_PhotoContestRanks));
			this._PhotoContestVotes = new EntitySet<PhotoContestVote>(new Action<PhotoContestVote>(this.attach_PhotoContestVotes), new Action<PhotoContestVote>(this.detach_PhotoContestVotes));
			this._PhotoNotes = new EntitySet<PhotoNote>(new Action<PhotoNote>(this.attach_PhotoNotes), new Action<PhotoNote>(this.detach_PhotoNotes));
			this._PhotoRatings = new EntitySet<PhotoRating>(new Action<PhotoRating>(this.attach_PhotoRatings), new Action<PhotoRating>(this.detach_PhotoRatings));
			this._PollAnswers = new EntitySet<PollAnswer>(new Action<PollAnswer>(this.attach_PollAnswers), new Action<PollAnswer>(this.detach_PollAnswers));
			this._ProfileAnswers = new EntitySet<ProfileAnswer>(new Action<ProfileAnswer>(this.attach_ProfileAnswers), new Action<ProfileAnswer>(this.detach_ProfileAnswers));
			this._ProfileViews = new EntitySet<ProfileView>(new Action<ProfileView>(this.attach_ProfileViews), new Action<ProfileView>(this.detach_ProfileViews));
			this._ProfileViews1 = new EntitySet<ProfileView>(new Action<ProfileView>(this.attach_ProfileViews1), new Action<ProfileView>(this.detach_ProfileViews1));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._Ratings1 = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings1), new Action<Rating>(this.detach_Ratings1));
			this._Relationships = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships), new Action<Relationship>(this.detach_Relationships));
			this._Relationships1 = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships1), new Action<Relationship>(this.detach_Relationships1));
			this._SavedSearches = new EntitySet<SavedSearch>(new Action<SavedSearch>(this.attach_SavedSearches), new Action<SavedSearch>(this.detach_SavedSearches));
			this._Subscriptions = new EntitySet<Subscription>(new Action<Subscription>(this.attach_Subscriptions), new Action<Subscription>(this.detach_Subscriptions));
			this._UnlockedSections = new EntitySet<UnlockedSection>(new Action<UnlockedSection>(this.attach_UnlockedSections), new Action<UnlockedSection>(this.detach_UnlockedSections));
			this._UnlockedSections1 = new EntitySet<UnlockedSection>(new Action<UnlockedSection>(this.attach_UnlockedSections1), new Action<UnlockedSection>(this.detach_UnlockedSections1));
			this._UserScoresLogs = new EntitySet<UserScoresLog>(new Action<UserScoresLog>(this.attach_UserScoresLogs), new Action<UserScoresLog>(this.detach_UserScoresLogs));
			this._VerifiedUsers = new EntitySet<VerifiedUser>(new Action<VerifiedUser>(this.attach_VerifiedUsers), new Action<VerifiedUser>(this.detach_VerifiedUsers));
			this._VerifiedUsers1 = new EntitySet<VerifiedUser>(new Action<VerifiedUser>(this.attach_VerifiedUsers1), new Action<VerifiedUser>(this.detach_VerifiedUsers1));
			this._VideoAccesses = new EntitySet<VideoAccess>(new Action<VideoAccess>(this.attach_VideoAccesses), new Action<VideoAccess>(this.detach_VideoAccesses));
			this._VideoAccesses1 = new EntitySet<VideoAccess>(new Action<VideoAccess>(this.attach_VideoAccesses1), new Action<VideoAccess>(this.detach_VideoAccesses1));
			this._VideoEmbeds = new EntitySet<VideoEmbed>(new Action<VideoEmbed>(this.attach_VideoEmbeds), new Action<VideoEmbed>(this.detach_VideoEmbeds));
			this._TwitterCredential = default(EntityRef<TwitterCredential>);
			this._FacebookCredential = default(EntityRef<FacebookCredential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_password", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_password
		{
			get
			{
				return this._u_password;
			}
			set
			{
				if ((this._u_password != value))
				{
					this.Onu_passwordChanging(value);
					this.SendPropertyChanging();
					this._u_password = value;
					this.SendPropertyChanged("u_password");
					this.Onu_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_email", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_email
		{
			get
			{
				return this._u_email;
			}
			set
			{
				if ((this._u_email != value))
				{
					this.Onu_emailChanging(value);
					this.SendPropertyChanging();
					this._u_email = value;
					this.SendPropertyChanged("u_email");
					this.Onu_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_name
		{
			get
			{
				return this._u_name;
			}
			set
			{
				if ((this._u_name != value))
				{
					this.Onu_nameChanging(value);
					this.SendPropertyChanging();
					this._u_name = value;
					this.SendPropertyChanged("u_name");
					this.Onu_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_gender", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_gender
		{
			get
			{
				return this._u_gender;
			}
			set
			{
				if ((this._u_gender != value))
				{
					this.Onu_genderChanging(value);
					this.SendPropertyChanging();
					this._u_gender = value;
					this.SendPropertyChanged("u_gender");
					this.Onu_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_birthdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime u_birthdate
		{
			get
			{
				return this._u_birthdate;
			}
			set
			{
				if ((this._u_birthdate != value))
				{
					this.Onu_birthdateChanging(value);
					this.SendPropertyChanging();
					this._u_birthdate = value;
					this.SendPropertyChanged("u_birthdate");
					this.Onu_birthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_birthdate2", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> u_birthdate2
		{
			get
			{
				return this._u_birthdate2;
			}
			set
			{
				if ((this._u_birthdate2 != value))
				{
					this.Onu_birthdate2Changing(value);
					this.SendPropertyChanging();
					this._u_birthdate2 = value;
					this.SendPropertyChanged("u_birthdate2");
					this.Onu_birthdate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_usersince", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime u_usersince
		{
			get
			{
				return this._u_usersince;
			}
			set
			{
				if ((this._u_usersince != value))
				{
					this.Onu_usersinceChanging(value);
					this.SendPropertyChanging();
					this._u_usersince = value;
					this.SendPropertyChanged("u_usersince");
					this.Onu_usersinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_active
		{
			get
			{
				return this._u_active;
			}
			set
			{
				if ((this._u_active != value))
				{
					this.Onu_activeChanging(value);
					this.SendPropertyChanging();
					this._u_active = value;
					this.SendPropertyChanged("u_active");
					this.Onu_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_smsconfirmed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_smsconfirmed
		{
			get
			{
				return this._u_smsconfirmed;
			}
			set
			{
				if ((this._u_smsconfirmed != value))
				{
					this.Onu_smsconfirmedChanging(value);
					this.SendPropertyChanging();
					this._u_smsconfirmed = value;
					this.SendPropertyChanged("u_smsconfirmed");
					this.Onu_smsconfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_prevlogin", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime u_prevlogin
		{
			get
			{
				return this._u_prevlogin;
			}
			set
			{
				if ((this._u_prevlogin != value))
				{
					this.Onu_prevloginChanging(value);
					this.SendPropertyChanging();
					this._u_prevlogin = value;
					this.SendPropertyChanged("u_prevlogin");
					this.Onu_prevloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_lastlogin", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime u_lastlogin
		{
			get
			{
				return this._u_lastlogin;
			}
			set
			{
				if ((this._u_lastlogin != value))
				{
					this.Onu_lastloginChanging(value);
					this.SendPropertyChanging();
					this._u_lastlogin = value;
					this.SendPropertyChanged("u_lastlogin");
					this.Onu_lastloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_logincount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_logincount
		{
			get
			{
				return this._u_logincount;
			}
			set
			{
				if ((this._u_logincount != value))
				{
					this.Onu_logincountChanging(value);
					this.SendPropertyChanging();
					this._u_logincount = value;
					this.SendPropertyChanged("u_logincount");
					this.Onu_logincountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_lastonline", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime u_lastonline
		{
			get
			{
				return this._u_lastonline;
			}
			set
			{
				if ((this._u_lastonline != value))
				{
					this.Onu_lastonlineChanging(value);
					this.SendPropertyChanging();
					this._u_lastonline = value;
					this.SendPropertyChanged("u_lastonline");
					this.Onu_lastonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_profileviews", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_profileviews
		{
			get
			{
				return this._u_profileviews;
			}
			set
			{
				if ((this._u_profileviews != value))
				{
					this.Onu_profileviewsChanging(value);
					this.SendPropertyChanging();
					this._u_profileviews = value;
					this.SendPropertyChanged("u_profileviews");
					this.Onu_profileviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_profilevisible", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_profilevisible
		{
			get
			{
				return this._u_profilevisible;
			}
			set
			{
				if ((this._u_profilevisible != value))
				{
					this.Onu_profilevisibleChanging(value);
					this.SendPropertyChanging();
					this._u_profilevisible = value;
					this.SendPropertyChanged("u_profilevisible");
					this.Onu_profilevisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_receiveemails", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_receiveemails
		{
			get
			{
				return this._u_receiveemails;
			}
			set
			{
				if ((this._u_receiveemails != value))
				{
					this.Onu_receiveemailsChanging(value);
					this.SendPropertyChanging();
					this._u_receiveemails = value;
					this.SendPropertyChanged("u_receiveemails");
					this.Onu_receiveemailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_country", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_country
		{
			get
			{
				return this._u_country;
			}
			set
			{
				if ((this._u_country != value))
				{
					this.Onu_countryChanging(value);
					this.SendPropertyChanging();
					this._u_country = value;
					this.SendPropertyChanged("u_country");
					this.Onu_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_state", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_state
		{
			get
			{
				return this._u_state;
			}
			set
			{
				if ((this._u_state != value))
				{
					this.Onu_stateChanging(value);
					this.SendPropertyChanging();
					this._u_state = value;
					this.SendPropertyChanged("u_state");
					this.Onu_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_zip_code", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_zip_code
		{
			get
			{
				return this._u_zip_code;
			}
			set
			{
				if ((this._u_zip_code != value))
				{
					this.Onu_zip_codeChanging(value);
					this.SendPropertyChanging();
					this._u_zip_code = value;
					this.SendPropertyChanged("u_zip_code");
					this.Onu_zip_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_city
		{
			get
			{
				return this._u_city;
			}
			set
			{
				if ((this._u_city != value))
				{
					this.Onu_cityChanging(value);
					this.SendPropertyChanging();
					this._u_city = value;
					this.SendPropertyChanged("u_city");
					this.Onu_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_deleted
		{
			get
			{
				return this._u_deleted;
			}
			set
			{
				if ((this._u_deleted != value))
				{
					this.Onu_deletedChanging(value);
					this.SendPropertyChanging();
					this._u_deleted = value;
					this.SendPropertyChanged("u_deleted");
					this.Onu_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_paid_member", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_paid_member
		{
			get
			{
				return this._u_paid_member;
			}
			set
			{
				if ((this._u_paid_member != value))
				{
					this.Onu_paid_memberChanging(value);
					this.SendPropertyChanging();
					this._u_paid_member = value;
					this.SendPropertyChanged("u_paid_member");
					this.Onu_paid_memberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_signup_ip", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_signup_ip
		{
			get
			{
				return this._u_signup_ip;
			}
			set
			{
				if ((this._u_signup_ip != value))
				{
					this.Onu_signup_ipChanging(value);
					this.SendPropertyChanging();
					this._u_signup_ip = value;
					this.SendPropertyChanged("u_signup_ip");
					this.Onu_signup_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_interested_in", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> u_interested_in
		{
			get
			{
				return this._u_interested_in;
			}
			set
			{
				if ((this._u_interested_in != value))
				{
					this.Onu_interested_inChanging(value);
					this.SendPropertyChanging();
					this._u_interested_in = value;
					this.SendPropertyChanged("u_interested_in");
					this.Onu_interested_inChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_lastsessionid", DbType="VarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_lastsessionid
		{
			get
			{
				return this._u_lastsessionid;
			}
			set
			{
				if ((this._u_lastsessionid != value))
				{
					this.Onu_lastsessionidChanging(value);
					this.SendPropertyChanging();
					this._u_lastsessionid = value;
					this.SendPropertyChanged("u_lastsessionid");
					this.Onu_lastsessionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_message_verifications_left", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_message_verifications_left
		{
			get
			{
				return this._u_message_verifications_left;
			}
			set
			{
				if ((this._u_message_verifications_left != value))
				{
					this.Onu_message_verifications_leftChanging(value);
					this.SendPropertyChanging();
					this._u_message_verifications_left = value;
					this.SendPropertyChanged("u_message_verifications_left");
					this.Onu_message_verifications_leftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_verifiedbyadmin", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_verifiedbyadmin
		{
			get
			{
				return this._u_verifiedbyadmin;
			}
			set
			{
				if ((this._u_verifiedbyadmin != value))
				{
					this.Onu_verifiedbyadminChanging(value);
					this.SendPropertyChanging();
					this._u_verifiedbyadmin = value;
					this.SendPropertyChanged("u_verifiedbyadmin");
					this.Onu_verifiedbyadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int l_id
		{
			get
			{
				return this._l_id;
			}
			set
			{
				if ((this._l_id != value))
				{
					this.Onl_idChanging(value);
					this.SendPropertyChanging();
					this._l_id = value;
					this.SendPropertyChanged("l_id");
					this.Onl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_incoming_messages_restrictions", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string u_incoming_messages_restrictions
		{
			get
			{
				return this._u_incoming_messages_restrictions;
			}
			set
			{
				if ((this._u_incoming_messages_restrictions != value))
				{
					this.Onu_incoming_messages_restrictionsChanging(value);
					this.SendPropertyChanging();
					this._u_incoming_messages_restrictions = value;
					this.SendPropertyChanged("u_incoming_messages_restrictions");
					this.Onu_incoming_messages_restrictionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_billingdetails", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string u_billingdetails
		{
			get
			{
				return this._u_billingdetails;
			}
			set
			{
				if ((this._u_billingdetails != value))
				{
					this.Onu_billingdetailsChanging(value);
					this.SendPropertyChanging();
					this._u_billingdetails = value;
					this.SendPropertyChanged("u_billingdetails");
					this.Onu_billingdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_invited_by", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string u_invited_by
		{
			get
			{
				return this._u_invited_by;
			}
			set
			{
				if ((this._u_invited_by != value))
				{
					this.Onu_invited_byChanging(value);
					this.SendPropertyChanging();
					this._u_invited_by = value;
					this.SendPropertyChanged("u_invited_by");
					this.Onu_invited_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_options", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long u_options
		{
			get
			{
				return this._u_options;
			}
			set
			{
				if ((this._u_options != value))
				{
					this.Onu_optionsChanging(value);
					this.SendPropertyChanging();
					this._u_options = value;
					this.SendPropertyChanged("u_options");
					this.Onu_optionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_deletereason", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string u_deletereason
		{
			get
			{
				return this._u_deletereason;
			}
			set
			{
				if ((this._u_deletereason != value))
				{
					this.Onu_deletereasonChanging(value);
					this.SendPropertyChanging();
					this._u_deletereason = value;
					this.SendPropertyChanged("u_deletereason");
					this.Onu_deletereasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_longitude", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> u_longitude
		{
			get
			{
				return this._u_longitude;
			}
			set
			{
				if ((this._u_longitude != value))
				{
					this.Onu_longitudeChanging(value);
					this.SendPropertyChanging();
					this._u_longitude = value;
					this.SendPropertyChanged("u_longitude");
					this.Onu_longitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_latitude", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> u_latitude
		{
			get
			{
				return this._u_latitude;
			}
			set
			{
				if ((this._u_latitude != value))
				{
					this.Onu_latitudeChanging(value);
					this.SendPropertyChanging();
					this._u_latitude = value;
					this.SendPropertyChanged("u_latitude");
					this.Onu_latitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_score", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_score
		{
			get
			{
				return this._u_score;
			}
			set
			{
				if ((this._u_score != value))
				{
					this.Onu_scoreChanging(value);
					this.SendPropertyChanging();
					this._u_score = value;
					this.SendPropertyChanged("u_score");
					this.Onu_scoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_tokenuniqueid", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string u_tokenuniqueid
		{
			get
			{
				return this._u_tokenuniqueid;
			}
			set
			{
				if ((this._u_tokenuniqueid != value))
				{
					this.Onu_tokenuniqueidChanging(value);
					this.SendPropertyChanging();
					this._u_tokenuniqueid = value;
					this.SendPropertyChanged("u_tokenuniqueid");
					this.Onu_tokenuniqueidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_personalizationinfo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string u_personalizationinfo
		{
			get
			{
				return this._u_personalizationinfo;
			}
			set
			{
				if ((this._u_personalizationinfo != value))
				{
					this.Onu_personalizationinfoChanging(value);
					this.SendPropertyChanging();
					this._u_personalizationinfo = value;
					this.SendPropertyChanged("u_personalizationinfo");
					this.Onu_personalizationinfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_credits", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_credits
		{
			get
			{
				return this._u_credits;
			}
			set
			{
				if ((this._u_credits != value))
				{
					this.Onu_creditsChanging(value);
					this.SendPropertyChanging();
					this._u_credits = value;
					this.SendPropertyChanged("u_credits");
					this.Onu_creditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_moderationscore", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int u_moderationscore
		{
			get
			{
				return this._u_moderationscore;
			}
			set
			{
				if ((this._u_moderationscore != value))
				{
					this.Onu_moderationscoreChanging(value);
					this.SendPropertyChanging();
					this._u_moderationscore = value;
					this.SendPropertyChanged("u_moderationscore");
					this.Onu_moderationscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_spamsuspected", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_spamsuspected
		{
			get
			{
				return this._u_spamsuspected;
			}
			set
			{
				if ((this._u_spamsuspected != value))
				{
					this.Onu_spamsuspectedChanging(value);
					this.SendPropertyChanging();
					this._u_spamsuspected = value;
					this.SendPropertyChanged("u_spamsuspected");
					this.Onu_spamsuspectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_face_control_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_face_control_approved
		{
			get
			{
				return this._u_face_control_approved;
			}
			set
			{
				if ((this._u_face_control_approved != value))
				{
					this.Onu_face_control_approvedChanging(value);
					this.SendPropertyChanging();
					this._u_face_control_approved = value;
					this.SendPropertyChanged("u_face_control_approved");
					this.Onu_face_control_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_profile_skin", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string u_profile_skin
		{
			get
			{
				return this._u_profile_skin;
			}
			set
			{
				if ((this._u_profile_skin != value))
				{
					this.Onu_profile_skinChanging(value);
					this.SendPropertyChanging();
					this._u_profile_skin = value;
					this.SendPropertyChanged("u_profile_skin");
					this.Onu_profile_skinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_status_text", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string u_status_text
		{
			get
			{
				return this._u_status_text;
			}
			set
			{
				if ((this._u_status_text != value))
				{
					this.Onu_status_textChanging(value);
					this.SendPropertyChanging();
					this._u_status_text = value;
					this.SendPropertyChanged("u_status_text");
					this.Onu_status_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_featuredmember", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool u_featuredmember
		{
			get
			{
				return this._u_featuredmember;
			}
			set
			{
				if ((this._u_featuredmember != value))
				{
					this.Onu_featuredmemberChanging(value);
					this.SendPropertyChanging();
					this._u_featuredmember = value;
					this.SendPropertyChanged("u_featuredmember");
					this.Onu_featuredmemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_myspaceid", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string u_myspaceid
		{
			get
			{
				return this._u_myspaceid;
			}
			set
			{
				if ((this._u_myspaceid != value))
				{
					this.Onu_myspaceidChanging(value);
					this.SendPropertyChanging();
					this._u_myspaceid = value;
					this.SendPropertyChanged("u_myspaceid");
					this.Onu_myspaceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_facebookid", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> u_facebookid
		{
			get
			{
				return this._u_facebookid;
			}
			set
			{
				if ((this._u_facebookid != value))
				{
					this.Onu_facebookidChanging(value);
					this.SendPropertyChanging();
					this._u_facebookid = value;
					this.SendPropertyChanged("u_facebookid");
					this.Onu_facebookidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_eventssettings", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> u_eventssettings
		{
			get
			{
				return this._u_eventssettings;
			}
			set
			{
				if ((this._u_eventssettings != value))
				{
					this.Onu_eventssettingsChanging(value);
					this.SendPropertyChanging();
					this._u_eventssettings = value;
					this.SendPropertyChanged("u_eventssettings");
					this.Onu_eventssettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AdComment", Storage="_AdComments", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<AdComment> AdComments
		{
			get
			{
				return this._AdComments;
			}
			set
			{
				this._AdComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ad", Storage="_Ads", ThisKey="u_username", OtherKey="a_postedby")]
		public EntitySet<Ad> Ads
		{
			get
			{
				return this._Ads;
			}
			set
			{
				this._Ads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AffiliateCommission", Storage="_AffiliateCommissions", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<AffiliateCommission> AffiliateCommissions
		{
			get
			{
				return this._AffiliateCommissions;
			}
			set
			{
				this._AffiliateCommissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioAccess", Storage="_AudioAccesses", ThisKey="u_username", OtherKey="aa_audioowner")]
		public EntitySet<AudioAccess> AudioAccesses
		{
			get
			{
				return this._AudioAccesses;
			}
			set
			{
				this._AudioAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioAccess1", Storage="_AudioAccesses1", ThisKey="u_username", OtherKey="aa_audioviewer")]
		public EntitySet<AudioAccess> AudioAccesses1
		{
			get
			{
				return this._AudioAccesses1;
			}
			set
			{
				this._AudioAccesses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AudioUpload", Storage="_AudioUploads", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<AudioUpload> AudioUploads
		{
			get
			{
				return this._AudioUploads;
			}
			set
			{
				this._AudioUploads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlockedUser", Storage="_BlockedUsers", ThisKey="u_username", OtherKey="bu_userblocker")]
		public EntitySet<BlockedUser> BlockedUsers
		{
			get
			{
				return this._BlockedUsers;
			}
			set
			{
				this._BlockedUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlockedUser1", Storage="_BlockedUsers1", ThisKey="u_username", OtherKey="bu_blockeduser")]
		public EntitySet<BlockedUser> BlockedUsers1
		{
			get
			{
				return this._BlockedUsers1;
			}
			set
			{
				this._BlockedUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlogPostComment", Storage="_BlogPostComments", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<BlogPostComment> BlogPostComments
		{
			get
			{
				return this._BlogPostComments;
			}
			set
			{
				this._BlogPostComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_Blogs", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<Blog> Blogs
		{
			get
			{
				return this._Blogs;
			}
			set
			{
				this._Blogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="u_username", OtherKey="c_from_username")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment1", Storage="_Comments1", ThisKey="u_username", OtherKey="c_to_username")]
		public EntitySet<Comment> Comments1
		{
			get
			{
				return this._Comments1;
			}
			set
			{
				this._Comments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityPhotoApproval", Storage="_CommunityPhotoApprovals", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<CommunityPhotoApproval> CommunityPhotoApprovals
		{
			get
			{
				return this._CommunityPhotoApprovals;
			}
			set
			{
				this._CommunityPhotoApprovals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityProfileApproval", Storage="_CommunityProfileApprovals", ThisKey="u_username", OtherKey="cpa_approvedby")]
		public EntitySet<CommunityProfileApproval> CommunityProfileApprovals
		{
			get
			{
				return this._CommunityProfileApprovals;
			}
			set
			{
				this._CommunityProfileApprovals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityProfileApproval1", Storage="_CommunityProfileApprovals1", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<CommunityProfileApproval> CommunityProfileApprovals1
		{
			get
			{
				return this._CommunityProfileApprovals1;
			}
			set
			{
				this._CommunityProfileApprovals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CreditsHistory", Storage="_CreditsHistories", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<CreditsHistory> CreditsHistories
		{
			get
			{
				return this._CreditsHistories;
			}
			set
			{
				this._CreditsHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ecard", Storage="_Ecards", ThisKey="u_username", OtherKey="ec_from_username")]
		public EntitySet<Ecard> Ecards
		{
			get
			{
				return this._Ecards;
			}
			set
			{
				this._Ecards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ecard1", Storage="_Ecards1", ThisKey="u_username", OtherKey="ec_to_username")]
		public EntitySet<Ecard> Ecards1
		{
			get
			{
				return this._Ecards1;
			}
			set
			{
				this._Ecards1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstablishedCommunication", Storage="_EstablishedCommunications", ThisKey="u_username", OtherKey="ec_from_username")]
		public EntitySet<EstablishedCommunication> EstablishedCommunications
		{
			get
			{
				return this._EstablishedCommunications;
			}
			set
			{
				this._EstablishedCommunications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstablishedCommunication1", Storage="_EstablishedCommunications1", ThisKey="u_username", OtherKey="ec_to_username")]
		public EntitySet<EstablishedCommunication> EstablishedCommunications1
		{
			get
			{
				return this._EstablishedCommunications1;
			}
			set
			{
				this._EstablishedCommunications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventComment", Storage="_EventComments", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<EventComment> EventComments
		{
			get
			{
				return this._EventComments;
			}
			set
			{
				this._EventComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_Events", ThisKey="u_username", OtherKey="e_fromusername")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Favourite", Storage="_Favourites", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<Favourite> Favourites
		{
			get
			{
				return this._Favourites;
			}
			set
			{
				this._Favourites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Favourite1", Storage="_Favourites1", ThisKey="u_username", OtherKey="f_username")]
		public EntitySet<Favourite> Favourites1
		{
			get
			{
				return this._Favourites1;
			}
			set
			{
				this._Favourites1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Friend", Storage="_Friends", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<Friend> Friends
		{
			get
			{
				return this._Friends;
			}
			set
			{
				this._Friends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Friend1", Storage="_Friends1", ThisKey="u_username", OtherKey="f_username")]
		public EntitySet<Friend> Friends1
		{
			get
			{
				return this._Friends1;
			}
			set
			{
				this._Friends1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupBan", Storage="_GroupBans", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupBan> GroupBans
		{
			get
			{
				return this._GroupBans;
			}
			set
			{
				this._GroupBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEvent", Storage="_GroupEvents", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupEvent> GroupEvents
		{
			get
			{
				return this._GroupEvents;
			}
			set
			{
				this._GroupEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEventsAttender", Storage="_GroupEventsAttenders", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupEventsAttender> GroupEventsAttenders
		{
			get
			{
				return this._GroupEventsAttenders;
			}
			set
			{
				this._GroupEventsAttenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupEventsComment", Storage="_GroupEventsComments", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupEventsComment> GroupEventsComments
		{
			get
			{
				return this._GroupEventsComments;
			}
			set
			{
				this._GroupEventsComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupMember", Storage="_GroupMembers", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupMember> GroupMembers
		{
			get
			{
				return this._GroupMembers;
			}
			set
			{
				this._GroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPhoto", Storage="_GroupPhotos", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupPhoto> GroupPhotos
		{
			get
			{
				return this._GroupPhotos;
			}
			set
			{
				this._GroupPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPollsAnswer", Storage="_GroupPollsAnswers", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupPollsAnswer> GroupPollsAnswers
		{
			get
			{
				return this._GroupPollsAnswers;
			}
			set
			{
				this._GroupPollsAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupPost", Storage="_GroupPosts", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupPost> GroupPosts
		{
			get
			{
				return this._GroupPosts;
			}
			set
			{
				this._GroupPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupTopic", Storage="_GroupTopics", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupTopic> GroupTopics
		{
			get
			{
				return this._GroupTopics;
			}
			set
			{
				this._GroupTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupTopicSubscription", Storage="_GroupTopicSubscriptions", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<GroupTopicSubscription> GroupTopicSubscriptions
		{
			get
			{
				return this._GroupTopicSubscriptions;
			}
			set
			{
				this._GroupTopicSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Interest", Storage="_Interests", ThisKey="u_username", OtherKey="i_from_username")]
		public EntitySet<Interest> Interests
		{
			get
			{
				return this._Interests;
			}
			set
			{
				this._Interests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Interest1", Storage="_Interests1", ThisKey="u_username", OtherKey="i_to_username")]
		public EntitySet<Interest> Interests1
		{
			get
			{
				return this._Interests1;
			}
			set
			{
				this._Interests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="u_username", OtherKey="m_from_username")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_Messages1", ThisKey="u_username", OtherKey="m_to_username")]
		public EntitySet<Message> Messages1
		{
			get
			{
				return this._Messages1;
			}
			set
			{
				this._Messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MessagesSandbox", Storage="_MessagesSandboxes", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<MessagesSandbox> MessagesSandboxes
		{
			get
			{
				return this._MessagesSandboxes;
			}
			set
			{
				this._MessagesSandboxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PaymentHistory", Storage="_PaymentHistories", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PaymentHistory> PaymentHistories
		{
			get
			{
				return this._PaymentHistories;
			}
			set
			{
				this._PaymentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAccess", Storage="_PhotoAccesses", ThisKey="u_username", OtherKey="pa_photoowner")]
		public EntitySet<PhotoAccess> PhotoAccesses
		{
			get
			{
				return this._PhotoAccesses;
			}
			set
			{
				this._PhotoAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAccess1", Storage="_PhotoAccesses1", ThisKey="u_username", OtherKey="pa_photoviewer")]
		public EntitySet<PhotoAccess> PhotoAccesses1
		{
			get
			{
				return this._PhotoAccesses1;
			}
			set
			{
				this._PhotoAccesses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoAlbum", Storage="_PhotoAlbums", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PhotoAlbum> PhotoAlbums
		{
			get
			{
				return this._PhotoAlbums;
			}
			set
			{
				this._PhotoAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoComment", Storage="_PhotoComments", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PhotoComment> PhotoComments
		{
			get
			{
				return this._PhotoComments;
			}
			set
			{
				this._PhotoComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoContestRank", Storage="_PhotoContestRanks", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PhotoContestRank> PhotoContestRanks
		{
			get
			{
				return this._PhotoContestRanks;
			}
			set
			{
				this._PhotoContestRanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoContestVote", Storage="_PhotoContestVotes", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PhotoContestVote> PhotoContestVotes
		{
			get
			{
				return this._PhotoContestVotes;
			}
			set
			{
				this._PhotoContestVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoNote", Storage="_PhotoNotes", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PhotoNote> PhotoNotes
		{
			get
			{
				return this._PhotoNotes;
			}
			set
			{
				this._PhotoNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhotoRating", Storage="_PhotoRatings", ThisKey="u_username", OtherKey="pr_fromusername")]
		public EntitySet<PhotoRating> PhotoRatings
		{
			get
			{
				return this._PhotoRatings;
			}
			set
			{
				this._PhotoRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PollAnswer", Storage="_PollAnswers", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<PollAnswer> PollAnswers
		{
			get
			{
				return this._PollAnswers;
			}
			set
			{
				this._PollAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileAnswer", Storage="_ProfileAnswers", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<ProfileAnswer> ProfileAnswers
		{
			get
			{
				return this._ProfileAnswers;
			}
			set
			{
				this._ProfileAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileView", Storage="_ProfileViews", ThisKey="u_username", OtherKey="pv_viewer")]
		public EntitySet<ProfileView> ProfileViews
		{
			get
			{
				return this._ProfileViews;
			}
			set
			{
				this._ProfileViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProfileView1", Storage="_ProfileViews1", ThisKey="u_username", OtherKey="pv_viewed")]
		public EntitySet<ProfileView> ProfileViews1
		{
			get
			{
				return this._ProfileViews1;
			}
			set
			{
				this._ProfileViews1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating", Storage="_Ratings", ThisKey="u_username", OtherKey="r_fromusername")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating1", Storage="_Ratings1", ThisKey="u_username", OtherKey="r_tousername")]
		public EntitySet<Rating> Ratings1
		{
			get
			{
				return this._Ratings1;
			}
			set
			{
				this._Ratings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship", Storage="_Relationships", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<Relationship> Relationships
		{
			get
			{
				return this._Relationships;
			}
			set
			{
				this._Relationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship1", Storage="_Relationships1", ThisKey="u_username", OtherKey="r_username")]
		public EntitySet<Relationship> Relationships1
		{
			get
			{
				return this._Relationships1;
			}
			set
			{
				this._Relationships1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SavedSearch", Storage="_SavedSearches", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<SavedSearch> SavedSearches
		{
			get
			{
				return this._SavedSearches;
			}
			set
			{
				this._SavedSearches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Subscription", Storage="_Subscriptions", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<Subscription> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				this._Subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UnlockedSection", Storage="_UnlockedSections", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<UnlockedSection> UnlockedSections
		{
			get
			{
				return this._UnlockedSections;
			}
			set
			{
				this._UnlockedSections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UnlockedSection1", Storage="_UnlockedSections1", ThisKey="u_username", OtherKey="us_targetusername")]
		public EntitySet<UnlockedSection> UnlockedSections1
		{
			get
			{
				return this._UnlockedSections1;
			}
			set
			{
				this._UnlockedSections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserScoresLog", Storage="_UserScoresLogs", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<UserScoresLog> UserScoresLogs
		{
			get
			{
				return this._UserScoresLogs;
			}
			set
			{
				this._UserScoresLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VerifiedUser", Storage="_VerifiedUsers", ThisKey="u_username", OtherKey="vu_verifiedby")]
		public EntitySet<VerifiedUser> VerifiedUsers
		{
			get
			{
				return this._VerifiedUsers;
			}
			set
			{
				this._VerifiedUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VerifiedUser1", Storage="_VerifiedUsers1", ThisKey="u_username", OtherKey="vu_verifieduser")]
		public EntitySet<VerifiedUser> VerifiedUsers1
		{
			get
			{
				return this._VerifiedUsers1;
			}
			set
			{
				this._VerifiedUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoAccess", Storage="_VideoAccesses", ThisKey="u_username", OtherKey="va_videoowner")]
		public EntitySet<VideoAccess> VideoAccesses
		{
			get
			{
				return this._VideoAccesses;
			}
			set
			{
				this._VideoAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoAccess1", Storage="_VideoAccesses1", ThisKey="u_username", OtherKey="va_videoviewer")]
		public EntitySet<VideoAccess> VideoAccesses1
		{
			get
			{
				return this._VideoAccesses1;
			}
			set
			{
				this._VideoAccesses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoEmbed", Storage="_VideoEmbeds", ThisKey="u_username", OtherKey="u_username")]
		public EntitySet<VideoEmbed> VideoEmbeds
		{
			get
			{
				return this._VideoEmbeds;
			}
			set
			{
				this._VideoEmbeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TwitterCredential", Storage="_TwitterCredential", ThisKey="u_username", OtherKey="u_username", IsUnique=true, IsForeignKey=false)]
		public TwitterCredential TwitterCredential
		{
			get
			{
				return this._TwitterCredential.Entity;
			}
			set
			{
				TwitterCredential previousValue = this._TwitterCredential.Entity;
				if (((previousValue != value) 
							|| (this._TwitterCredential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TwitterCredential.Entity = null;
						previousValue.User = null;
					}
					this._TwitterCredential.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("TwitterCredential");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FacebookCredential", Storage="_FacebookCredential", ThisKey="u_username", OtherKey="u_username", IsUnique=true, IsForeignKey=false)]
		public FacebookCredential FacebookCredential
		{
			get
			{
				return this._FacebookCredential.Entity;
			}
			set
			{
				FacebookCredential previousValue = this._FacebookCredential.Entity;
				if (((previousValue != value) 
							|| (this._FacebookCredential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookCredential.Entity = null;
						previousValue.User = null;
					}
					this._FacebookCredential.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("FacebookCredential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdComments(AdComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AdComments(AdComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AffiliateCommissions(AffiliateCommission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AudioAccesses(AudioAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AudioAccesses(AudioAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AudioAccesses1(AudioAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_AudioAccesses1(AudioAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_AudioUploads(AudioUpload entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AudioUploads(AudioUpload entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BlockedUsers(BlockedUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BlockedUsers(BlockedUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BlockedUsers1(BlockedUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_BlockedUsers1(BlockedUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_BlogPostComments(BlogPostComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BlogPostComments(BlogPostComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Blogs(Blog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Blogs(Blog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments1(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Comments1(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CommunityPhotoApprovals(CommunityPhotoApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommunityPhotoApprovals(CommunityPhotoApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommunityProfileApprovals(CommunityProfileApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommunityProfileApprovals(CommunityProfileApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommunityProfileApprovals1(CommunityProfileApproval entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CommunityProfileApprovals1(CommunityProfileApproval entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CreditsHistories(CreditsHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CreditsHistories(CreditsHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ecards(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ecards(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ecards1(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Ecards1(Ecard entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_EstablishedCommunications(EstablishedCommunication entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EstablishedCommunications(EstablishedCommunication entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EstablishedCommunications1(EstablishedCommunication entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_EstablishedCommunications1(EstablishedCommunication entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_EventComments(EventComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EventComments(EventComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Favourites(Favourite entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Favourites(Favourite entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Favourites1(Favourite entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Favourites1(Favourite entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Friends(Friend entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Friends(Friend entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Friends1(Friend entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Friends1(Friend entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_GroupBans(GroupBan entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupBans(GroupBan entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupEvents(GroupEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupEvents(GroupEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupEventsAttenders(GroupEventsAttender entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupEventsAttenders(GroupEventsAttender entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupEventsComments(GroupEventsComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupEventsComments(GroupEventsComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupPhotos(GroupPhoto entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupPhotos(GroupPhoto entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupPollsAnswers(GroupPollsAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupPosts(GroupPost entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupPosts(GroupPost entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupTopics(GroupTopic entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupTopics(GroupTopic entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupTopicSubscriptions(GroupTopicSubscription entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Interests(Interest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Interests(Interest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Interests1(Interest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Interests1(Interest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_MessagesSandboxes(MessagesSandbox entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MessagesSandboxes(MessagesSandbox entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PaymentHistories(PaymentHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PaymentHistories(PaymentHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoAccesses(PhotoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoAccesses(PhotoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoAccesses1(PhotoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_PhotoAccesses1(PhotoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_PhotoAlbums(PhotoAlbum entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoAlbums(PhotoAlbum entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoComments(PhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoComments(PhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoContestRanks(PhotoContestRank entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoContestVotes(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoContestVotes(PhotoContestVote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoNotes(PhotoNote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoNotes(PhotoNote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhotoRatings(PhotoRating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhotoRatings(PhotoRating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProfileAnswers(ProfileAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProfileAnswers(ProfileAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProfileViews(ProfileView entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProfileViews(ProfileView entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProfileViews1(ProfileView entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ProfileViews1(ProfileView entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ratings1(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Ratings1(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Relationships1(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Relationships1(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_SavedSearches(SavedSearch entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SavedSearches(SavedSearch entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UnlockedSections(UnlockedSection entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UnlockedSections(UnlockedSection entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UnlockedSections1(UnlockedSection entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UnlockedSections1(UnlockedSection entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserScoresLogs(UserScoresLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserScoresLogs(UserScoresLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_VerifiedUsers(VerifiedUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_VerifiedUsers(VerifiedUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_VerifiedUsers1(VerifiedUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_VerifiedUsers1(VerifiedUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_VideoAccesses(VideoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_VideoAccesses(VideoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_VideoAccesses1(VideoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_VideoAccesses1(VideoAccess entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_VideoEmbeds(VideoEmbed entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_VideoEmbeds(VideoEmbed entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class UserScoresLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _usl_id;
		
		private string _u_username;
		
		private System.DateTime _usl_timestamp;
		
		private int _usl_score;
		
		private string _usl_notes;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusl_idChanging(int value);
    partial void Onusl_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onusl_timestampChanging(System.DateTime value);
    partial void Onusl_timestampChanged();
    partial void Onusl_scoreChanging(int value);
    partial void Onusl_scoreChanged();
    partial void Onusl_notesChanging(string value);
    partial void Onusl_notesChanged();
    #endregion
		
		public UserScoresLog()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usl_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int usl_id
		{
			get
			{
				return this._usl_id;
			}
			set
			{
				if ((this._usl_id != value))
				{
					this.Onusl_idChanging(value);
					this.SendPropertyChanging();
					this._usl_id = value;
					this.SendPropertyChanged("usl_id");
					this.Onusl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usl_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime usl_timestamp
		{
			get
			{
				return this._usl_timestamp;
			}
			set
			{
				if ((this._usl_timestamp != value))
				{
					this.Onusl_timestampChanging(value);
					this.SendPropertyChanging();
					this._usl_timestamp = value;
					this.SendPropertyChanged("usl_timestamp");
					this.Onusl_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usl_score", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int usl_score
		{
			get
			{
				return this._usl_score;
			}
			set
			{
				if ((this._usl_score != value))
				{
					this.Onusl_scoreChanging(value);
					this.SendPropertyChanging();
					this._usl_score = value;
					this.SendPropertyChanged("usl_score");
					this.Onusl_scoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usl_notes", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string usl_notes
		{
			get
			{
				return this._usl_notes;
			}
			set
			{
				if ((this._usl_notes != value))
				{
					this.Onusl_notesChanging(value);
					this.SendPropertyChanging();
					this._usl_notes = value;
					this.SendPropertyChanged("usl_notes");
					this.Onusl_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserScoresLog", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserScoresLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserScoresLogs.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VerifiedUsers")]
	public partial class VerifiedUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _vu_verifiedby;
		
		private string _vu_verifieduser;
		
		private System.DateTime _vu_timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvu_verifiedbyChanging(string value);
    partial void Onvu_verifiedbyChanged();
    partial void Onvu_verifieduserChanging(string value);
    partial void Onvu_verifieduserChanged();
    partial void Onvu_timestampChanging(System.DateTime value);
    partial void Onvu_timestampChanged();
    #endregion
		
		public VerifiedUser()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_verifiedby", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string vu_verifiedby
		{
			get
			{
				return this._vu_verifiedby;
			}
			set
			{
				if ((this._vu_verifiedby != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvu_verifiedbyChanging(value);
					this.SendPropertyChanging();
					this._vu_verifiedby = value;
					this.SendPropertyChanged("vu_verifiedby");
					this.Onvu_verifiedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_verifieduser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string vu_verifieduser
		{
			get
			{
				return this._vu_verifieduser;
			}
			set
			{
				if ((this._vu_verifieduser != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvu_verifieduserChanging(value);
					this.SendPropertyChanging();
					this._vu_verifieduser = value;
					this.SendPropertyChanged("vu_verifieduser");
					this.Onvu_verifieduserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime vu_timestamp
		{
			get
			{
				return this._vu_timestamp;
			}
			set
			{
				if ((this._vu_timestamp != value))
				{
					this.Onvu_timestampChanging(value);
					this.SendPropertyChanging();
					this._vu_timestamp = value;
					this.SendPropertyChanged("vu_timestamp");
					this.Onvu_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VerifiedUser", Storage="_User", ThisKey="vu_verifiedby", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.VerifiedUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.VerifiedUsers.Add(this);
						this._vu_verifiedby = value.u_username;
					}
					else
					{
						this._vu_verifiedby = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VerifiedUser1", Storage="_User1", ThisKey="vu_verifieduser", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.VerifiedUsers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.VerifiedUsers1.Add(this);
						this._vu_verifieduser = value.u_username;
					}
					else
					{
						this._vu_verifieduser = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class VideoAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _va_videoviewer;
		
		private string _va_videoowner;
		
		private System.DateTime _va_dateaccessgranted;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onva_videoviewerChanging(string value);
    partial void Onva_videoviewerChanged();
    partial void Onva_videoownerChanging(string value);
    partial void Onva_videoownerChanged();
    partial void Onva_dateaccessgrantedChanging(System.DateTime value);
    partial void Onva_dateaccessgrantedChanged();
    #endregion
		
		public VideoAccess()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_va_videoviewer", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string va_videoviewer
		{
			get
			{
				return this._va_videoviewer;
			}
			set
			{
				if ((this._va_videoviewer != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onva_videoviewerChanging(value);
					this.SendPropertyChanging();
					this._va_videoviewer = value;
					this.SendPropertyChanged("va_videoviewer");
					this.Onva_videoviewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_va_videoowner", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string va_videoowner
		{
			get
			{
				return this._va_videoowner;
			}
			set
			{
				if ((this._va_videoowner != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onva_videoownerChanging(value);
					this.SendPropertyChanging();
					this._va_videoowner = value;
					this.SendPropertyChanged("va_videoowner");
					this.Onva_videoownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_va_dateaccessgranted", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime va_dateaccessgranted
		{
			get
			{
				return this._va_dateaccessgranted;
			}
			set
			{
				if ((this._va_dateaccessgranted != value))
				{
					this.Onva_dateaccessgrantedChanging(value);
					this.SendPropertyChanging();
					this._va_dateaccessgranted = value;
					this.SendPropertyChanged("va_dateaccessgranted");
					this.Onva_dateaccessgrantedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoAccess", Storage="_User", ThisKey="va_videoowner", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.VideoAccesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.VideoAccesses.Add(this);
						this._va_videoowner = value.u_username;
					}
					else
					{
						this._va_videoowner = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoAccess1", Storage="_User1", ThisKey="va_videoviewer", OtherKey="u_username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.VideoAccesses1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.VideoAccesses1.Add(this);
						this._va_videoviewer = value.u_username;
					}
					else
					{
						this._va_videoviewer = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VideoEmbeds")]
	public partial class VideoEmbed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ve_id;
		
		private string _u_username;
		
		private string _ve_thumburl;
		
		private string _ve_videourl;
		
		private string _ve_title;
		
		private int _ve_sourcetype;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onve_idChanging(int value);
    partial void Onve_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onve_thumburlChanging(string value);
    partial void Onve_thumburlChanged();
    partial void Onve_videourlChanging(string value);
    partial void Onve_videourlChanged();
    partial void Onve_titleChanging(string value);
    partial void Onve_titleChanged();
    partial void Onve_sourcetypeChanging(int value);
    partial void Onve_sourcetypeChanged();
    #endregion
		
		public VideoEmbed()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ve_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ve_id
		{
			get
			{
				return this._ve_id;
			}
			set
			{
				if ((this._ve_id != value))
				{
					this.Onve_idChanging(value);
					this.SendPropertyChanging();
					this._ve_id = value;
					this.SendPropertyChanged("ve_id");
					this.Onve_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ve_thumburl", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ve_thumburl
		{
			get
			{
				return this._ve_thumburl;
			}
			set
			{
				if ((this._ve_thumburl != value))
				{
					this.Onve_thumburlChanging(value);
					this.SendPropertyChanging();
					this._ve_thumburl = value;
					this.SendPropertyChanged("ve_thumburl");
					this.Onve_thumburlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ve_videourl", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ve_videourl
		{
			get
			{
				return this._ve_videourl;
			}
			set
			{
				if ((this._ve_videourl != value))
				{
					this.Onve_videourlChanging(value);
					this.SendPropertyChanging();
					this._ve_videourl = value;
					this.SendPropertyChanged("ve_videourl");
					this.Onve_videourlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ve_title", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ve_title
		{
			get
			{
				return this._ve_title;
			}
			set
			{
				if ((this._ve_title != value))
				{
					this.Onve_titleChanging(value);
					this.SendPropertyChanging();
					this._ve_title = value;
					this.SendPropertyChanged("ve_title");
					this.Onve_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ve_sourcetype", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ve_sourcetype
		{
			get
			{
				return this._ve_sourcetype;
			}
			set
			{
				if ((this._ve_sourcetype != value))
				{
					this.Onve_sourcetypeChanging(value);
					this.SendPropertyChanging();
					this._ve_sourcetype = value;
					this.SendPropertyChanged("ve_sourcetype");
					this.Onve_sourcetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoEmbed", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.VideoEmbeds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.VideoEmbeds.Add(this);
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VideoProfiles")]
	public partial class VideoProfile
	{
		
		private string _u_username;
		
		private bool _vp_approved;
		
		private bool _vp_private;
		
		public VideoProfile()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this._u_username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool vp_approved
		{
			get
			{
				return this._vp_approved;
			}
			set
			{
				if ((this._vp_approved != value))
				{
					this._vp_approved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_private", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool vp_private
		{
			get
			{
				return this._vp_private;
			}
			set
			{
				if ((this._vp_private != value))
				{
					this._vp_private = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VideoUploads")]
	public partial class VideoUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vu_id;
		
		private string _u_username;
		
		private bool _vu_processed;
		
		private bool _vu_approved;
		
		private bool _vu_private;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvu_idChanging(int value);
    partial void Onvu_idChanged();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onvu_processedChanging(bool value);
    partial void Onvu_processedChanged();
    partial void Onvu_approvedChanging(bool value);
    partial void Onvu_approvedChanged();
    partial void Onvu_privateChanging(bool value);
    partial void Onvu_privateChanged();
    #endregion
		
		public VideoUpload()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int vu_id
		{
			get
			{
				return this._vu_id;
			}
			set
			{
				if ((this._vu_id != value))
				{
					this.Onvu_idChanging(value);
					this.SendPropertyChanging();
					this._vu_id = value;
					this.SendPropertyChanged("vu_id");
					this.Onvu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_processed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool vu_processed
		{
			get
			{
				return this._vu_processed;
			}
			set
			{
				if ((this._vu_processed != value))
				{
					this.Onvu_processedChanging(value);
					this.SendPropertyChanging();
					this._vu_processed = value;
					this.SendPropertyChanged("vu_processed");
					this.Onvu_processedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool vu_approved
		{
			get
			{
				return this._vu_approved;
			}
			set
			{
				if ((this._vu_approved != value))
				{
					this.Onvu_approvedChanging(value);
					this.SendPropertyChanging();
					this._vu_approved = value;
					this.SendPropertyChanged("vu_approved");
					this.Onvu_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vu_private", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool vu_private
		{
			get
			{
				return this._vu_private;
			}
			set
			{
				if ((this._vu_private != value))
				{
					this.Onvu_privateChanging(value);
					this.SendPropertyChanging();
					this._vu_private = value;
					this.SendPropertyChanged("vu_private");
					this.Onvu_privateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TwitterCredentials")]
	public partial class TwitterCredential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _tc_username;
		
		private string _tc_password;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Ontc_usernameChanging(string value);
    partial void Ontc_usernameChanged();
    partial void Ontc_passwordChanging(string value);
    partial void Ontc_passwordChanged();
    #endregion
		
		public TwitterCredential()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tc_username", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tc_username
		{
			get
			{
				return this._tc_username;
			}
			set
			{
				if ((this._tc_username != value))
				{
					this.Ontc_usernameChanging(value);
					this.SendPropertyChanging();
					this._tc_username = value;
					this.SendPropertyChanged("tc_username");
					this.Ontc_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tc_password", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tc_password
		{
			get
			{
				return this._tc_password;
			}
			set
			{
				if ((this._tc_password != value))
				{
					this.Ontc_passwordChanging(value);
					this.SendPropertyChanging();
					this._tc_password = value;
					this.SendPropertyChanged("tc_password");
					this.Ontc_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TwitterCredential", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TwitterCredential = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TwitterCredential = this;
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookCredentials")]
	public partial class FacebookCredential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _u_username;
		
		private string _fc_token;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_usernameChanging(string value);
    partial void Onu_usernameChanged();
    partial void Onfc_tokenChanging(string value);
    partial void Onfc_tokenChanged();
    #endregion
		
		public FacebookCredential()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string u_username
		{
			get
			{
				return this._u_username;
			}
			set
			{
				if ((this._u_username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_usernameChanging(value);
					this.SendPropertyChanging();
					this._u_username = value;
					this.SendPropertyChanged("u_username");
					this.Onu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fc_token", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string fc_token
		{
			get
			{
				return this._fc_token;
			}
			set
			{
				if ((this._fc_token != value))
				{
					this.Onfc_tokenChanging(value);
					this.SendPropertyChanging();
					this._fc_token = value;
					this.SendPropertyChanged("fc_token");
					this.Onfc_tokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FacebookCredential", Storage="_User", ThisKey="u_username", OtherKey="u_username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FacebookCredential = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FacebookCredential = this;
						this._u_username = value.u_username;
					}
					else
					{
						this._u_username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SaveEventResult
	{
		
		private System.Nullable<int> _Id;
		
		public SaveEventResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
